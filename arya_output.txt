RULES ADDED
PARSE TABLE FILLED WITH -1

PARSE TABLE POPULATED


size = 128
_______________________
<<<driver program>>> 
start 
 declare num, k:integer; 
 declare A:array [4..10] of integer; 
for( k in 6..10) 
start 
 A[k]:=(nu
______________________


TWIN BUFFER INITIALIZED

STACK CREATED
tokenize got the input as <<<

TOKEN GIVEN BY DFA IS DRIVERDEF
Popped Non Terminal program
Popped Non Terminal moduleDeclarations
Popped Non Terminal otherModules
Popped Non Terminal driverModule
Popped Terminal DRIVERDEF
TREENODE ADDED
tokenize got the input as driver
TOKEN GIVEN BY DFA IS DRIVER
Popped Terminal DRIVER
TREENODE ADDED
tokenize got the input as  
tokenize got the input as program
TOKEN GIVEN BY DFA IS PROGRAM
Popped Terminal PROGRAM
TREENODE ADDED
tokenize got the input as >>>
TOKEN GIVEN BY DFA IS DRIVERENDDEF
Popped Terminal DRIVERENDDEF
TREENODE ADDED
tokenize got the input as  
tokenize got the input as 

tokenize got the input as start
TOKEN GIVEN BY DFA IS START
Popped Non Terminal moduleDef
Popped Terminal START
TREENODE ADDED
tokenize got the input as  
tokenize got the input as 

tokenize got the input as  
tokenize got the input as declare
TOKEN GIVEN BY DFA IS DECLARE
Popped Non Terminal statements
Popped Non Terminal statement
Popped Non Terminal declareStmt
Popped Terminal DECLARE
TREENODE ADDED
tokenize got the input as  
tokenize got the input as num
TOKEN GIVEN BY DFA IS ID
Popped Non Terminal idList
Popped Terminal ID
TREENODE ADDED
tokenize got the input as ,
TOKEN GIVEN BY DFA IS COMMA
Popped Non Terminal leftFactored_idList
Popped Terminal COMMA
TREENODE ADDED
tokenize got the input as  
tokenize got the input as k
TOKEN GIVEN BY DFA IS ID
Popped Terminal ID
TREENODE ADDED
tokenize got the input as :
TOKEN GIVEN BY DFA IS COLON
Popped Non Terminal leftFactored_idList
Popped Terminal COLON
TREENODE ADDED
tokenize got the input as integer
TOKEN GIVEN BY DFA IS INTEGER
Popped Non Terminal dataType
Popped Terminal INTEGER
TREENODE ADDED
tokenize got the input as ;
TOKEN GIVEN BY DFA IS SEMICOL
Popped Terminal SEMICOL
TREENODE ADDED
tokenize got the input as  
tokenize got the input as 

tokenize got the input as  
tokenize got the input as declare
TOKEN GIVEN BY DFA IS DECLARE
Popped Non Terminal statements
Popped Non Terminal statement
Popped Non Terminal declareStmt
Popped Terminal DECLARE
TREENODE ADDED
tokenize got the input as  
tokenize got the input as A
TOKEN GIVEN BY DFA IS ID
Popped Non Terminal idList
Popped Terminal ID
TREENODE ADDED
tokenize got the input as :
TOKEN GIVEN BY DFA IS COLON
Popped Non Terminal leftFactored_idList
Popped Terminal COLON
TREENODE ADDED
tokenize got the input as array
TOKEN GIVEN BY DFA IS ARRAY
Popped Non Terminal dataType
Popped Terminal ARRAY
TREENODE ADDED
tokenize got the input as  
tokenize got the input as [
TOKEN GIVEN BY DFA IS SQBO
Popped Terminal SQBO
TREENODE ADDED
tokenize got the input as 4
TOKEN GIVEN BY DFA IS NUM
Popped Non Terminal arrRange
Popped Non Terminal sign
Popped Non Terminal leftFactored_arrRange
Popped Terminal NUM
TREENODE ADDED
tokenize got the input as ..
TOKEN GIVEN BY DFA IS RANGEOP
Popped Terminal RANGEOP
TREENODE ADDED
tokenize got the input as 10
TOKEN GIVEN BY DFA IS NUM
Popped Non Terminal sign
Popped Terminal NUM
TREENODE ADDED
tokenize got the input as ]
TOKEN GIVEN BY DFA IS SQBC
Popped Terminal SQBC
TREENODE ADDED
tokenize got the input as  
tokenize got the input as of
TOKEN GIVEN BY DFA IS OF
Popped Terminal OF
TREENODE ADDED
tokenize got the input as  
tokenize got the input as integer
TOKEN GIVEN BY DFA IS INTEGER
Popped Non Terminal type
Popped Terminal INTEGER
TREENODE ADDED
tokenize got the input as ;
TOKEN GIVEN BY DFA IS SEMICOL
Popped Terminal SEMICOL
TREENODE ADDED
tokenize got the input as  
tokenize got the input as 

tokenize got the input as for
TOKEN GIVEN BY DFA IS FOR
Popped Non Terminal statements
Popped Non Terminal statement
Popped Non Terminal iterativeStmt
Popped Terminal FOR
TREENODE ADDED
tokenize got the input as (
TOKEN GIVEN BY DFA IS BO
Popped Terminal BO
TREENODE ADDED
tokenize got the input as  
tokenize got the input as k
TOKEN GIVEN BY DFA IS ID
Popped Terminal ID
TREENODE ADDED
tokenize got the input as  
tokenize got the input as in
TOKEN GIVEN BY DFA IS IN
Popped Terminal IN
TREENODE ADDED
tokenize got the input as  
tokenize got the input as 6
TOKEN GIVEN BY DFA IS NUM
Popped Non Terminal sign
Popped Terminal NUM
TREENODE ADDED
tokenize got the input as ..
TOKEN GIVEN BY DFA IS RANGEOP
Popped Terminal RANGEOP
TREENODE ADDED
tokenize got the input as 10
TOKEN GIVEN BY DFA IS NUM
Popped Non Terminal sign
Popped Terminal NUM
TREENODE ADDED
tokenize got the input as )
TOKEN GIVEN BY DFA IS BC
Popped Terminal BC
TREENODE ADDED
tokenize got the input as  
tokenize got the input as 

tokenize got the input as start
TOKEN GIVEN BY DFA IS START
Popped Terminal START
TREENODE ADDED
tokenize got the input as  
tokenize got the input as 

tokenize got the input as  
tokenize got the input as A
TOKEN GIVEN BY DFA IS ID
Popped Non Terminal statements
Popped Non Terminal statement
Popped Non Terminal simpleStmt
Popped Non Terminal assignmentStmt
Popped Terminal ID
TREENODE ADDED
tokenize got the input as [
TOKEN GIVEN BY DFA IS SQBO
Popped Non Terminal whichStmt
Popped Non Terminal lvalueARRStmt
Popped Terminal SQBO
TREENODE ADDED
tokenize got the input as k
TOKEN GIVEN BY DFA IS ID
Popped Non Terminal arithmeticExprWArr
Popped Non Terminal termWArr
Popped Non Terminal signedFactorWArr
Popped Non Terminal sign
Popped Non Terminal factorWArr
Popped Terminal ID
TREENODE ADDED
tokenize got the input as ]
TOKEN GIVEN BY DFA IS SQBC
Popped Non Terminal leftFactored_arithmeticExprWArr
Popped Terminal SQBC
TREENODE ADDED
tokenize got the input as :=
TOKEN GIVEN BY DFA IS ASSIGNOP
Popped Terminal ASSIGNOP
TREENODE ADDED
tokenize got the input as (
TOKEN GIVEN BY DFA IS BO
Popped Non Terminal expression
Popped Non Terminal arithmeticBooleanExpr
Popped Non Terminal arithmeticExpr
Popped Non Terminal term
Popped Non Terminal factor
Popped Terminal BO
TREENODE ADDED


size = 106
_______________________
m - k)*(num - k); 
 print(A[k]); 
end  
[num]:=use module arraysum with parameters A; 
print(num); 
 
end ÿ
______________________

tokenize got the input as num
TOKEN GIVEN BY DFA IS ID
Popped Non Terminal expression
Popped Non Terminal arithmeticBooleanExpr
Popped Non Terminal arithmeticExpr
Popped Non Terminal term
Popped Non Terminal factor
Popped Non Terminal var
Popped Terminal ID
TREENODE ADDED
tokenize got the input as  
tokenize got the input as -
TOKEN GIVEN BY DFA IS MINUS
Popped Non Terminal whichId
Popped Non Terminal leftFactored_term
Popped Non Terminal leftFactored_arithmeticExpr
Popped Non Terminal pm
Popped Terminal MINUS
TREENODE ADDED
tokenize got the input as  
tokenize got the input as k
TOKEN GIVEN BY DFA IS ID
Popped Non Terminal term
Popped Non Terminal factor
Popped Non Terminal var
Popped Terminal ID
TREENODE ADDED
tokenize got the input as )
TOKEN GIVEN BY DFA IS BC
Popped Non Terminal whichId
Popped Non Terminal leftFactored_term
Popped Non Terminal leftFactored_arithmeticExpr
Popped Non Terminal relationalTerm
Popped Non Terminal logicalTerm
Popped Terminal BC
TREENODE ADDED
tokenize got the input as *
TOKEN GIVEN BY DFA IS MUL
Popped Non Terminal leftFactored_term
Popped Non Terminal md
Popped Terminal MUL
TREENODE ADDED
tokenize got the input as (
TOKEN GIVEN BY DFA IS BO
Popped Non Terminal factor
Popped Terminal BO
TREENODE ADDED
tokenize got the input as num
TOKEN GIVEN BY DFA IS ID
Popped Non Terminal expression
Popped Non Terminal arithmeticBooleanExpr
Popped Non Terminal arithmeticExpr
Popped Non Terminal term
Popped Non Terminal factor
Popped Non Terminal var
Popped Terminal ID
TREENODE ADDED
tokenize got the input as  
tokenize got the input as -
TOKEN GIVEN BY DFA IS MINUS
Popped Non Terminal whichId
Popped Non Terminal leftFactored_term
Popped Non Terminal leftFactored_arithmeticExpr
Popped Non Terminal pm
Popped Terminal MINUS
TREENODE ADDED
tokenize got the input as  
tokenize got the input as k
TOKEN GIVEN BY DFA IS ID
Popped Non Terminal term
Popped Non Terminal factor
Popped Non Terminal var
Popped Terminal ID
TREENODE ADDED
tokenize got the input as )
TOKEN GIVEN BY DFA IS BC
Popped Non Terminal whichId
Popped Non Terminal leftFactored_term
Popped Non Terminal leftFactored_arithmeticExpr
Popped Non Terminal relationalTerm
Popped Non Terminal logicalTerm
Popped Terminal BC
TREENODE ADDED
tokenize got the input as ;
TOKEN GIVEN BY DFA IS SEMICOL
Popped Non Terminal leftFactored_term
Popped Non Terminal leftFactored_arithmeticExpr
Popped Non Terminal relationalTerm
Popped Non Terminal logicalTerm
Popped Terminal SEMICOL
TREENODE ADDED
tokenize got the input as  
tokenize got the input as 

tokenize got the input as  
tokenize got the input as print
TOKEN GIVEN BY DFA IS PRINT
Popped Non Terminal statements
Popped Non Terminal statement
Popped Non Terminal ioStmt
Popped Terminal PRINT
TREENODE ADDED
tokenize got the input as (
TOKEN GIVEN BY DFA IS BO
Popped Terminal BO
TREENODE ADDED
tokenize got the input as A
TOKEN GIVEN BY DFA IS ID
Popped Non Terminal leftFactored_ioStmt
Popped Non Terminal var
Popped Terminal ID
TREENODE ADDED
tokenize got the input as [
TOKEN GIVEN BY DFA IS SQBO
Popped Non Terminal whichId
Popped Terminal SQBO
TREENODE ADDED
tokenize got the input as k
TOKEN GIVEN BY DFA IS ID
Popped Non Terminal sign
Popped Non Terminal leftFactored_whichId
Popped Terminal ID
TREENODE ADDED
tokenize got the input as ]
TOKEN GIVEN BY DFA IS SQBC
Popped Terminal SQBC
TREENODE ADDED
tokenize got the input as )
TOKEN GIVEN BY DFA IS BC
Popped Terminal BC
TREENODE ADDED
tokenize got the input as ;
TOKEN GIVEN BY DFA IS SEMICOL
Popped Terminal SEMICOL
TREENODE ADDED
tokenize got the input as  
tokenize got the input as 

tokenize got the input as end
TOKEN GIVEN BY DFA IS END
Popped Non Terminal statements
Popped Terminal END
TREENODE ADDED
tokenize got the input as  
tokenize got the input as  
tokenize got the input as 

tokenize got the input as [
TOKEN GIVEN BY DFA IS SQBO
Popped Non Terminal statements
Popped Non Terminal statement
Popped Non Terminal simpleStmt
Popped Non Terminal moduleReuseStmt
Popped Non Terminal optional
Popped Terminal SQBO
TREENODE ADDED
tokenize got the input as num
TOKEN GIVEN BY DFA IS ID
Popped Non Terminal idList
Popped Terminal ID
TREENODE ADDED
tokenize got the input as ]
TOKEN GIVEN BY DFA IS SQBC
Popped Non Terminal leftFactored_idList
Popped Terminal SQBC
TREENODE ADDED
tokenize got the input as :=
TOKEN GIVEN BY DFA IS ASSIGNOP
Popped Terminal ASSIGNOP
TREENODE ADDED
tokenize got the input as use
TOKEN GIVEN BY DFA IS USE
Popped Terminal USE
TREENODE ADDED
tokenize got the input as  
tokenize got the input as module
TOKEN GIVEN BY DFA IS MODULE
Popped Terminal MODULE
TREENODE ADDED
tokenize got the input as  
tokenize got the input as arraysum
TOKEN GIVEN BY DFA IS ID
Popped Terminal ID
TREENODE ADDED
tokenize got the input as  
tokenize got the input as with
TOKEN GIVEN BY DFA IS WITH
Popped Terminal WITH
TREENODE ADDED
tokenize got the input as  
tokenize got the input as parameters
TOKEN GIVEN BY DFA IS PARAMETERS
Popped Terminal PARAMETERS
TREENODE ADDED
tokenize got the input as  
tokenize got the input as A
TOKEN GIVEN BY DFA IS ID
Popped Non Terminal idList
Popped Terminal ID
TREENODE ADDED
tokenize got the input as ;
TOKEN GIVEN BY DFA IS SEMICOL
Popped Non Terminal leftFactored_idList
Popped Terminal SEMICOL
TREENODE ADDED
tokenize got the input as  
tokenize got the input as 

tokenize got the input as print
TOKEN GIVEN BY DFA IS PRINT
Popped Non Terminal statements
Popped Non Terminal statement
Popped Non Terminal ioStmt
Popped Terminal PRINT
TREENODE ADDED
tokenize got the input as (
TOKEN GIVEN BY DFA IS BO
Popped Terminal BO
TREENODE ADDED
tokenize got the input as num
TOKEN GIVEN BY DFA IS ID
Popped Non Terminal leftFactored_ioStmt
Popped Non Terminal var
Popped Terminal ID
TREENODE ADDED
tokenize got the input as )
TOKEN GIVEN BY DFA IS BC
Popped Non Terminal whichId
Popped Terminal BC
TREENODE ADDED
tokenize got the input as ;
TOKEN GIVEN BY DFA IS SEMICOL
Popped Terminal SEMICOL
TREENODE ADDED
tokenize got the input as  
tokenize got the input as 

tokenize got the input as  
tokenize got the input as 

tokenize got the input as end
TOKEN GIVEN BY DFA IS END
Popped Non Terminal statements
Popped Terminal END
TREENODE ADDED
tokenize got the input as  
Tokenized EOF , sending it for parsing
TOKEN GIVEN BY DFA IS EOF

PRINTING PARSE TREE
Non Terminal = 0
GOING DOWN
Non Terminal = 1
GOING DOWN
Non Terminal = 2
GOING RIGHT
Non Terminal = 4
GOING RIGHT
Non Terminal = 5
GOING DOWN
Terminal = 42
GOING RIGHT
Terminal = 9
GOING RIGHT
Terminal = 10
GOING RIGHT
Terminal = 43
GOING RIGHT
Non Terminal = 17
GOING DOWN
Terminal = 5
GOING RIGHT
Non Terminal = 18
GOING DOWN
Non Terminal = 19
GOING DOWN
Non Terminal = 56
GOING DOWN
Terminal = 7
GOING RIGHT
Non Terminal = 33
GOING DOWN
Terminal = 54
GOING RIGHT
Non Terminal = 34
GOING DOWN
Terminal = 47
GOING RIGHT
Terminal = 54
GOING RIGHT
Non Terminal = 34
GOING LEFT
GOING LEFT
GOING UP
GOING LEFT
GOING UP
GOING RIGHT
Terminal = 44
GOING RIGHT
Non Terminal = 12
GOING DOWN
Terminal = 0
GOING UP
GOING RIGHT
Terminal = 46
GOING LEFT
GOING LEFT
GOING LEFT
GOING LEFT
GOING UP
GOING UP
GOING RIGHT
Non Terminal = 18
GOING DOWN
Non Terminal = 19
GOING DOWN
Non Terminal = 56
GOING DOWN
Terminal = 7
GOING RIGHT
Non Terminal = 33
GOING DOWN
Terminal = 54
GOING RIGHT
Non Terminal = 34
GOING LEFT
GOING UP
GOING RIGHT
Terminal = 44
GOING RIGHT
Non Terminal = 12
GOING DOWN
Terminal = 4
GOING RIGHT
Terminal = 49
GOING RIGHT
Non Terminal = 13
GOING DOWN
Non Terminal = 15
GOING RIGHT
Non Terminal = 14
GOING DOWN
Terminal = 55
GOING RIGHT
Terminal = 45
GOING RIGHT
Non Terminal = 15
GOING RIGHT
Terminal = 55
GOING LEFT
GOING LEFT
GOING LEFT
GOING UP
GOING LEFT
GOING UP
GOING RIGHT
Terminal = 50
GOING RIGHT
Terminal = 3
GOING RIGHT
Non Terminal = 16
GOING DOWN
Terminal = 0
GOING UP
GOING LEFT
GOING LEFT
GOING LEFT
GOING LEFT
GOING LEFT
GOING UP
GOING RIGHT
Terminal = 46
GOING LEFT
GOING LEFT
GOING LEFT
GOING LEFT
GOING UP
GOING UP
GOING RIGHT
Non Terminal = 18
GOING DOWN
Non Terminal = 19
GOING DOWN
Non Terminal = 62
GOING DOWN
Terminal = 19
GOING RIGHT
Terminal = 51
GOING RIGHT
Terminal = 54
GOING RIGHT
Terminal = 20
GOING RIGHT
Non Terminal = 15
GOING RIGHT
Terminal = 55
GOING RIGHT
Terminal = 45
GOING RIGHT
Non Terminal = 15
GOING RIGHT
Terminal = 55
GOING RIGHT
Terminal = 52
GOING RIGHT
Terminal = 5
GOING RIGHT
Non Terminal = 18
GOING DOWN
Non Terminal = 19
GOING DOWN
Non Terminal = 26
GOING DOWN
Non Terminal = 27
GOING DOWN
Terminal = 54
GOING RIGHT
Non Terminal = 28
GOING DOWN
Non Terminal = 30
GOING DOWN
Terminal = 49
GOING RIGHT
Non Terminal = 48
GOING DOWN
Non Terminal = 50
GOING DOWN
Non Terminal = 52
GOING DOWN
Non Terminal = 15
GOING RIGHT
Non Terminal = 53
GOING DOWN
Terminal = 54
GOING UP
GOING LEFT
GOING UP
GOING RIGHT
EPSILON
GOING LEFT
GOING UP
GOING RIGHT
Non Terminal = 49
GOING LEFT
GOING UP
GOING RIGHT
Terminal = 50
GOING RIGHT
Terminal = 48
GOING RIGHT
Non Terminal = 35
GOING DOWN
Non Terminal = 38
GOING DOWN
Non Terminal = 41
GOING DOWN
Non Terminal = 45
GOING DOWN
Non Terminal = 47
GOING DOWN
Terminal = 51
GOING RIGHT
Non Terminal = 35
GOING DOWN
Non Terminal = 38
GOING DOWN
Non Terminal = 41
GOING DOWN
Non Terminal = 45
GOING DOWN
Non Terminal = 47
GOING DOWN
Non Terminal = 23
GOING DOWN
Terminal = 54
GOING RIGHT
Non Terminal = 24
GOING LEFT
GOING UP
GOING UP
GOING RIGHT
Non Terminal = 46
GOING LEFT
GOING UP
GOING RIGHT
Non Terminal = 42
GOING DOWN
Non Terminal = 43
GOING DOWN
Terminal = 31
GOING UP
GOING RIGHT
Non Terminal = 45
GOING DOWN
Non Terminal = 47
GOING DOWN
Non Terminal = 23
GOING DOWN
Terminal = 54
GOING RIGHT
Non Terminal = 24
GOING LEFT
GOING UP
GOING UP
GOING RIGHT
Non Terminal = 46
GOING LEFT
GOING UP
GOING RIGHT
Non Terminal = 42
GOING LEFT
GOING LEFT
GOING UP
GOING LEFT
GOING UP
GOING RIGHT
Non Terminal = 40
GOING LEFT
GOING UP
GOING RIGHT
Non Terminal = 39
GOING LEFT
GOING UP
GOING RIGHT
Terminal = 52
GOING LEFT
GOING LEFT
GOING UP
GOING RIGHT
Non Terminal = 46
GOING DOWN
Non Terminal = 44
GOING DOWN
Terminal = 32
GOING UP
GOING RIGHT
Non Terminal = 47
GOING DOWN
Terminal = 51
GOING RIGHT
Non Terminal = 