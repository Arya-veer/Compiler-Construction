            FIRST AND FOLLOW SETS AUTOMATED         
            BOTH LEXICAL AND SYNTAX ANALYSIS MODULE IMPLEMENTED         
            MODULES WORK WITH ALL GIVEN TEST CASES
Enter your option: RUNNING PARSER

                      [32m FIRST AND FOLLOW AUTOMATED [0m

GIVEN SOURCE CODE IS SYNTACTICALLY CORRECT




LINE IS 11

function1




LINE IS 12

function2




LINE IS 13

function4




LINE IS 15

var_demo_array




LINE IS 19

declare




LINE IS 20

get_value




LINE IS 21

declare




LINE IS 22

declare




LINE IS 23

:=




LINE IS 24

function2




LINE IS 25

:=





LINE IS 26

:=




LINE IS 27

:=


LINE 27: ARRAY VARIABLE CAN NOT BE USED FOR THIS OPERATOR

LINE 27: ARRAY VARIABLE CAN NOT BE USED FOR THIS OPERATOR

LINE 27: TYPE ERROR OCCURED
LINE 27:CAN NOT ASSIGN VALUE TO AN ARRAY



LINE IS 28

declare




LINE IS 29

:=




LINE IS 30

declare




LINE IS 31

while




LINE IS 33

declare




LINE IS 34

declare




LINE IS 35

declare




LINE IS 36

:=





LINE IS 37

function1




LINE IS 38

:=


LINE 38: ARRAY INDEX OUT OF BOUNDS 



LINE IS 39

:=


LINE 39: TYPE ERROR OCCURED
LINE 39: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH



LINE IS 40

declare




LINE IS 41

function1


LINE 31: WHILE LOOP VARIABLE MUST BE ASSIGED VALUE ATLEAST ONCE



LINE IS 43

:=


LINE 43: ARRAY VARIABLE CAN NOT BE USED FOR THIS OPERATOR

LINE 43: TYPE ERROR OCCURED
LINE 43: TYPE ERROR OCCURED
LINE 43: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH



LINE IS 44

:=




LINE IS 45

:=




LINE IS 46

function1




LINE IS 47

print


LINE 17,OUTPUT PARAM n IS NOT ASSIGNED ANY VALUE



LINE IS 50

function2




LINE IS 53

declare




LINE IS 54

:=




LINE IS 58

f1




LINE IS 62

declare




LINE IS 63

declare




LINE IS 64

declare




LINE IS 65

declare




LINE IS 66

get_value




LINE IS 67

get_value




LINE IS 68

declare




LINE IS 69

declare




LINE IS 70

get_value




LINE IS 71

function2




LINE IS 72

declare




LINE IS 73

:=





LINE IS 74

var_demo_array




LINE IS 75

:=





LINE IS 76

function1




LINE IS 77

:=





LINE IS 80

var_demo_array




LINE IS 81

for




LINE IS 83

:=


LINE 83: TYPE ERROR OCCURED
LINE 83: TYPE ERROR OCCURED
LINE 83: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH



LINE IS 84

declare




LINE IS 85

declare




LINE IS 86

:=




LINE IS 87

:=




LINE IS 88

function1




LINE IS 89

:=


LINE 89: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH



LINE IS 91

:=




LINE IS 92

function3




LINE IS 93

:=




LINE IS 94

:=




LINE IS 95

:=


LINE 95: ARRAY INDEX OUT OF BOUNDS 



LINE IS 96

:=


LINE 60,OUTPUT PARAM n IS NOT ASSIGNED ANY VALUE



LINE IS 101

function3




LINE IS 105

:=




LINE IS 108

function4




LINE IS 112

:=




LINE IS 115

driver




LINE IS 117

declare




LINE IS 118

declare




LINE IS 119

:=




LINE IS 120

declare




LINE IS 121

function4




LINE IS 122

:=




LINE IS 123

get_value




LINE IS 124

declare




LINE IS 125

var_demo_array




LINE IS 126

var_demo_array




LINE IS 127

declare




LINE IS 128

:=


LINE 128: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH



LINE IS 129

get_value




LINE IS 130

declare




LINE IS 131

get_value




LINE IS 132

:=




LINE IS 133

:=


LINE 133: TYPE ERROR OCCURED
LINE 133: TYPE ERROR OCCURED
LINE 133: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH



LINE IS 134

:=


LINE 134: TYPE ERROR OCCURED
LINE 134: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH



LINE IS 135

:=




LINE IS 136

declare




LINE IS 137

:=




LINE IS 138

:=


LINE 138: ARRAY INDEX OUT OF BOUNDS 



LINE IS 139

declare




LINE IS 140

:=


LINE 140:CAN NOT ASSIGN VALUE TO AN ARRAY



LINE IS 141

:=




LINE IS 142

:=





LINE IS 143

:=


LINE 143: ARRAY CAN NOT BE ASSIGNED DUE TO RANGE MISMATCH



LINE IS 146

function1




LINE IS 150

declare




LINE IS 151

declare




LINE IS 152

get_value




LINE IS 153

:=





LINE IS 154

:=




LINE IS 155

declare




LINE IS 156

:=




LINE IS 157

get_value




LINE IS 158

:=




LINE IS 159

:=


LINE 148,OUTPUT PARAM R3 IS NOT ASSIGNED ANY VALUE


0: 
1: 
2: 
3: 
4: 
5: 
6: 
7: 
8: 
9: 
10: 
11: 
12: function1 -1 1 


13: function2 -1 1 


14: function3 -1 0 


15: function4 -1 0 


16: 
17: f1 -1 0 


18: 
19: 
20: var_demo_array -1 0 


21: 
22: 
23: 
24: 
25: 
26: 
27: 
28: 
29: 
30: 
31: 
32: 
33: 
34: 
35: 
36: 
37: 
38: 
39: 
40: 
41: 
42: 
43: 
44: driver -1 0 


45: 
46: 
47: 
48: 
49: 
50: 
51: 
52: 
53: 
54: 
55: 
56: 
57: 
58: 
59: 
60: 
61: 
62: 
63: 
64: 
65: 
66: 
67: 
68: 




					TRAVERSAL 1 ENDED 

LINE 41: TYPE DID NOT MATCH FOR PARAM NUMBER 4
LINE 46: TYPE DID NOT MATCH FOR PARAM NUMBER 1
LINE 88: VARIABLE NOT DEFINED IN SCOPE

LINE 88: TYPE DID NOT MATCH FOR PARAM NUMBER 4


					TRAVERSAL 2 ENDED 

data		function1		[146-10000]		boolean		yes		static		[100-150]		50		0		0		

weight		function1		[146-10000]		real		no		**		**		4		0		0		

length		function1		[146-10000]		integer		no		**		**		2		0		0		

b		function1		[146-10000]		real		yes		static		[35-50]		60		0		0		

q		function1		[146-10000]		integer		no		**		**		2		0		0		

R1		function1		[146-10000]		real		no		**		**		4		0		0		

R2		function1		[146-10000]		integer		no		**		**		2		0		0		

R3		function1		[146-10000]		boolean		no		**		**		1		0		0		

R4		function1		[146-10000]		integer		no		**		**		2		0		0		

a		function1		[146-10000]		real		no		**		**		4		6		1		

e		function1		[146-10000]		integer		no		**		**		2		0		1		

f		function1		[146-10000]		integer		no		**		**		2		2		1		

g		function1		[146-10000]		boolean		yes		static		[100-150]		50		4		1		

h		function1		[146-10000]		boolean		yes		static		[100-150]		50		5		1		

x		function2		[50-58]		integer		no		**		**		2		0		0		

y		function2		[50-58]		integer		no		**		**		2		0		0		

temp		function2		[50-58]		integer		no		**		**		2		0		1		

a		function3		[101-108]		real		no		**		**		4		0		0		

b		function3		[101-108]		real		no		**		**		4		0		0		

c		function3		[101-108]		real		no		**		**		4		0		0		

a		function4		[108-115]		boolean		no		**		**		1		0		0		

b		function4		[108-115]		boolean		no		**		**		1		0		0		

c		function4		[108-115]		boolean		no		**		**		1		0		0		

a		f1		[58-101]		integer		yes		static		[10-30]		40		0		0		

b		f1		[58-101]		integer		yes		static		[10-30]		40		0		0		

c		f1		[58-101]		real		no		**		**		4		0		0		

m		f1		[58-101]		boolean		no		**		**		1		0		0		

n		f1		[58-101]		integer		no		**		**		2		0		0		

x		f1		[58-101]		real		no		**		**		4		0		1		

y		f1		[58-101]		real		no		**		**		4		4		1		

A		f1		[58-101]		integer		yes		static		[4-10]		12		20		1		

B		f1		[58-101]		integer		yes		static		[4-10]		12		22		1		

C		f1		[58-101]		integer		yes		static		[10-30]		40		34		1		

D		f1		[58-101]		integer		yes		static		[10-30]		40		32		1		

E		f1		[58-101]		integer		yes		static		[2-20]		36		16		1		

var4		f1		[58-101]		boolean		yes		static		[100-150]		50		19		1		

k		f1		[58-101]		integer		no		**		**		2		12		1		

p		f1		[58-101]		real		no		**		**		4		8		1		

y1		f1		[58-101]		integer		no		**		**		2		14		1		

Var1		f1		[58-101]		real		yes		static		[35-50]		60		24		1		

Var2		f1		[58-101]		real		yes		static		[35-50]		60		28		1		

Var3		f1		[58-101]		boolean		yes		static		[100-150]		50		18		1		

v		f1		[58-101]		real		no		**		**		4		6		2		

int1		f1		[58-101]		integer		no		**		**		2		10		2		

k		f1		[58-101]		integer		no		**		**		2		0		2		

u		f1		[58-101]		real		no		**		**		4		2		2		

x		var_demo_array		[15-50]		integer		no		**		**		2		0		0		

m		var_demo_array		[15-50]		integer		yes		static		[2-20]		36		0		0		

p		var_demo_array		[15-50]		real		no		**		**		4		0		0		

n		var_demo_array		[15-50]		integer		no		**		**		2		0		0		

k		var_demo_array		[15-50]		boolean		no		**		**		1		0		0		

b4		var_demo_array		[15-50]		boolean		yes		static		[100-150]		50		6		1		

b7		var_demo_array		[15-50]		real		yes		static		[35-50]		60		17		1		

a		var_demo_array		[15-50]		integer		no		**		**		2		0		1		

b		var_demo_array		[15-50]		integer		no		**		**		2		2		1		

h		var_demo_array		[15-50]		integer		no		**		**		2		4		1		

v1		var_demo_array		[15-50]		real		no		**		**		4		9		1		

v2		var_demo_array		[15-50]		real		no		**		**		4		13		1		

p		var_demo_array		[15-50]		integer		yes		static		[2-20]		36		7		1		

b5		var_demo_array		[15-50]		real		yes		static		[35-50]		60		6		2		

b6		var_demo_array		[15-50]		real		yes		static		[35-50]		60		10		2		

b		var_demo_array		[15-50]		integer		yes		static		[2-20]		36		4		2		

v3		var_demo_array		[15-50]		integer		no		**		**		2		14		2		

p		var_demo_array		[15-50]		integer		no		**		**		2		0		2		

u		var_demo_array		[15-50]		integer		no		**		**		2		2		2		

w		driver		[115-146]		integer		no		**		**		2		31		1		

A		driver		[115-146]		integer		no		**		**		2		2		1		

B		driver		[115-146]		integer		yes		static		[2-20]		36		11		1		

C		driver		[115-146]		integer		yes		static		[2-20]		36		13		1		

value		driver		[115-146]		real		no		**		**		4		19		1		

D		driver		[115-146]		integer		yes		static		[20-40]		40		33		1		

v_1_2_3		driver		[115-146]		integer		no		**		**		2		0		1		

a		driver		[115-146]		integer		no		**		**		2		15		1		

b		driver		[115-146]		integer		no		**		**		2		17		1		

u1		driver		[115-146]		boolean		no		**		**		1		4		1		

u2		driver		[115-146]		boolean		no		**		**		1		5		1		

k		driver		[115-146]		boolean		no		**		**		1		6		1		

p		driver		[115-146]		real		no		**		**		4		7		1		

q		driver		[115-146]		real		no		**		**		4		23		1		

r		driver		[115-146]		real		no		**		**		4		27		1		

Enter your option: 