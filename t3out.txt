Enter your option: 2
Skipped Comment
Skipped Comment
Skipped Comment
LINE NO: 6         LEXEME: <<         TOKEN: DEF
LINE NO: 6         LEXEME: module         TOKEN: MODULE
LINE NO: 6         LEXEME: var_demo         TOKEN: ID
LINE NO: 6         LEXEME: >>         TOKEN: ENDDEF
LINE NO: 7         LEXEME: takes         TOKEN: TAKES
LINE NO: 7         LEXEME: input         TOKEN: INPUT
LINE NO: 7         LEXEME: [         TOKEN: SQBO
LINE NO: 7         LEXEME: x         TOKEN: ID
LINE NO: 7         LEXEME: :         TOKEN: COLON
LINE NO: 7         LEXEME: integer         TOKEN: INTEGER
LINE NO: 7         LEXEME: ,         TOKEN: COMMA
LINE NO: 7         LEXEME: w         TOKEN: ID
LINE NO: 7         LEXEME: :         TOKEN: COLON
LINE NO: 7         LEXEME: boolean         TOKEN: BOOLEAN
LINE NO: 7         LEXEME: ,         TOKEN: COMMA
LINE NO: 7         LEXEME: p         TOKEN: ID
LINE NO: 7         LEXEME: :         TOKEN: COLON
LINE NO: 7         LEXEME: real         TOKEN: REAL
LINE NO: 7         LEXEME: ]         TOKEN: SQBC
LINE NO: 7         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 8         LEXEME: returns         TOKEN: RETURNS
LINE NO: 8         LEXEME: [         TOKEN: SQBO
LINE NO: 8         LEXEME: m         TOKEN: ID
LINE NO: 8         LEXEME: :         TOKEN: COLON
LINE NO: 8         LEXEME: integer         TOKEN: INTEGER
LINE NO: 8         LEXEME: ,         TOKEN: COMMA
LINE NO: 8         LEXEME: n         TOKEN: ID
LINE NO: 8         LEXEME: :         TOKEN: COLON
LINE NO: 8         LEXEME: integer         TOKEN: INTEGER
LINE NO: 8         LEXEME: ,         TOKEN: COMMA
LINE NO: 8         LEXEME: u         TOKEN: ID
LINE NO: 8         LEXEME: :         TOKEN: COLON
LINE NO: 8         LEXEME: boolean         TOKEN: BOOLEAN
LINE NO: 8         LEXEME: ]         TOKEN: SQBC
LINE NO: 8         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 9         LEXEME: start         TOKEN: START
LINE NO: 10         LEXEME: declare         TOKEN: DECLARE
LINE NO: 10         LEXEME: a         TOKEN: ID
LINE NO: 10         LEXEME: ,         TOKEN: COMMA
LINE NO: 10         LEXEME: b         TOKEN: ID
LINE NO: 10         LEXEME: :         TOKEN: COLON
LINE NO: 10         LEXEME: integer         TOKEN: INTEGER
LINE NO: 10         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 11         LEXEME: m         TOKEN: ID
LINE NO: 11         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 11         LEXEME: 56         TOKEN: NUM
LINE NO: 11         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 12         LEXEME: n         TOKEN: ID
LINE NO: 12         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 12         LEXEME: 20         TOKEN: NUM
LINE NO: 12         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 13         LEXEME: declare         TOKEN: DECLARE
LINE NO: 13         LEXEME: m         TOKEN: ID
LINE NO: 13         LEXEME: ,         TOKEN: COMMA
LINE NO: 13         LEXEME: n         TOKEN: ID
LINE NO: 13         LEXEME: :         TOKEN: COLON
LINE NO: 13         LEXEME: boolean         TOKEN: BOOLEAN
LINE NO: 13         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 14         LEXEME: get_value         TOKEN: GET_VALUE
LINE NO: 14         LEXEME: (         TOKEN: BO
LINE NO: 14         LEXEME: b         TOKEN: ID
LINE NO: 14         LEXEME: )         TOKEN: BC
LINE NO: 14         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 15         LEXEME: declare         TOKEN: DECLARE
LINE NO: 15         LEXEME: value         TOKEN: ID
LINE NO: 15         LEXEME: ,         TOKEN: COMMA
LINE NO: 15         LEXEME: q         TOKEN: ID
LINE NO: 15         LEXEME: ,         TOKEN: COMMA
LINE NO: 15         LEXEME: r         TOKEN: ID
LINE NO: 15         LEXEME: :         TOKEN: COLON
LINE NO: 15         LEXEME: real         TOKEN: REAL
LINE NO: 15         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 16         LEXEME: get_value         TOKEN: GET_VALUE
LINE NO: 16         LEXEME: (         TOKEN: BO
LINE NO: 16         LEXEME: q         TOKEN: ID
LINE NO: 16         LEXEME: )         TOKEN: BC
LINE NO: 16         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 17         LEXEME: r         TOKEN: ID
LINE NO: 17         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 17         LEXEME: 2367.000000         TOKEN: RNUM
LINE NO: 17         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 18         LEXEME: for         TOKEN: FOR
LINE NO: 18         LEXEME: (         TOKEN: BO
LINE NO: 18         LEXEME: a         TOKEN: ID
LINE NO: 18         LEXEME: in         TOKEN: IN
LINE NO: 18         LEXEME: 1         TOKEN: NUM
LINE NO: 18         LEXEME: ..         TOKEN: RANGEOP
LINE NO: 18         LEXEME: 10         TOKEN: NUM
LINE NO: 18         LEXEME: )         TOKEN: BC
LINE NO: 19         LEXEME: start         TOKEN: START
LINE NO: 20         LEXEME: declare         TOKEN: DECLARE
LINE NO: 20         LEXEME: b         TOKEN: ID
LINE NO: 20         LEXEME: ,         TOKEN: COMMA
LINE NO: 20         LEXEME: q         TOKEN: ID
LINE NO: 20         LEXEME: :         TOKEN: COLON
LINE NO: 20         LEXEME: integer         TOKEN: INTEGER
LINE NO: 20         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 21         LEXEME: declare         TOKEN: DECLARE
LINE NO: 21         LEXEME: r         TOKEN: ID
LINE NO: 21         LEXEME: :         TOKEN: COLON
LINE NO: 21         LEXEME: boolean         TOKEN: BOOLEAN
LINE NO: 21         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 22         LEXEME: get_value         TOKEN: GET_VALUE
LINE NO: 22         LEXEME: (         TOKEN: BO
LINE NO: 22         LEXEME: b         TOKEN: ID
LINE NO: 22         LEXEME: )         TOKEN: BC
LINE NO: 22         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 23         LEXEME: q         TOKEN: ID
LINE NO: 23         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 23         LEXEME: 18         TOKEN: NUM
LINE NO: 23         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 24         LEXEME: r         TOKEN: ID
LINE NO: 24         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 24         LEXEME: b         TOKEN: ID
LINE NO: 24         LEXEME: +         TOKEN: PLUS
LINE NO: 24         LEXEME: q         TOKEN: ID
LINE NO: 24         LEXEME: *         TOKEN: MUL
LINE NO: 24         LEXEME: a         TOKEN: ID
LINE NO: 24         LEXEME: +         TOKEN: PLUS
LINE NO: 24         LEXEME: x         TOKEN: ID
LINE NO: 24         LEXEME: <         TOKEN: LT
LINE NO: 24         LEXEME: 100         TOKEN: NUM
LINE NO: 24         LEXEME: AND         TOKEN: AND
LINE NO: 24         LEXEME: w         TOKEN: ID
LINE NO: 24         LEXEME: OR         TOKEN: OR
LINE NO: 24         LEXEME: m         TOKEN: ID
LINE NO: 24         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 25         LEXEME: print         TOKEN: PRINT
LINE NO: 25         LEXEME: (         TOKEN: BO
LINE NO: 25         LEXEME: a         TOKEN: ID
LINE NO: 25         LEXEME: )         TOKEN: BC
LINE NO: 25         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 26         LEXEME: declare         TOKEN: DECLARE
LINE NO: 26         LEXEME: q         TOKEN: ID
LINE NO: 26         LEXEME: ,         TOKEN: COMMA
LINE NO: 26         LEXEME: r         TOKEN: ID
LINE NO: 26         LEXEME: :         TOKEN: COLON
LINE NO: 26         LEXEME: real         TOKEN: REAL
LINE NO: 26         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 27         LEXEME: print         TOKEN: PRINT
LINE NO: 27         LEXEME: (         TOKEN: BO
LINE NO: 27         LEXEME: r         TOKEN: ID
LINE NO: 27         LEXEME: )         TOKEN: BC
LINE NO: 27         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 28         LEXEME: q         TOKEN: ID
LINE NO: 28         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 28         LEXEME: b         TOKEN: ID
LINE NO: 28         LEXEME: -         TOKEN: MINUS
LINE NO: 28         LEXEME: a         TOKEN: ID
LINE NO: 28         LEXEME: *         TOKEN: MUL
LINE NO: 28         LEXEME: x         TOKEN: ID
LINE NO: 28         LEXEME: +         TOKEN: PLUS
LINE NO: 28         LEXEME: y         TOKEN: ID
LINE NO: 28         LEXEME: *         TOKEN: MUL
LINE NO: 28         LEXEME: 20         TOKEN: NUM
LINE NO: 28         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 29         LEXEME: end         TOKEN: END
LINE NO: 30         LEXEME: value         TOKEN: ID
LINE NO: 30         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 30         LEXEME: p         TOKEN: ID
LINE NO: 30         LEXEME: +         TOKEN: PLUS
LINE NO: 30         LEXEME: q         TOKEN: ID
LINE NO: 30         LEXEME: *         TOKEN: MUL
LINE NO: 30         LEXEME: r         TOKEN: ID
LINE NO: 30         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 31         LEXEME: m         TOKEN: ID
LINE NO: 31         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 31         LEXEME: a         TOKEN: ID
LINE NO: 31         LEXEME: <=         TOKEN: LE
LINE NO: 31         LEXEME: x         TOKEN: ID
LINE NO: 31         LEXEME: AND         TOKEN: AND
LINE NO: 31         LEXEME: true         TOKEN: true
LINE NO: 31         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 32         LEXEME: u         TOKEN: ID
LINE NO: 32         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 32         LEXEME: true         TOKEN: true
LINE NO: 32         LEXEME: AND         TOKEN: AND
LINE NO: 32         LEXEME: false         TOKEN: false
LINE NO: 32         LEXEME: OR         TOKEN: OR
LINE NO: 32         LEXEME: v         TOKEN: ID
LINE NO: 32         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 33         LEXEME: u         TOKEN: ID
LINE NO: 33         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 33         LEXEME: a         TOKEN: ID
LINE NO: 33         LEXEME: <=         TOKEN: LE
LINE NO: 33         LEXEME: b         TOKEN: ID
LINE NO: 33         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 34         LEXEME: declare         TOKEN: DECLARE
LINE NO: 34         LEXEME: w         TOKEN: ID
LINE NO: 34         LEXEME: :         TOKEN: COLON
LINE NO: 34         LEXEME: integer         TOKEN: INTEGER
LINE NO: 34         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 35         LEXEME: w         TOKEN: ID
LINE NO: 35         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 35         LEXEME: 23         TOKEN: NUM
LINE NO: 35         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 36         LEXEME: n         TOKEN: ID
LINE NO: 36         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 36         LEXEME: a         TOKEN: ID
LINE NO: 36         LEXEME: *         TOKEN: MUL
LINE NO: 36         LEXEME: 25         TOKEN: NUM
LINE NO: 36         LEXEME: +         TOKEN: PLUS
LINE NO: 36         LEXEME: 100         TOKEN: NUM
LINE NO: 36         LEXEME: <         TOKEN: LT
LINE NO: 36         LEXEME: w         TOKEN: ID
LINE NO: 36         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 37         LEXEME: declare         TOKEN: DECLARE
LINE NO: 37         LEXEME: b         TOKEN: ID
LINE NO: 37         LEXEME: ,         TOKEN: COMMA
LINE NO: 37         LEXEME: c         TOKEN: ID
LINE NO: 37         LEXEME: :         TOKEN: COLON
LINE NO: 37         LEXEME: real         TOKEN: REAL
LINE NO: 37         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 38         LEXEME: c         TOKEN: ID
LINE NO: 38         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 38         LEXEME: value         TOKEN: ID
LINE NO: 38         LEXEME: -         TOKEN: MINUS
LINE NO: 38         LEXEME: q         TOKEN: ID
LINE NO: 38         LEXEME: +         TOKEN: PLUS
LINE NO: 38         LEXEME: r         TOKEN: ID
LINE NO: 38         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 39         LEXEME: w         TOKEN: ID
LINE NO: 39         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 39         LEXEME: w         TOKEN: ID
LINE NO: 39         LEXEME: +         TOKEN: PLUS
LINE NO: 39         LEXEME: 5         TOKEN: NUM
LINE NO: 39         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 40         LEXEME: end         TOKEN: END
LINE NO: 43         LEXEME: <<         TOKEN: DEF
LINE NO: 43         LEXEME: module         TOKEN: MODULE
LINE NO: 43         LEXEME: compute         TOKEN: ID
LINE NO: 43         LEXEME: >>         TOKEN: ENDDEF
LINE NO: 44         LEXEME: takes         TOKEN: TAKES
LINE NO: 44         LEXEME: input         TOKEN: INPUT
LINE NO: 44         LEXEME: [         TOKEN: SQBO
LINE NO: 44         LEXEME: a         TOKEN: ID
LINE NO: 44         LEXEME: :         TOKEN: COLON
LINE NO: 44         LEXEME: integer         TOKEN: INTEGER
LINE NO: 44         LEXEME: ,         TOKEN: COMMA
LINE NO: 44         LEXEME: b         TOKEN: ID
LINE NO: 44         LEXEME: :         TOKEN: COLON
LINE NO: 44         LEXEME: integer         TOKEN: INTEGER
LINE NO: 44         LEXEME: ,         TOKEN: COMMA
LINE NO: 44         LEXEME: s         TOKEN: ID
LINE NO: 44         LEXEME: :         TOKEN: COLON
LINE NO: 44         LEXEME: real         TOKEN: REAL
LINE NO: 44         LEXEME: ,         TOKEN: COMMA
LINE NO: 44         LEXEME: c         TOKEN: ID
LINE NO: 44         LEXEME: :         TOKEN: COLON
LINE NO: 44         LEXEME: integer         TOKEN: INTEGER
LINE NO: 44         LEXEME: ]         TOKEN: SQBC
LINE NO: 44         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 45         LEXEME: returns         TOKEN: RETURNS
LINE NO: 45         LEXEME: [         TOKEN: SQBO
LINE NO: 45         LEXEME: res_1         TOKEN: ID
LINE NO: 45         LEXEME: :         TOKEN: COLON
LINE NO: 45         LEXEME: boolean         TOKEN: BOOLEAN
LINE NO: 45         LEXEME: ,         TOKEN: COMMA
LINE NO: 45         LEXEME: res_2_a         TOKEN: ID
LINE NO: 45         LEXEME: :         TOKEN: COLON
LINE NO: 45         LEXEME: integer         TOKEN: INTEGER
LINE NO: 45         LEXEME: ,         TOKEN: COMMA
LINE NO: 45         LEXEME: res_2_b         TOKEN: ID
LINE NO: 45         LEXEME: :         TOKEN: COLON
LINE NO: 45         LEXEME: real         TOKEN: REAL
LINE NO: 45         LEXEME: ]         TOKEN: SQBC
LINE NO: 45         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 46         LEXEME: start         TOKEN: START
LINE NO: 47         LEXEME: declare         TOKEN: DECLARE
LINE NO: 47         LEXEME: new         TOKEN: ID
LINE NO: 47         LEXEME: :         TOKEN: COLON
LINE NO: 47         LEXEME: boolean         TOKEN: BOOLEAN
LINE NO: 47         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 48         LEXEME: declare         TOKEN: DECLARE
LINE NO: 48         LEXEME: abc_1         TOKEN: ID
LINE NO: 48         LEXEME: ,         TOKEN: COMMA
LINE NO: 48         LEXEME: pqr_2         TOKEN: ID
LINE NO: 48         LEXEME: :         TOKEN: COLON
LINE NO: 48         LEXEME: integer         TOKEN: INTEGER
LINE NO: 48         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 49         LEXEME: pqr_2         TOKEN: ID
LINE NO: 49         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 49         LEXEME: abc_1         TOKEN: ID
LINE NO: 49         LEXEME: +         TOKEN: PLUS
LINE NO: 49         LEXEME: 6         TOKEN: NUM
LINE NO: 49         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 50         LEXEME: declare         TOKEN: DECLARE
LINE NO: 50         LEXEME: abc_1         TOKEN: ID
LINE NO: 50         LEXEME: :         TOKEN: COLON
LINE NO: 50         LEXEME: real         TOKEN: REAL
LINE NO: 50         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 51         LEXEME: res_2_a         TOKEN: ID
LINE NO: 51         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 51         LEXEME: -         TOKEN: MINUS
LINE NO: 51         LEXEME: (         TOKEN: BO
LINE NO: 51         LEXEME: a         TOKEN: ID
LINE NO: 51         LEXEME: *         TOKEN: MUL
LINE NO: 51         LEXEME: b         TOKEN: ID
LINE NO: 51         LEXEME: -         TOKEN: MINUS
LINE NO: 51         LEXEME: c         TOKEN: ID
LINE NO: 51         LEXEME: /         TOKEN: DIV
LINE NO: 51         LEXEME: pqr_2         TOKEN: ID
LINE NO: 51         LEXEME: )         TOKEN: BC
LINE NO: 51         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 52         LEXEME: declare         TOKEN: DECLARE
LINE NO: 52         LEXEME: s         TOKEN: ID
LINE NO: 52         LEXEME: :         TOKEN: COLON
LINE NO: 52         LEXEME: integer         TOKEN: INTEGER
LINE NO: 52         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 53         LEXEME: declare         TOKEN: DECLARE
LINE NO: 53         LEXEME: q4         TOKEN: ID
LINE NO: 53         LEXEME: ,         TOKEN: COMMA
LINE NO: 53         LEXEME: q5         TOKEN: ID
LINE NO: 53         LEXEME: :         TOKEN: COLON
LINE NO: 53         LEXEME: real         TOKEN: REAL
LINE NO: 53         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 54         LEXEME: res_2_b         TOKEN: ID
LINE NO: 54         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 54         LEXEME: (         TOKEN: BO
LINE NO: 54         LEXEME: res_2_b         TOKEN: ID
LINE NO: 54         LEXEME: +         TOKEN: PLUS
LINE NO: 54         LEXEME: p         TOKEN: ID
LINE NO: 54         LEXEME: )         TOKEN: BC
LINE NO: 54         LEXEME: *         TOKEN: MUL
LINE NO: 54         LEXEME: 12         TOKEN: NUM
LINE NO: 54         LEXEME: +         TOKEN: PLUS
LINE NO: 54         LEXEME: 0.223400         TOKEN: RNUM
LINE NO: 54         LEXEME: *         TOKEN: MUL
LINE NO: 54         LEXEME: q5         TOKEN: ID
LINE NO: 54         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 55         LEXEME: declare         TOKEN: DECLARE
LINE NO: 55         LEXEME: m         TOKEN: ID
LINE NO: 55         LEXEME: ,         TOKEN: COMMA
LINE NO: 55         LEXEME: n         TOKEN: ID
LINE NO: 55         LEXEME: :         TOKEN: COLON
LINE NO: 55         LEXEME: boolean         TOKEN: BOOLEAN
LINE NO: 55         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 56         LEXEME: s         TOKEN: ID
LINE NO: 56         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 56         LEXEME: 12         TOKEN: NUM
LINE NO: 56         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 57         LEXEME: res_1         TOKEN: ID
LINE NO: 57         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 57         LEXEME: a         TOKEN: ID
LINE NO: 57         LEXEME: <=         TOKEN: LE
LINE NO: 57         LEXEME: b         TOKEN: ID
LINE NO: 57         LEXEME: AND         TOKEN: AND
LINE NO: 57         LEXEME: c         TOKEN: ID
LINE NO: 57         LEXEME: >=         TOKEN: GE
LINE NO: 57         LEXEME: a         TOKEN: ID
LINE NO: 57         LEXEME: OR         TOKEN: OR
LINE NO: 57         LEXEME: a         TOKEN: ID
LINE NO: 57         LEXEME: <         TOKEN: LT
LINE NO: 57         LEXEME: 0         TOKEN: NUM
LINE NO: 57         LEXEME: AND         TOKEN: AND
LINE NO: 57         LEXEME: false         TOKEN: false
LINE NO: 57         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 59         LEXEME: m         TOKEN: ID
LINE NO: 59         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 59         LEXEME: n         TOKEN: ID
LINE NO: 59         LEXEME: AND         TOKEN: AND
LINE NO: 59         LEXEME: (         TOKEN: BO
LINE NO: 59         LEXEME: abc_1         TOKEN: ID
LINE NO: 59         LEXEME: <=         TOKEN: LE
LINE NO: 59         LEXEME: pqr_2         TOKEN: ID
LINE NO: 59         LEXEME: )         TOKEN: BC
LINE NO: 59         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 60         LEXEME: while         TOKEN: WHILE
LINE NO: 60         LEXEME: (         TOKEN: BO
LINE NO: 60         LEXEME: m         TOKEN: ID
LINE NO: 60         LEXEME: OR         TOKEN: OR
LINE NO: 60         LEXEME: a         TOKEN: ID
LINE NO: 60         LEXEME: >=         TOKEN: GE
LINE NO: 60         LEXEME: b         TOKEN: ID
LINE NO: 60         LEXEME: AND         TOKEN: AND
LINE NO: 60         LEXEME: res_2_b         TOKEN: ID
LINE NO: 60         LEXEME: <=         TOKEN: LE
LINE NO: 60         LEXEME: 129540.000000         TOKEN: RNUM
LINE NO: 60         LEXEME: )         TOKEN: BC
LINE NO: 61         LEXEME: start         TOKEN: START
LINE NO: 62         LEXEME: b         TOKEN: ID
LINE NO: 62         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 62         LEXEME: b         TOKEN: ID
LINE NO: 62         LEXEME: +         TOKEN: PLUS
LINE NO: 62         LEXEME: 1         TOKEN: NUM
LINE NO: 62         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 63         LEXEME: m         TOKEN: ID
LINE NO: 63         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 63         LEXEME: n         TOKEN: ID
LINE NO: 63         LEXEME: OR         TOKEN: OR
LINE NO: 63         LEXEME: b         TOKEN: ID
LINE NO: 63         LEXEME: >=         TOKEN: GE
LINE NO: 63         LEXEME: res_2_a         TOKEN: ID
LINE NO: 63         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 64         LEXEME: declare         TOKEN: DECLARE
LINE NO: 64         LEXEME: w1         TOKEN: ID
LINE NO: 64         LEXEME: ,         TOKEN: COMMA
LINE NO: 64         LEXEME: w2         TOKEN: ID
LINE NO: 64         LEXEME: :         TOKEN: COLON
LINE NO: 64         LEXEME: integer         TOKEN: INTEGER
LINE NO: 64         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 65         LEXEME: declare         TOKEN: DECLARE
LINE NO: 65         LEXEME: abc_1         TOKEN: ID
LINE NO: 65         LEXEME: :         TOKEN: COLON
LINE NO: 65         LEXEME: integer         TOKEN: INTEGER
LINE NO: 65         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 66         LEXEME: switch         TOKEN: SWITCH
LINE NO: 66         LEXEME: (         TOKEN: BO
LINE NO: 66         LEXEME: m         TOKEN: ID
LINE NO: 66         LEXEME: )         TOKEN: BC
LINE NO: 67         LEXEME: start         TOKEN: START
LINE NO: 68         LEXEME: case         TOKEN: CASE
LINE NO: 68         LEXEME: true         TOKEN: true
LINE NO: 68         LEXEME: :         TOKEN: COLON
LINE NO: 68         LEXEME: declare         TOKEN: DECLARE
LINE NO: 68         LEXEME: w1         TOKEN: ID
LINE NO: 68         LEXEME: ,         TOKEN: COMMA
LINE NO: 68         LEXEME: s         TOKEN: ID
LINE NO: 68         LEXEME: ,         TOKEN: COMMA
LINE NO: 68         LEXEME: k         TOKEN: ID
LINE NO: 68         LEXEME: :         TOKEN: COLON
LINE NO: 68         LEXEME: real         TOKEN: REAL
LINE NO: 68         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 69         LEXEME: s         TOKEN: ID
LINE NO: 69         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 69         LEXEME: w1         TOKEN: ID
LINE NO: 69         LEXEME: +         TOKEN: PLUS
LINE NO: 69         LEXEME: 0.542400         TOKEN: RNUM
LINE NO: 69         LEXEME: +         TOKEN: PLUS
LINE NO: 69         LEXEME: q4         TOKEN: ID
LINE NO: 69         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 70         LEXEME: abc_1         TOKEN: ID
LINE NO: 70         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 70         LEXEME: w2         TOKEN: ID
LINE NO: 70         LEXEME: +         TOKEN: PLUS
LINE NO: 70         LEXEME: a         TOKEN: ID
LINE NO: 70         LEXEME: *         TOKEN: MUL
LINE NO: 70         LEXEME: pqr_2         TOKEN: ID
LINE NO: 70         LEXEME: -         TOKEN: MINUS
LINE NO: 70         LEXEME: c         TOKEN: ID
LINE NO: 70         LEXEME: *         TOKEN: MUL
LINE NO: 70         LEXEME: abc_1         TOKEN: ID
LINE NO: 70         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 71         LEXEME: break         TOKEN: BREAK
LINE NO: 71         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 72         LEXEME: case         TOKEN: CASE
LINE NO: 72         LEXEME: false         TOKEN: false
LINE NO: 72         LEXEME: :         TOKEN: COLON
LINE NO: 72         LEXEME: w1         TOKEN: ID
LINE NO: 72         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 72         LEXEME: w1         TOKEN: ID
LINE NO: 72         LEXEME: +         TOKEN: PLUS
LINE NO: 72         LEXEME: 59         TOKEN: NUM
LINE NO: 72         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 73         LEXEME: abc_1         TOKEN: ID
LINE NO: 73         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 73         LEXEME: w2         TOKEN: ID
LINE NO: 73         LEXEME: +         TOKEN: PLUS
LINE NO: 73         LEXEME: a         TOKEN: ID
LINE NO: 73         LEXEME: *         TOKEN: MUL
LINE NO: 73         LEXEME: pqr_2         TOKEN: ID
LINE NO: 73         LEXEME: -         TOKEN: MINUS
LINE NO: 73         LEXEME: c         TOKEN: ID
LINE NO: 73         LEXEME: *         TOKEN: MUL
LINE NO: 73         LEXEME: abc_1         TOKEN: ID
LINE NO: 73         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 74         LEXEME: break         TOKEN: BREAK
LINE NO: 74         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 75         LEXEME: end         TOKEN: END
LINE NO: 76         LEXEME: abc_1         TOKEN: ID
LINE NO: 76         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 76         LEXEME: 16         TOKEN: NUM
LINE NO: 76         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 77         LEXEME: w2         TOKEN: ID
LINE NO: 77         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 77         LEXEME: a         TOKEN: ID
LINE NO: 77         LEXEME: -         TOKEN: MINUS
LINE NO: 77         LEXEME: s         TOKEN: ID
LINE NO: 77         LEXEME: *         TOKEN: MUL
LINE NO: 77         LEXEME: abc_1         TOKEN: ID
LINE NO: 77         LEXEME: *         TOKEN: MUL
LINE NO: 77         LEXEME: c         TOKEN: ID
LINE NO: 77         LEXEME: -         TOKEN: MINUS
LINE NO: 77         LEXEME: pqr_2         TOKEN: ID
LINE NO: 77         LEXEME: +         TOKEN: PLUS
LINE NO: 77         LEXEME: w1         TOKEN: ID
LINE NO: 77         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 78         LEXEME: m         TOKEN: ID
LINE NO: 78         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 78         LEXEME: abc_1         TOKEN: ID
LINE NO: 78         LEXEME: <=         TOKEN: LE
LINE NO: 78         LEXEME: pqr_2         TOKEN: ID
LINE NO: 78         LEXEME: OR         TOKEN: OR
LINE NO: 78         LEXEME: res_1         TOKEN: ID
LINE NO: 78         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 79         LEXEME: w1         TOKEN: ID
LINE NO: 79         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 79         LEXEME: w2         TOKEN: ID
LINE NO: 79         LEXEME: *         TOKEN: MUL
LINE NO: 79         LEXEME: a         TOKEN: ID
LINE NO: 79         LEXEME: -         TOKEN: MINUS
LINE NO: 79         LEXEME: s         TOKEN: ID
LINE NO: 79         LEXEME: *         TOKEN: MUL
LINE NO: 79         LEXEME: k         TOKEN: ID
LINE NO: 79         LEXEME: *         TOKEN: MUL
LINE NO: 79         LEXEME: c         TOKEN: ID
LINE NO: 79         LEXEME: -         TOKEN: MINUS
LINE NO: 79         LEXEME: pqr_2         TOKEN: ID
LINE NO: 79         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 80         LEXEME: end         TOKEN: END
LINE NO: 81         LEXEME: m         TOKEN: ID
LINE NO: 81         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 81         LEXEME: m         TOKEN: ID
LINE NO: 81         LEXEME: OR         TOKEN: OR
LINE NO: 81         LEXEME: (         TOKEN: BO
LINE NO: 81         LEXEME: a         TOKEN: ID
LINE NO: 81         LEXEME: <=         TOKEN: LE
LINE NO: 81         LEXEME: b         TOKEN: ID
LINE NO: 81         LEXEME: )         TOKEN: BC
LINE NO: 81         LEXEME: AND         TOKEN: AND
LINE NO: 81         LEXEME: (         TOKEN: BO
LINE NO: 81         LEXEME: res_2         TOKEN: ID
LINE NO: 81         LEXEME: >=         TOKEN: GE
LINE NO: 81         LEXEME: 30.650000         TOKEN: RNUM
LINE NO: 81         LEXEME: )         TOKEN: BC
LINE NO: 81         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 82         LEXEME: res_1         TOKEN: ID
LINE NO: 82         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 82         LEXEME: (         TOKEN: BO
LINE NO: 82         LEXEME: true         TOKEN: true
LINE NO: 82         LEXEME: AND         TOKEN: AND
LINE NO: 82         LEXEME: c         TOKEN: ID
LINE NO: 82         LEXEME: ==         TOKEN: EQ
LINE NO: 82         LEXEME: b         TOKEN: ID
LINE NO: 82         LEXEME: )         TOKEN: BC
LINE NO: 82         LEXEME: OR         TOKEN: OR
LINE NO: 82         LEXEME: (         TOKEN: BO
LINE NO: 82         LEXEME: b         TOKEN: ID
LINE NO: 82         LEXEME: >         TOKEN: GT
LINE NO: 82         LEXEME: p         TOKEN: ID
LINE NO: 82         LEXEME: AND         TOKEN: AND
LINE NO: 82         LEXEME: (         TOKEN: BO
LINE NO: 82         LEXEME: a         TOKEN: ID
LINE NO: 82         LEXEME: <=         TOKEN: LE
LINE NO: 82         LEXEME: d         TOKEN: ID
LINE NO: 82         LEXEME: )         TOKEN: BC
LINE NO: 82         LEXEME: )         TOKEN: BC
LINE NO: 82         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 83         LEXEME: declare         TOKEN: DECLARE
LINE NO: 83         LEXEME: new         TOKEN: ID
LINE NO: 83         LEXEME: :         TOKEN: COLON
LINE NO: 83         LEXEME: integer         TOKEN: INTEGER
LINE NO: 83         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 84         LEXEME: new         TOKEN: ID
LINE NO: 84         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 84         LEXEME: a         TOKEN: ID
LINE NO: 84         LEXEME: <         TOKEN: LT
LINE NO: 84         LEXEME: b         TOKEN: ID
LINE NO: 84         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 85         LEXEME: print         TOKEN: PRINT
LINE NO: 85         LEXEME: (         TOKEN: BO
LINE NO: 85         LEXEME: res_1         TOKEN: ID
LINE NO: 85         LEXEME: )         TOKEN: BC
LINE NO: 85         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 86         LEXEME: end         TOKEN: END
LINE NO: 89         LEXEME: <<<         TOKEN: DRIVERDEF
LINE NO: 89         LEXEME: driver         TOKEN: DRIVER
LINE NO: 89         LEXEME: program         TOKEN: PROGRAM
LINE NO: 89         LEXEME: >>>         TOKEN: DRIVERENDDEF
LINE NO: 90         LEXEME: start         TOKEN: START
LINE NO: 91         LEXEME: declare         TOKEN: DECLARE
LINE NO: 91         LEXEME: v_1_2_3         TOKEN: ID
LINE NO: 91         LEXEME: :         TOKEN: COLON
LINE NO: 91         LEXEME: integer         TOKEN: INTEGER
LINE NO: 91         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 92         LEXEME: get_value         TOKEN: GET_VALUE
LINE NO: 92         LEXEME: (         TOKEN: BO
LINE NO: 92         LEXEME: v_1_2_43         TOKEN: ID
LINE NO: 92         LEXEME: )         TOKEN: BC
LINE NO: 92         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 93         LEXEME: declare         TOKEN: DECLARE
LINE NO: 93         LEXEME: result_         TOKEN: ID
LINE NO: 93         LEXEME: ,         TOKEN: COMMA
LINE NO: 93         LEXEME: v7         TOKEN: ID
LINE NO: 93         LEXEME: ,         TOKEN: COMMA
LINE NO: 93         LEXEME: v9         TOKEN: ID
LINE NO: 93         LEXEME: :         TOKEN: COLON
LINE NO: 93         LEXEME: integer         TOKEN: INTEGER
LINE NO: 93         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 94         LEXEME: declare         TOKEN: DECLARE
LINE NO: 94         LEXEME: u1         TOKEN: ID
LINE NO: 94         LEXEME: :         TOKEN: COLON
LINE NO: 94         LEXEME: boolean         TOKEN: BOOLEAN
LINE NO: 94         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 95         LEXEME: [         TOKEN: SQBO
LINE NO: 95         LEXEME: u1         TOKEN: ID
LINE NO: 95         LEXEME: ,         TOKEN: COMMA
LINE NO: 95         LEXEME: result_         TOKEN: ID
LINE NO: 95         LEXEME: ,         TOKEN: COMMA
LINE NO: 95         LEXEME: k         TOKEN: ID
LINE NO: 95         LEXEME: ]         TOKEN: SQBC
LINE NO: 95         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 95         LEXEME: use         TOKEN: USE
LINE NO: 95         LEXEME: module         TOKEN: MODULE
LINE NO: 95         LEXEME: compute         TOKEN: ID
LINE NO: 95         LEXEME: with         TOKEN: WITH
LINE NO: 95         LEXEME: parameters         TOKEN: PARAMETERS
LINE NO: 95         LEXEME: v_1_2_3         TOKEN: ID
LINE NO: 95         LEXEME: ,         TOKEN: COMMA
LINE NO: 95         LEXEME: v7         TOKEN: ID
LINE NO: 95         LEXEME: ,         TOKEN: COMMA
LINE NO: 95         LEXEME: v9         TOKEN: ID
LINE NO: 95         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 96         LEXEME: print         TOKEN: PRINT
LINE NO: 96         LEXEME: (         TOKEN: BO
LINE NO: 96         LEXEME: result_         TOKEN: ID
LINE NO: 96         LEXEME: )         TOKEN: BC
LINE NO: 96         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 97         LEXEME: declare         TOKEN: DECLARE
LINE NO: 97         LEXEME: u1         TOKEN: ID
LINE NO: 97         LEXEME: :         TOKEN: COLON
LINE NO: 97         LEXEME: real         TOKEN: REAL
LINE NO: 97         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 98         LEXEME: end         TOKEN: END
Enter your option: RUNNING PARSER

                      [32m FIRST AND FOLLOW AUTOMATED [0m

GIVEN SOURCE CODE IS SYNTACTICALLY CORRECT


       epsilon     epsilon        moduleDeclarations      YES

       ----------            moduleDeclarations             program      NO

       ----------            program             finalProgram      NO

<<         6            DEF     module      YES

       ----------            module             otherModules      NO

module         6            MODULE     module      YES

var_demo         6            ID     module      YES

>>         6            ENDDEF     module      YES

takes         7            TAKES     module      YES

input         7            INPUT     module      YES

[         7            SQBO     module      YES

x         7            ID     input_plist      YES

       ----------            input_plist             module      NO

:         7            COLON     input_plist      YES

integer         7            INTEGER     dataType      YES

       ----------            dataType             input_plist      NO

,         7            COMMA     leftFactored_input_plist      YES

       ----------            leftFactored_input_plist             input_plist      NO

w         7            ID     leftFactored_input_plist      YES

:         7            COLON     leftFactored_input_plist      YES

boolean         7            BOOLEAN     dataType      YES

       ----------            dataType             leftFactored_input_plist      NO

,         7            COMMA     leftFactored_input_plist      YES

       ----------            leftFactored_input_plist             leftFactored_input_plist      NO

p         7            ID     leftFactored_input_plist      YES

:         7            COLON     leftFactored_input_plist      YES

real         7            REAL     dataType      YES

       ----------            dataType             leftFactored_input_plist      NO

       epsilon     epsilon        leftFactored_input_plist      YES

       ----------            leftFactored_input_plist             leftFactored_input_plist      NO

]         7            SQBC     module      YES

;         7            SEMICOL     module      YES

returns         8            RETURNS     ret      YES

       ----------            ret             module      NO

[         8            SQBO     ret      YES

m         8            ID     output_plist      YES

       ----------            output_plist             ret      NO

:         8            COLON     output_plist      YES

integer         8            INTEGER     type      YES

       ----------            type             output_plist      NO

,         8            COMMA     leftFactored_output_plist      YES

       ----------            leftFactored_output_plist             output_plist      NO

n         8            ID     leftFactored_output_plist      YES

:         8            COLON     leftFactored_output_plist      YES

integer         8            INTEGER     type      YES

       ----------            type             leftFactored_output_plist      NO

,         8            COMMA     leftFactored_output_plist      YES

       ----------            leftFactored_output_plist             leftFactored_output_plist      NO

u         8            ID     leftFactored_output_plist      YES

:         8            COLON     leftFactored_output_plist      YES

boolean         8            BOOLEAN     type      YES

       ----------            type             leftFactored_output_plist      NO

       epsilon     epsilon        leftFactored_output_plist      YES

       ----------            leftFactored_output_plist             leftFactored_output_plist      NO

]         8            SQBC     ret      YES

;         8            SEMICOL     ret      YES

start         9            START     moduleDef      YES

       ----------            moduleDef             module      NO

declare         10            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

a         10            ID     idList      YES

       ----------            idList             declareStmt      NO

,         10            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

b         10            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         10            COLON     declareStmt      YES

integer         10            INTEGER     dataType      YES

       ----------            dataType             declareStmt      NO

;         10            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             moduleDef      NO

m         11            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         11            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

56         11            NUM            56     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         11            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

n         12            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         12            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

20         12            NUM            20     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         12            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         13            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

m         13            ID     idList      YES

       ----------            idList             declareStmt      NO

,         13            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

n         13            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         13            COLON     declareStmt      YES

boolean         13            BOOLEAN     dataType      YES

       ----------            dataType             declareStmt      NO

;         13            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

get_value         14            GET_VALUE     ioStmt      YES

       ----------            ioStmt             statement      NO

(         14            BO     ioStmt      YES

b         14            ID     ioStmt      YES

)         14            BC     ioStmt      YES

;         14            SEMICOL     ioStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         15            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

value         15            ID     idList      YES

       ----------            idList             declareStmt      NO

,         15            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

q         15            ID     leftFactored_idList      YES

,         15            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

r         15            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         15            COLON     declareStmt      YES

real         15            REAL     dataType      YES

       ----------            dataType             declareStmt      NO

;         15            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

get_value         16            GET_VALUE     ioStmt      YES

       ----------            ioStmt             statement      NO

(         16            BO     ioStmt      YES

q         16            ID     ioStmt      YES

)         16            BC     ioStmt      YES

;         16            SEMICOL     ioStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

r         17            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         17            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

2367.000000         17            RNUM            2367.000000     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         17            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

for         18            FOR     iterativeStmt      YES

       ----------            iterativeStmt             statement      NO

(         18            BO     iterativeStmt      YES

a         18            ID     iterativeStmt      YES

in         18            IN     iterativeStmt      YES

       epsilon     epsilon        sign      YES

       ----------            sign             iterativeStmt      NO

1         18            NUM            1     iterativeStmt      YES

..         18            RANGEOP     iterativeStmt      YES

       epsilon     epsilon        sign      YES

       ----------            sign             iterativeStmt      NO

10         18            NUM            10     iterativeStmt      YES

)         18            BC     iterativeStmt      YES

start         19            START     iterativeStmt      YES

declare         20            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

b         20            ID     idList      YES

       ----------            idList             declareStmt      NO

,         20            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

q         20            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         20            COLON     declareStmt      YES

integer         20            INTEGER     dataType      YES

       ----------            dataType             declareStmt      NO

;         20            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             iterativeStmt      NO

declare         21            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

r         21            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         21            COLON     declareStmt      YES

boolean         21            BOOLEAN     dataType      YES

       ----------            dataType             declareStmt      NO

;         21            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

get_value         22            GET_VALUE     ioStmt      YES

       ----------            ioStmt             statement      NO

(         22            BO     ioStmt      YES

b         22            ID     ioStmt      YES

)         22            BC     ioStmt      YES

;         22            SEMICOL     ioStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

q         23            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         23            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

18         23            NUM            18     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         23            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

r         24            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         24            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

b         24            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         24            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

q         24            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

*         24            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         24            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

+         24            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

x         24            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

<         24            LT     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

100         24            NUM            100     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            arithmeticBooleanExpr             expression      NO

AND         24            AND     logicalOp      YES

       ----------            logicalOp             logicalTerm      NO

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

w         24            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             logicalTerm      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

OR         24            OR     logicalOp      YES

       ----------            logicalOp             logicalTerm      NO

       ----------            logicalTerm             logicalTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

m         24            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             logicalTerm      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             logicalTerm      NO

       ----------            expression             lvalueIDStmt      NO

;         24            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

print         25            PRINT     ioStmt      YES

       ----------            ioStmt             statement      NO

(         25            BO     ioStmt      YES

a         25            ID     var      YES

       ----------            var             leftFactored_ioStmt      NO

       epsilon     epsilon        whichId      YES

       ----------            whichId             var      NO

       ----------            leftFactored_ioStmt             ioStmt      NO

)         25            BC     leftFactored_ioStmt      YES

;         25            SEMICOL     leftFactored_ioStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         26            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

q         26            ID     idList      YES

       ----------            idList             declareStmt      NO

,         26            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

r         26            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         26            COLON     declareStmt      YES

real         26            REAL     dataType      YES

       ----------            dataType             declareStmt      NO

;         26            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

print         27            PRINT     ioStmt      YES

       ----------            ioStmt             statement      NO

(         27            BO     ioStmt      YES

r         27            ID     var      YES

       ----------            var             leftFactored_ioStmt      NO

       epsilon     epsilon        whichId      YES

       ----------            whichId             var      NO

       ----------            leftFactored_ioStmt             ioStmt      NO

)         27            BC     leftFactored_ioStmt      YES

;         27            SEMICOL     leftFactored_ioStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

q         28            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         28            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

b         28            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

-         28            MINUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         28            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

*         28            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

x         28            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

+         28            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

y         28            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

*         28            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

20         28            NUM            20     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         28            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       epsilon     epsilon        statements      YES

       ----------            statements             statements      NO

end         29            END     iterativeStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

value         30            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         30            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

p         30            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         30            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

q         30            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

*         30            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

r         30            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         30            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

m         31            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         31            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         31            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

<=         31            LE     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

x         31            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            arithmeticBooleanExpr             expression      NO

AND         31            AND     logicalOp      YES

       ----------            logicalOp             logicalTerm      NO

       ----------            logicalTerm             arithmeticBooleanExpr      NO

true         31            true     boolValues      YES

       ----------            boolValues             param      NO

       ----------            param             factor      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             logicalTerm      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             logicalTerm      NO

       ----------            expression             lvalueIDStmt      NO

;         31            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

u         32            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         32            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

true         32            true     boolValues      YES

       ----------            boolValues             param      NO

       ----------            param             factor      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

AND         32            AND     logicalOp      YES

       ----------            logicalOp             logicalTerm      NO

       ----------            logicalTerm             arithmeticBooleanExpr      NO

false         32            false     boolValues      YES

       ----------            boolValues             param      NO

       ----------            param             factor      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             logicalTerm      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

OR         32            OR     logicalOp      YES

       ----------            logicalOp             logicalTerm      NO

       ----------            logicalTerm             logicalTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

v         32            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             logicalTerm      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             logicalTerm      NO

       ----------            expression             lvalueIDStmt      NO

;         32            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

u         33            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         33            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         33            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

<=         33            LE     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

b         33            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         33            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         34            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

w         34            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         34            COLON     declareStmt      YES

integer         34            INTEGER     dataType      YES

       ----------            dataType             declareStmt      NO

;         34            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

w         35            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         35            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

23         35            NUM            23     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         35            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

n         36            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         36            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         36            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

*         36            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

25         36            NUM            25     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         36            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

100         36            NUM            100     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

<         36            LT     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

w         36            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         36            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         37            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

b         37            ID     idList      YES

       ----------            idList             declareStmt      NO

,         37            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

c         37            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         37            COLON     declareStmt      YES

real         37            REAL     dataType      YES

       ----------            dataType             declareStmt      NO

;         37            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

c         38            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         38            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

value         38            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

-         38            MINUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

q         38            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

+         38            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

r         38            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         38            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

w         39            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         39            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

w         39            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         39            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

5         39            NUM            5     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         39            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       epsilon     epsilon        statements      YES

       ----------            statements             statements      NO

end         40            END     moduleDef      YES

       ----------            otherModules             program      NO

<<         43            DEF     module      YES

       ----------            module             otherModules      NO

module         43            MODULE     module      YES

compute         43            ID     module      YES

>>         43            ENDDEF     module      YES

takes         44            TAKES     module      YES

input         44            INPUT     module      YES

[         44            SQBO     module      YES

a         44            ID     input_plist      YES

       ----------            input_plist             module      NO

:         44            COLON     input_plist      YES

integer         44            INTEGER     dataType      YES

       ----------            dataType             input_plist      NO

,         44            COMMA     leftFactored_input_plist      YES

       ----------            leftFactored_input_plist             input_plist      NO

b         44            ID     leftFactored_input_plist      YES

:         44            COLON     leftFactored_input_plist      YES

integer         44            INTEGER     dataType      YES

       ----------            dataType             leftFactored_input_plist      NO

,         44            COMMA     leftFactored_input_plist      YES

       ----------            leftFactored_input_plist             leftFactored_input_plist      NO

s         44            ID     leftFactored_input_plist      YES

:         44            COLON     leftFactored_input_plist      YES

real         44            REAL     dataType      YES

       ----------            dataType             leftFactored_input_plist      NO

,         44            COMMA     leftFactored_input_plist      YES

       ----------            leftFactored_input_plist             leftFactored_input_plist      NO

c         44            ID     leftFactored_input_plist      YES

:         44            COLON     leftFactored_input_plist      YES

integer         44            INTEGER     dataType      YES

       ----------            dataType             leftFactored_input_plist      NO

       epsilon     epsilon        leftFactored_input_plist      YES

       ----------            leftFactored_input_plist             leftFactored_input_plist      NO

]         44            SQBC     module      YES

;         44            SEMICOL     module      YES

returns         45            RETURNS     ret      YES

       ----------            ret             module      NO

[         45            SQBO     ret      YES

res_1         45            ID     output_plist      YES

       ----------            output_plist             ret      NO

:         45            COLON     output_plist      YES

boolean         45            BOOLEAN     type      YES

       ----------            type             output_plist      NO

,         45            COMMA     leftFactored_output_plist      YES

       ----------            leftFactored_output_plist             output_plist      NO

res_2_a         45            ID     leftFactored_output_plist      YES

:         45            COLON     leftFactored_output_plist      YES

integer         45            INTEGER     type      YES

       ----------            type             leftFactored_output_plist      NO

,         45            COMMA     leftFactored_output_plist      YES

       ----------            leftFactored_output_plist             leftFactored_output_plist      NO

res_2_b         45            ID     leftFactored_output_plist      YES

:         45            COLON     leftFactored_output_plist      YES

real         45            REAL     type      YES

       ----------            type             leftFactored_output_plist      NO

       epsilon     epsilon        leftFactored_output_plist      YES

       ----------            leftFactored_output_plist             leftFactored_output_plist      NO

]         45            SQBC     ret      YES

;         45            SEMICOL     ret      YES

start         46            START     moduleDef      YES

       ----------            moduleDef             module      NO

declare         47            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

new         47            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         47            COLON     declareStmt      YES

boolean         47            BOOLEAN     dataType      YES

       ----------            dataType             declareStmt      NO

;         47            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             moduleDef      NO

declare         48            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

abc_1         48            ID     idList      YES

       ----------            idList             declareStmt      NO

,         48            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

pqr_2         48            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         48            COLON     declareStmt      YES

integer         48            INTEGER     dataType      YES

       ----------            dataType             declareStmt      NO

;         48            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

pqr_2         49            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         49            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

abc_1         49            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         49            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

6         49            NUM            6     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         49            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         50            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

abc_1         50            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         50            COLON     declareStmt      YES

real         50            REAL     dataType      YES

       ----------            dataType             declareStmt      NO

;         50            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

res_2_a         51            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         51            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

-         51            MINUS     pm      YES

       ----------            pm             unaryTerm      NO

       ----------            unaryTerm             expression      NO

(         51            BO     arithmeticFactor      YES

       ----------            arithmeticFactor             unaryTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         51            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

*         51            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

b         51            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

       ----------            arithmeticExpr             arithmeticFactor      NO

-         51            MINUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

c         51            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

/         51            DIV     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

pqr_2         51            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

)         51            BC     arithmeticFactor      YES

       ----------            expression             lvalueIDStmt      NO

;         51            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         52            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

s         52            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         52            COLON     declareStmt      YES

integer         52            INTEGER     dataType      YES

       ----------            dataType             declareStmt      NO

;         52            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         53            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

q4         53            ID     idList      YES

       ----------            idList             declareStmt      NO

,         53            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

q5         53            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         53            COLON     declareStmt      YES

real         53            REAL     dataType      YES

       ----------            dataType             declareStmt      NO

;         53            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

res_2_b         54            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         54            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

(         54            BO     factor      YES

       ----------            factor             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

res_2_b         54            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         54            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

p         54            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             factor      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

)         54            BC     factor      YES

       ----------            term             arithmeticExpr      NO

*         54            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

12         54            NUM            12     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         54            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

0.223400         54            RNUM            0.223400     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

*         54            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

q5         54            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         54            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         55            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

m         55            ID     idList      YES

       ----------            idList             declareStmt      NO

,         55            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

n         55            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         55            COLON     declareStmt      YES

boolean         55            BOOLEAN     dataType      YES

       ----------            dataType             declareStmt      NO

;         55            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

s         56            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         56            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

12         56            NUM            12     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         56            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

res_1         57            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         57            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         57            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

<=         57            LE     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

b         57            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            arithmeticBooleanExpr             expression      NO

AND         57            AND     logicalOp      YES

       ----------            logicalOp             logicalTerm      NO

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

c         57            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             logicalTerm      NO

>=         57            GE     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         57            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

OR         57            OR     logicalOp      YES

       ----------            logicalOp             logicalTerm      NO

       ----------            logicalTerm             logicalTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         57            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             logicalTerm      NO

<         57            LT     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

0         57            NUM            0     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

AND         57            AND     logicalOp      YES

       ----------            logicalOp             logicalTerm      NO

       ----------            logicalTerm             logicalTerm      NO

false         57            false     boolValues      YES

       ----------            boolValues             param      NO

       ----------            param             factor      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             logicalTerm      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             logicalTerm      NO

       ----------            expression             lvalueIDStmt      NO

;         57            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

m         59            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         59            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

n         59            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

AND         59            AND     logicalOp      YES

       ----------            logicalOp             logicalTerm      NO

       ----------            logicalTerm             arithmeticBooleanExpr      NO

(         59            BO     factor      YES

       ----------            factor             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

abc_1         59            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

<=         59            LE     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

pqr_2         59            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            arithmeticBooleanExpr             factor      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

)         59            BC     factor      YES

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             logicalTerm      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             logicalTerm      NO

       ----------            expression             lvalueIDStmt      NO

;         59            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

while         60            WHILE     iterativeStmt      YES

       ----------            iterativeStmt             statement      NO

(         60            BO     iterativeStmt      YES

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

m         60            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             iterativeStmt      NO

OR         60            OR     logicalOp      YES

       ----------            logicalOp             logicalTerm      NO

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         60            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             logicalTerm      NO

>=         60            GE     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

b         60            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

AND         60            AND     logicalOp      YES

       ----------            logicalOp             logicalTerm      NO

       ----------            logicalTerm             logicalTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

res_2_b         60            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             logicalTerm      NO

<=         60            LE     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

129540.000000         60            RNUM            129540.000000     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             logicalTerm      NO

)         60            BC     iterativeStmt      YES

start         61            START     iterativeStmt      YES

b         62            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         62            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

b         62            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         62            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

1         62            NUM            1     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         62            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             iterativeStmt      NO

m         63            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         63            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

n         63            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

OR         63            OR     logicalOp      YES

       ----------            logicalOp             logicalTerm      NO

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

b         63            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             logicalTerm      NO

>=         63            GE     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

res_2_a         63            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             logicalTerm      NO

       ----------            expression             lvalueIDStmt      NO

;         63            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         64            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

w1         64            ID     idList      YES

       ----------            idList             declareStmt      NO

,         64            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

w2         64            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         64            COLON     declareStmt      YES

integer         64            INTEGER     dataType      YES

       ----------            dataType             declareStmt      NO

;         64            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         65            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

abc_1         65            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         65            COLON     declareStmt      YES

integer         65            INTEGER     dataType      YES

       ----------            dataType             declareStmt      NO

;         65            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

switch         66            SWITCH     conditionalStmt      YES

       ----------            conditionalStmt             statement      NO

(         66            BO     conditionalStmt      YES

m         66            ID     conditionalStmt      YES

)         66            BC     conditionalStmt      YES

start         67            START     conditionalStmt      YES

case         68            CASE     caseStmt      YES

       ----------            caseStmt             conditionalStmt      NO

true         68            true     boolValues      YES

       ----------            boolValues             value      NO

       ----------            value             caseStmt      NO

:         68            COLON     caseStmt      YES

declare         68            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

w1         68            ID     idList      YES

       ----------            idList             declareStmt      NO

,         68            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

s         68            ID     leftFactored_idList      YES

,         68            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

k         68            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         68            COLON     declareStmt      YES

real         68            REAL     dataType      YES

       ----------            dataType             declareStmt      NO

;         68            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             caseStmt      NO

s         69            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         69            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

w1         69            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         69            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

0.542400         69            RNUM            0.542400     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

+         69            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

q4         69            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         69            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

abc_1         70            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         70            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

w2         70            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         70            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         70            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

*         70            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

pqr_2         70            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

-         70            MINUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

c         70            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

*         70            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

abc_1         70            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         70            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       epsilon     epsilon        statements      YES

       ----------            statements             statements      NO

break         71            BREAK     caseStmt      YES

;         71            SEMICOL     caseStmt      YES

case         72            CASE     leftFactored_caseStmt      YES

       ----------            leftFactored_caseStmt             caseStmt      NO

false         72            false     boolValues      YES

       ----------            boolValues             value      NO

       ----------            value             leftFactored_caseStmt      NO

:         72            COLON     leftFactored_caseStmt      YES

w1         72            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         72            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

w1         72            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         72            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

59         72            NUM            59     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         72            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             leftFactored_caseStmt      NO

abc_1         73            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         73            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

w2         73            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         73            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         73            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

*         73            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

pqr_2         73            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

-         73            MINUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

c         73            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

*         73            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

abc_1         73            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         73            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       epsilon     epsilon        statements      YES

       ----------            statements             statements      NO

break         74            BREAK     leftFactored_caseStmt      YES

;         74            SEMICOL     leftFactored_caseStmt      YES

       epsilon     epsilon        leftFactored_caseStmt      YES

       ----------            leftFactored_caseStmt             leftFactored_caseStmt      NO

       epsilon     epsilon        dfault      YES

       ----------            dfault             conditionalStmt      NO

end         75            END     conditionalStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

abc_1         76            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         76            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

16         76            NUM            16     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         76            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

w2         77            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         77            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         77            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

-         77            MINUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

s         77            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

*         77            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

abc_1         77            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             leftFactored_term      NO

*         77            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             leftFactored_term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

c         77            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

-         77            MINUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

pqr_2         77            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

+         77            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

w1         77            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         77            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

m         78            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         78            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

abc_1         78            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

<=         78            LE     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

pqr_2         78            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            arithmeticBooleanExpr             expression      NO

OR         78            OR     logicalOp      YES

       ----------            logicalOp             logicalTerm      NO

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

res_1         78            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             logicalTerm      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             logicalTerm      NO

       ----------            expression             lvalueIDStmt      NO

;         78            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

w1         79            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         79            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

w2         79            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

*         79            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         79            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

       ----------            arithmeticExpr             anyTerm      NO

-         79            MINUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

s         79            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

*         79            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

k         79            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             leftFactored_term      NO

*         79            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             leftFactored_term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

c         79            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

-         79            MINUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

pqr_2         79            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         79            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       epsilon     epsilon        statements      YES

       ----------            statements             statements      NO

end         80            END     iterativeStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

m         81            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         81            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

m         81            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

OR         81            OR     logicalOp      YES

       ----------            logicalOp             logicalTerm      NO

       ----------            logicalTerm             arithmeticBooleanExpr      NO

(         81            BO     factor      YES

       ----------            factor             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         81            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

<=         81            LE     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

b         81            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            arithmeticBooleanExpr             factor      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

)         81            BC     factor      YES

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             logicalTerm      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

AND         81            AND     logicalOp      YES

       ----------            logicalOp             logicalTerm      NO

       ----------            logicalTerm             logicalTerm      NO

(         81            BO     factor      YES

       ----------            factor             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

res_2         81            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

>=         81            GE     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

30.650000         81            RNUM            30.650000     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            arithmeticBooleanExpr             factor      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

)         81            BC     factor      YES

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             logicalTerm      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             logicalTerm      NO

       ----------            expression             lvalueIDStmt      NO

;         81            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

res_1         82            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         82            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

(         82            BO     factor      YES

       ----------            factor             term      NO

true         82            true     boolValues      YES

       ----------            boolValues             param      NO

       ----------            param             factor      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             factor      NO

AND         82            AND     logicalOp      YES

       ----------            logicalOp             logicalTerm      NO

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

c         82            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             logicalTerm      NO

==         82            EQ     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

b         82            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             logicalTerm      NO

)         82            BC     factor      YES

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

OR         82            OR     logicalOp      YES

       ----------            logicalOp             logicalTerm      NO

       ----------            logicalTerm             arithmeticBooleanExpr      NO

(         82            BO     factor      YES

       ----------            factor             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

b         82            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

>         82            GT     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

p         82            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            arithmeticBooleanExpr             factor      NO

AND         82            AND     logicalOp      YES

       ----------            logicalOp             logicalTerm      NO

       ----------            logicalTerm             arithmeticBooleanExpr      NO

(         82            BO     factor      YES

       ----------            factor             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         82            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

<=         82            LE     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

d         82            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            arithmeticBooleanExpr             factor      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

)         82            BC     factor      YES

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             logicalTerm      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             logicalTerm      NO

)         82            BC     factor      YES

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             logicalTerm      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             logicalTerm      NO

       ----------            expression             lvalueIDStmt      NO

;         82            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         83            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

new         83            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         83            COLON     declareStmt      YES

integer         83            INTEGER     dataType      YES

       ----------            dataType             declareStmt      NO

;         83            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

new         84            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         84            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         84            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

<         84            LT     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

b         84            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         84            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

print         85            PRINT     ioStmt      YES

       ----------            ioStmt             statement      NO

(         85            BO     ioStmt      YES

res_1         85            ID     var      YES

       ----------            var             leftFactored_ioStmt      NO

       epsilon     epsilon        whichId      YES

       ----------            whichId             var      NO

       ----------            leftFactored_ioStmt             ioStmt      NO

)         85            BC     leftFactored_ioStmt      YES

;         85            SEMICOL     leftFactored_ioStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       epsilon     epsilon        statements      YES

       ----------            statements             statements      NO

end         86            END     moduleDef      YES

       ----------            otherModules             otherModules      NO

       epsilon     epsilon        otherModules      YES

       ----------            otherModules             otherModules      NO

<<<         89            DRIVERDEF     driverModule      YES

       ----------            driverModule             program      NO

driver         89            DRIVER     driverModule      YES

program         89            PROGRAM     driverModule      YES

>>>         89            DRIVERENDDEF     driverModule      YES

start         90            START     moduleDef      YES

       ----------            moduleDef             driverModule      NO

declare         91            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

v_1_2_3         91            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         91            COLON     declareStmt      YES

integer         91            INTEGER     dataType      YES

       ----------            dataType             declareStmt      NO

;         91            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             moduleDef      NO

get_value         92            GET_VALUE     ioStmt      YES

       ----------            ioStmt             statement      NO

(         92            BO     ioStmt      YES

v_1_2_43         92            ID     ioStmt      YES

)         92            BC     ioStmt      YES

;         92            SEMICOL     ioStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         93            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

result_         93            ID     idList      YES

       ----------            idList             declareStmt      NO

,         93            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

v7         93            ID     leftFactored_idList      YES

,         93            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

v9         93            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         93            COLON     declareStmt      YES

integer         93            INTEGER     dataType      YES

       ----------            dataType             declareStmt      NO

;         93            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         94            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

u1         94            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         94            COLON     declareStmt      YES

boolean         94            BOOLEAN     dataType      YES

       ----------            dataType             declareStmt      NO

;         94            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

[         95            SQBO     optional      YES

       ----------            optional             moduleReuseStmt      NO

u1         95            ID     idList      YES

       ----------            idList             optional      NO

,         95            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

result_         95            ID     leftFactored_idList      YES

,         95            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

k         95            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

]         95            SQBC     optional      YES

:=         95            ASSIGNOP     optional      YES

       ----------            moduleReuseStmt             simpleStmt      NO

use         95            USE     moduleReuseStmt      YES

module         95            MODULE     moduleReuseStmt      YES

compute         95            ID     moduleReuseStmt      YES

with         95            WITH     moduleReuseStmt      YES

parameters         95            PARAMETERS     moduleReuseStmt      YES

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             paramList      NO

v_1_2_3         95            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            paramList             moduleReuseStmt      NO

,         95            COMMA     leftFactored_paramList      YES

       ----------            leftFactored_paramList             paramList      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             leftFactored_paramList      NO

v7         95            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

,         95            COMMA     leftFactored_paramList      YES

       ----------            leftFactored_paramList             leftFactored_paramList      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             leftFactored_paramList      NO

v9         95            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       epsilon     epsilon        leftFactored_paramList      YES

       ----------            leftFactored_paramList             leftFactored_paramList      NO

;         95            SEMICOL     moduleReuseStmt      YES

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

print         96            PRINT     ioStmt      YES

       ----------            ioStmt             statement      NO

(         96            BO     ioStmt      YES

result_         96            ID     var      YES

       ----------            var             leftFactored_ioStmt      NO

       epsilon     epsilon        whichId      YES

       ----------            whichId             var      NO

       ----------            leftFactored_ioStmt             ioStmt      NO

)         96            BC     leftFactored_ioStmt      YES

;         96            SEMICOL     leftFactored_ioStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         97            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

u1         97            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         97            COLON     declareStmt      YES

real         97            REAL     dataType      YES

       ----------            dataType             declareStmt      NO

;         97            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       epsilon     epsilon        statements      YES

       ----------            statements             statements      NO

end         98            END     moduleDef      YES

       epsilon     epsilon        otherModules      YES

       ----------            otherModules             program      NO

       ----------            finalProgram           ROOT	      NO

Enter your option: RUNNING PARSER

                      [32m FIRST AND FOLLOW AUTOMATED [0m

GIVEN SOURCE CODE IS SYNTACTICALLY CORRECT








					PRINTING AST IN LEFT TO RIGHT & PREORDER 



var_demo


takes


x


integer


w


boolean


p


real


m


integer


n


integer


u


boolean


declare


a


b


integer


:=


m


56


:=


n


20


declare


m


n


boolean


get_value


b


declare


value


q


r


real


get_value


q


:=


r


2367.000000


for


a


1


10


declare


b


q


integer


declare


r


boolean


get_value


b


:=


q


18


:=


r


OR


AND


<


+


+


b


*


q


a


x


100


w


m


print


a


declare


q


r


real


print


r


:=


q


+


-


b


*


a


x


*


y


20


:=


value


+


p


*


q


r


:=


m


AND


<=


a


x


true


:=


u


OR


AND


true


false


v


:=


u


<=


a


b


declare


w


integer


:=


w


23


:=


n


<


+


*


a


25


100


w


declare


b


c


real


:=


c


+


-


value


q


r


:=


w


+


w


5


compute


takes


a


integer


b


integer


s


real


c


integer


res_1


boolean


res_2_a


integer


res_2_b


real


declare


new


boolean


declare


abc_1


pqr_2


integer


:=


pqr_2


+


abc_1


6


declare


abc_1


real


:=


res_2_a


-


-


*


a


b


/


c


pqr_2


declare


s


integer


declare


q4


q5


real


:=


res_2_b


+


*


+


res_2_b


p


12


*


0.223400


q5


declare


m


n


boolean


:=


s


12


:=


res_1


AND


OR


AND


<=


a


b


>=


c


a


<


a


0


false


:=


m


AND


n


<=


abc_1


pqr_2


while


AND


OR


m


>=


a


b


<=


res_2_b


129540.000000


:=


b


+


b


1


:=


m


OR


n


>=


b


res_2_a


declare


w1


w2


integer


declare


abc_1


integer


m


true


declare


w1


s


k


real


:=


s


+


+


w1


0.542400


q4


:=


abc_1


-


+


w2


*


a


pqr_2


*


c


abc_1


break


false


:=


w1


+


w1


59


:=


abc_1


-


+


w2


*


a


pqr_2


*


c


abc_1


break


:=


abc_1


16


:=


w2


+


-


-


a


*


*


s


abc_1


c


pqr_2


w1


:=


m


OR


<=


abc_1


pqr_2


res_1


:=


w1


-


-


*


w2


a


*


*


s


k


c


pqr_2


:=


m


AND


OR


m


<=


a


b


>=


res_2


30.650000


:=


res_1


OR


AND


true


==


c


b


AND


>


b


p


<=


a


d


declare


new


integer


:=


new


<


a


b


print


res_1


driver


declare


v_1_2_3


integer


get_value


v_1_2_43


declare


result_


v7


v9


integer


declare


u1


boolean


compute


u1


result_


k


v_1_2_3


v7


v9


print


result_


declare


u1


real


Enter your option: RUNNING PARSER

                      [32m FIRST AND FOLLOW AUTOMATED [0m

GIVEN SOURCE CODE IS SYNTACTICALLY CORRECT


NUMBER OF PARSE TREE NODES ARE: 2891		 AND TOTAL MEMORY ALLOCATED IS 0 BYTES

NUMBER OF AST NODES ARE: 934		 AND TOTAL MEMORY ALLOCATED IS 0 BYTES

COMPRESSION PERCENTAGE = 67 %

Enter your option: RUNNING PARSER

                      [32m FIRST AND FOLLOW AUTOMATED [0m

GIVEN SOURCE CODE IS SYNTACTICALLY CORRECT


LINE 13: OUTPUT PARAM m CAN NOT BE DECLARED AGAIN

LINE 13: OUTPUT PARAM n CAN NOT BE DECLARED AGAIN

LINE 24: TYPE MISMATCH ERROR OCCURED
LINE 24: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 26: VARIABLE 'q' ALREADY DECLARED 
LINE 26: VARIABLE 'r' ALREADY DECLARED 
LINE 28: VARIABLE y NOT DECLARED IN SCOPE

LINE 28: TYPE MISMATCH ERROR OCCURED
LINE 28: TYPE MISMATCH ERROR OCCURED
LINE 28: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 31: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 32: VARIABLE v NOT DECLARED IN SCOPE

LINE 32: TYPE MISMATCH ERROR OCCURED
LINE 32: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 36: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 37: VARIABLE 'b' ALREADY DECLARED 
LINE 50: VARIABLE 'abc_1' ALREADY DECLARED 
LINE 51: TYPE MISMATCH ERROR OCCURED
LINE 51: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 54: VARIABLE p NOT DECLARED IN SCOPE

LINE 54: TYPE MISMATCH ERROR OCCURED
LINE 54: TYPE MISMATCH ERROR OCCURED
LINE 54: TYPE MISMATCH ERROR OCCURED
LINE 54: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 79: VARIABLE k NOT DECLARED IN SCOPE

LINE 79: TYPE MISMATCH ERROR OCCURED
LINE 79: TYPE MISMATCH ERROR OCCURED
LINE 79: TYPE MISMATCH ERROR OCCURED
LINE 79: TYPE MISMATCH ERROR OCCURED
LINE 79: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 81: VARIABLE res_2 NOT DECLARED IN SCOPE

LINE 81: TYPE MISMATCH ERROR OCCURED
LINE 81: TYPE MISMATCH ERROR OCCURED
LINE 81: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 82: VARIABLE p NOT DECLARED IN SCOPE

LINE 82: TYPE MISMATCH ERROR OCCURED
LINE 82: VARIABLE d NOT DECLARED IN SCOPE

LINE 82: TYPE MISMATCH ERROR OCCURED
LINE 82: TYPE MISMATCH ERROR OCCURED
LINE 82: TYPE MISMATCH ERROR OCCURED
LINE 82: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 83: VARIABLE 'new' ALREADY DECLARED 
LINE 92: VARIABLE 'v_1_2_43' NOT DECLARED

LINE 95: TYPE DID NOT MATCH FOR PARAM compute
LINE 95: NUMBER OF ACTUAL PARAMS IS LESS THAN NUMBER OF FORMAL PARAMS

LINE 95: VARIABLE k NOT DECLARED IN SCOPE

LINE 95: TYPE DID NOT MATCH FOR PARAM compute
LINE 97: VARIABLE 'u1' ALREADY DECLARED 


					TRAVERSAL 1 ENDED 



LINE 95: TYPE DID NOT MATCH FOR PARAM compute
LINE 95: NUMBER OF ACTUAL PARAMS IS LESS THAN NUMBER OF FORMAL PARAMS

LINE 95: VARIABLE k NOT DECLARED IN SCOPE

LINE 95: TYPE DID NOT MATCH FOR PARAM compute


					TRAVERSAL 2 ENDED 



v_1_2_3		driver		[89-98]		integer		no		**		**		2		0		1		

result_		driver		[89-98]		integer		no		**		**		2		2		1		

u1		driver		[89-98]		boolean		no		**		**		1		8		1		

v7		driver		[89-98]		integer		no		**		**		2		4		1		

v9		driver		[89-98]		integer		no		**		**		2		6		1		

x		var_demo		[6-40]		integer		no		**		**		2		0		0		

w		var_demo		[6-40]		boolean		no		**		**		1		2		0		

p		var_demo		[6-40]		real		no		**		**		4		3		0		

m		var_demo		[6-40]		integer		no		**		**		2		7		0		

n		var_demo		[6-40]		integer		no		**		**		2		9		0		

u		var_demo		[6-40]		boolean		no		**		**		1		11		0		

w		var_demo		[6-40]		integer		no		**		**		2		35		1		

value		var_demo		[6-40]		real		no		**		**		4		16		1		

a		var_demo		[6-40]		integer		no		**		**		2		12		1		

b		var_demo		[6-40]		integer		no		**		**		2		14		1		

c		var_demo		[6-40]		real		no		**		**		4		37		1		

q		var_demo		[6-40]		real		no		**		**		4		20		1		

r		var_demo		[6-40]		real		no		**		**		4		24		1		

a		var_demo		[18-29]		integer		no		**		**		2		28		2		

b		var_demo		[18-29]		integer		no		**		**		2		30		2		

q		var_demo		[18-29]		integer		no		**		**		2		32		2		

r		var_demo		[18-29]		boolean		no		**		**		1		34		2		

a		compute		[43-86]		integer		no		**		**		2		0		0		

b		compute		[43-86]		integer		no		**		**		2		2		0		

s		compute		[43-86]		real		no		**		**		4		4		0		

c		compute		[43-86]		integer		no		**		**		2		8		0		

res_1		compute		[43-86]		boolean		no		**		**		1		10		0		

res_2_a		compute		[43-86]		integer		no		**		**		2		11		0		

res_2_b		compute		[43-86]		real		no		**		**		4		13		0		

abc_1		compute		[43-86]		integer		no		**		**		2		18		1		

pqr_2		compute		[43-86]		integer		no		**		**		2		20		1		

q4		compute		[43-86]		real		no		**		**		4		24		1		

q5		compute		[43-86]		real		no		**		**		4		28		1		

m		compute		[43-86]		boolean		no		**		**		1		32		1		

n		compute		[43-86]		boolean		no		**		**		1		33		1		

new		compute		[43-86]		boolean		no		**		**		1		17		1		

s		compute		[43-86]		integer		no		**		**		2		22		1		

abc_1		compute		[60-80]		integer		no		**		**		2		38		2		

w1		compute		[60-80]		integer		no		**		**		2		34		2		

w2		compute		[60-80]		integer		no		**		**		2		36		2		

k		compute		[66-71]		real		no		**		**		4		48		3		

w1		compute		[66-71]		real		no		**		**		4		40		3		

s		compute		[66-71]		real		no		**		**		4		44		3		

Enter your option: RUNNING PARSER

                      [32m FIRST AND FOLLOW AUTOMATED [0m

GIVEN SOURCE CODE IS SYNTACTICALLY CORRECT


LINE 13: OUTPUT PARAM m CAN NOT BE DECLARED AGAIN

LINE 13: OUTPUT PARAM n CAN NOT BE DECLARED AGAIN

LINE 24: TYPE MISMATCH ERROR OCCURED
LINE 24: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 26: VARIABLE 'q' ALREADY DECLARED 
LINE 26: VARIABLE 'r' ALREADY DECLARED 
LINE 28: VARIABLE y NOT DECLARED IN SCOPE

LINE 28: TYPE MISMATCH ERROR OCCURED
LINE 28: TYPE MISMATCH ERROR OCCURED
LINE 28: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 31: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 32: VARIABLE v NOT DECLARED IN SCOPE

LINE 32: TYPE MISMATCH ERROR OCCURED
LINE 32: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 36: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 37: VARIABLE 'b' ALREADY DECLARED 
LINE 50: VARIABLE 'abc_1' ALREADY DECLARED 
LINE 51: TYPE MISMATCH ERROR OCCURED
LINE 51: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 54: VARIABLE p NOT DECLARED IN SCOPE

LINE 54: TYPE MISMATCH ERROR OCCURED
LINE 54: TYPE MISMATCH ERROR OCCURED
LINE 54: TYPE MISMATCH ERROR OCCURED
LINE 54: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 79: VARIABLE k NOT DECLARED IN SCOPE

LINE 79: TYPE MISMATCH ERROR OCCURED
LINE 79: TYPE MISMATCH ERROR OCCURED
LINE 79: TYPE MISMATCH ERROR OCCURED
LINE 79: TYPE MISMATCH ERROR OCCURED
LINE 79: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 81: VARIABLE res_2 NOT DECLARED IN SCOPE

LINE 81: TYPE MISMATCH ERROR OCCURED
LINE 81: TYPE MISMATCH ERROR OCCURED
LINE 81: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 82: VARIABLE p NOT DECLARED IN SCOPE

LINE 82: TYPE MISMATCH ERROR OCCURED
LINE 82: VARIABLE d NOT DECLARED IN SCOPE

LINE 82: TYPE MISMATCH ERROR OCCURED
LINE 82: TYPE MISMATCH ERROR OCCURED
LINE 82: TYPE MISMATCH ERROR OCCURED
LINE 82: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 83: VARIABLE 'new' ALREADY DECLARED 
LINE 92: VARIABLE 'v_1_2_43' NOT DECLARED

LINE 95: TYPE DID NOT MATCH FOR PARAM compute
LINE 95: NUMBER OF ACTUAL PARAMS IS LESS THAN NUMBER OF FORMAL PARAMS

LINE 95: VARIABLE k NOT DECLARED IN SCOPE

LINE 95: TYPE DID NOT MATCH FOR PARAM compute
LINE 97: VARIABLE 'u1' ALREADY DECLARED 


					TRAVERSAL 1 ENDED 



LINE 95: TYPE DID NOT MATCH FOR PARAM compute
LINE 95: NUMBER OF ACTUAL PARAMS IS LESS THAN NUMBER OF FORMAL PARAMS

LINE 95: VARIABLE k NOT DECLARED IN SCOPE

LINE 95: TYPE DID NOT MATCH FOR PARAM compute


					TRAVERSAL 2 ENDED 









					PRINTING ACTIVATION RECORD SIZES 



		driver					9


		var_demo					41


		compute					52


Enter your option: RUNNING PARSER

                      [32m FIRST AND FOLLOW AUTOMATED [0m

GIVEN SOURCE CODE IS SYNTACTICALLY CORRECT


LINE 13: OUTPUT PARAM m CAN NOT BE DECLARED AGAIN

LINE 13: OUTPUT PARAM n CAN NOT BE DECLARED AGAIN

LINE 24: TYPE MISMATCH ERROR OCCURED
LINE 24: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 26: VARIABLE 'q' ALREADY DECLARED 
LINE 26: VARIABLE 'r' ALREADY DECLARED 
LINE 28: VARIABLE y NOT DECLARED IN SCOPE

LINE 28: TYPE MISMATCH ERROR OCCURED
LINE 28: TYPE MISMATCH ERROR OCCURED
LINE 28: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 31: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 32: VARIABLE v NOT DECLARED IN SCOPE

LINE 32: TYPE MISMATCH ERROR OCCURED
LINE 32: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 36: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 37: VARIABLE 'b' ALREADY DECLARED 
LINE 50: VARIABLE 'abc_1' ALREADY DECLARED 
LINE 51: TYPE MISMATCH ERROR OCCURED
LINE 51: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 54: VARIABLE p NOT DECLARED IN SCOPE

LINE 54: TYPE MISMATCH ERROR OCCURED
LINE 54: TYPE MISMATCH ERROR OCCURED
LINE 54: TYPE MISMATCH ERROR OCCURED
LINE 54: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 79: VARIABLE k NOT DECLARED IN SCOPE

LINE 79: TYPE MISMATCH ERROR OCCURED
LINE 79: TYPE MISMATCH ERROR OCCURED
LINE 79: TYPE MISMATCH ERROR OCCURED
LINE 79: TYPE MISMATCH ERROR OCCURED
LINE 79: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 81: VARIABLE res_2 NOT DECLARED IN SCOPE

LINE 81: TYPE MISMATCH ERROR OCCURED
LINE 81: TYPE MISMATCH ERROR OCCURED
LINE 81: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 82: VARIABLE p NOT DECLARED IN SCOPE

LINE 82: TYPE MISMATCH ERROR OCCURED
LINE 82: VARIABLE d NOT DECLARED IN SCOPE

LINE 82: TYPE MISMATCH ERROR OCCURED
LINE 82: TYPE MISMATCH ERROR OCCURED
LINE 82: TYPE MISMATCH ERROR OCCURED
LINE 82: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 83: VARIABLE 'new' ALREADY DECLARED 
LINE 92: VARIABLE 'v_1_2_43' NOT DECLARED

LINE 95: TYPE DID NOT MATCH FOR PARAM compute
LINE 95: NUMBER OF ACTUAL PARAMS IS LESS THAN NUMBER OF FORMAL PARAMS

LINE 95: VARIABLE k NOT DECLARED IN SCOPE

LINE 95: TYPE DID NOT MATCH FOR PARAM compute
LINE 97: VARIABLE 'u1' ALREADY DECLARED 


					TRAVERSAL 1 ENDED 



LINE 95: TYPE DID NOT MATCH FOR PARAM compute
LINE 95: NUMBER OF ACTUAL PARAMS IS LESS THAN NUMBER OF FORMAL PARAMS

LINE 95: VARIABLE k NOT DECLARED IN SCOPE

LINE 95: TYPE DID NOT MATCH FOR PARAM compute


					TRAVERSAL 2 ENDED 









					PRINTING ACTIVATION RECORD SIZES 



Enter your option: RUNNING PARSER

                      [32m FIRST AND FOLLOW AUTOMATED [0m

GIVEN SOURCE CODE IS SYNTACTICALLY CORRECT


LINE 13: OUTPUT PARAM m CAN NOT BE DECLARED AGAIN

LINE 13: OUTPUT PARAM n CAN NOT BE DECLARED AGAIN

LINE 24: TYPE MISMATCH ERROR OCCURED
LINE 24: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 26: VARIABLE 'q' ALREADY DECLARED 
LINE 26: VARIABLE 'r' ALREADY DECLARED 
LINE 28: VARIABLE y NOT DECLARED IN SCOPE

LINE 28: TYPE MISMATCH ERROR OCCURED
LINE 28: TYPE MISMATCH ERROR OCCURED
LINE 28: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 31: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 32: VARIABLE v NOT DECLARED IN SCOPE

LINE 32: TYPE MISMATCH ERROR OCCURED
LINE 32: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 36: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 37: VARIABLE 'b' ALREADY DECLARED 
LINE 50: VARIABLE 'abc_1' ALREADY DECLARED 
LINE 51: TYPE MISMATCH ERROR OCCURED
LINE 51: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 54: VARIABLE p NOT DECLARED IN SCOPE

LINE 54: TYPE MISMATCH ERROR OCCURED
LINE 54: TYPE MISMATCH ERROR OCCURED
LINE 54: TYPE MISMATCH ERROR OCCURED
LINE 54: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 79: VARIABLE k NOT DECLARED IN SCOPE

LINE 79: TYPE MISMATCH ERROR OCCURED
LINE 79: TYPE MISMATCH ERROR OCCURED
LINE 79: TYPE MISMATCH ERROR OCCURED
LINE 79: TYPE MISMATCH ERROR OCCURED
LINE 79: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 81: VARIABLE res_2 NOT DECLARED IN SCOPE

LINE 81: TYPE MISMATCH ERROR OCCURED
LINE 81: TYPE MISMATCH ERROR OCCURED
LINE 81: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 82: VARIABLE p NOT DECLARED IN SCOPE

LINE 82: TYPE MISMATCH ERROR OCCURED
LINE 82: VARIABLE d NOT DECLARED IN SCOPE

LINE 82: TYPE MISMATCH ERROR OCCURED
LINE 82: TYPE MISMATCH ERROR OCCURED
LINE 82: TYPE MISMATCH ERROR OCCURED
LINE 82: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 83: VARIABLE 'new' ALREADY DECLARED 
LINE 92: VARIABLE 'v_1_2_43' NOT DECLARED

LINE 95: TYPE DID NOT MATCH FOR PARAM compute
LINE 95: NUMBER OF ACTUAL PARAMS IS LESS THAN NUMBER OF FORMAL PARAMS

LINE 95: VARIABLE k NOT DECLARED IN SCOPE

LINE 95: TYPE DID NOT MATCH FOR PARAM compute
LINE 97: VARIABLE 'u1' ALREADY DECLARED 


					TRAVERSAL 1 ENDED 



LINE 95: TYPE DID NOT MATCH FOR PARAM compute
LINE 95: NUMBER OF ACTUAL PARAMS IS LESS THAN NUMBER OF FORMAL PARAMS

LINE 95: VARIABLE k NOT DECLARED IN SCOPE

LINE 95: TYPE DID NOT MATCH FOR PARAM compute


					TRAVERSAL 2 ENDED 



Enter your option: 