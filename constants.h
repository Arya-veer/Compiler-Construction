//                         GROUP - 30
// ID:  2020A7PS0094P                     Name:  Arya Veer Singh Chauhan
// ID:  2020A7PS0049P                     Name:  Madhav Madhusoodanan
// ID:  2020A7PS0016P                     Name:  Ruchika Sarkar
// ID:  2020A7PS0984P                     Name:  Utsav Goel
// ID:  2020A7PS0102P                     Name:  Hardik Jain


#ifndef CONSTANTS_H
#define CONSTANTS_H

typedef enum  {
    finalProgram,
    program,
    moduleDeclarations,
    moduleDeclaration,
    otherModules,
    driverModule,
    module,
    ret,
    input_plist,
    leftFactored_input_plist,
    output_plist,
    leftFactored_output_plist,
    dataType,
    arrRange,
    leftFactored_arrRange,
    sign,
    type,
    moduleDef,
    statements,
    statement,
    ioStmt,
    leftFactored_ioStmt,
    boolValues,
    var,
    whichId,
    leftFactored_whichId,
    simpleStmt,
    assignmentStmt,
    whichStmt,
    lvalueIDStmt,
    lvalueARRStmt,
    moduleReuseStmt,
    optional,
    idList,
    leftFactored_idList,
    expression,
    unaryTerm,
    arithmeticFactor,
    arithmeticBooleanExpr,
    logicalTerm,
    relationalTerm,
    arithmeticExpr,
    leftFactored_arithmeticExpr,
    pm,
    md,
    term,
    leftFactored_term,
    factor,
    arithmeticExprWArr,
    leftFactored_arithmeticExprWArr,
    termWArr,
    leftFactored_termWArr,
    signedFactorWArr,
    factorWArr,
    logicalOp,
    relationalOp,
    declareStmt,
    conditionalStmt,
    caseStmt,
    leftFactored_caseStmt,
    value,
    dfault,
    iterativeStmt,
    param,
    arrID,
    paramList,
    leftFactored_paramList,
    signedParam,
    anyTerm,
    idNum
} NONTERMINALS;

typedef enum  {
    INTEGER_TYPE = 150,
    REAL_TYPE = 120,
    BOOLEAN_TYPE = 118,
    OF_KEYWORD = 110,
    ARRAY_KEYWORD = 25 ,
    START_KEYWORD = 76,
    END_KEYWORD = 82,
    DECLARE_KEYWORD = 171,
    MODULE_KEYWORD = 1,
    DRIVER_KEYWORD = 18,
    PROGRAM_KEYWORD = 51,
    GET_VALUE_KEYWORD = 119,
    PRINT_FUNCTION = 36 ,
    USE_KEYWORD = 157,
    WITH_KEYWORD = 210,
    PARAMETERS_KEYWORD = 187,
    TAKES_KEYWORD = 167,
    INPUT_KEYWORD = 148,
    RETURNS_KEYWORD = 201,
    FOR_KEYWORD = 102,
    IN_KEYWORD = 106,
    SWITCH_KEYWORD =128 ,
    CASE_KEYWORD = 13,
    BREAK_KEYWORD = 189,
    DEFAULT_KEYWORD = 0,
    WHILE_KEYWORD = 49,
    AND_OPERATOR = 56,
    OR_OPERATOR = 26,
    TRUE_BOOL = 7,
    FALSE_BOOL = 175,
    PLUS_OPERATOR = 43,
    MINUS_OPERATOR = 45,
    MUL_OPERATOR = 42,
    DIV_OPERATOR = 47,
    LT_OPERATOR = 60,
    LE_OPERATOR = 181,
    GE_OPERATOR = 185,
    GT_OPERATOR = 62,
    EQ_OPERATOR = 183,
    NE_OPERATOR = 127,
    DEF_OPERATOR = 180,
    ENDDEF_OPERATOR  = 186,
    DRIVERDEF_OPERATOR = 206,
    DRIVERENDDEF_OPERATOR = 6,
    COLON_OPERATOR = 58 ,
    RANGEOP_OPERATOR = 138,
    SEMICOL_OPERATOR = 59,
    COMMA_OPERATOR = 44,
    ASSIGNOP_OPERATOR = 177,
    SQBO_TOKEN = 91,
    SQBC_TOKEN = 93,
    BO_TOKEN = 40,
    BC_TOKEN = 41,
    EOF_TOKEN = 209,
    IDENTIFIER_TOKEN = 211,
    NUM_TOKEN = 212,
    RNUM_TOKEN = 213,
} TOKENS;



char* TOKENS_STRING[214];
char* TERMINALS_STRINGS[214];
char* NONTERMINALS_STRINGS[70];


#endif