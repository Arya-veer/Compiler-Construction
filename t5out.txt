Enter your option: 2
Skipped Comment
Skipped Comment
Skipped Comment
LINE NO: 5         LEXEME: <<         TOKEN: DEF
LINE NO: 5         LEXEME: module         TOKEN: MODULE
LINE NO: 5         LEXEME: var_demo_array         TOKEN: ID
LINE NO: 5         LEXEME: >>         TOKEN: ENDDEF
LINE NO: 6         LEXEME: takes         TOKEN: TAKES
LINE NO: 6         LEXEME: input         TOKEN: INPUT
LINE NO: 6         LEXEME: [         TOKEN: SQBO
LINE NO: 6         LEXEME: x         TOKEN: ID
LINE NO: 6         LEXEME: :         TOKEN: COLON
LINE NO: 6         LEXEME: integer         TOKEN: INTEGER
LINE NO: 6         LEXEME: ,         TOKEN: COMMA
LINE NO: 6         LEXEME: m         TOKEN: ID
LINE NO: 6         LEXEME: :         TOKEN: COLON
LINE NO: 6         LEXEME: array         TOKEN: ARRAY
LINE NO: 6         LEXEME: [         TOKEN: SQBO
LINE NO: 6         LEXEME: -         TOKEN: MINUS
LINE NO: 6         LEXEME: 12         TOKEN: NUM
LINE NO: 6         LEXEME: ..         TOKEN: RANGEOP
LINE NO: 6         LEXEME: 20         TOKEN: NUM
LINE NO: 6         LEXEME: ]         TOKEN: SQBC
LINE NO: 6         LEXEME: of         TOKEN: OF
LINE NO: 6         LEXEME: integer         TOKEN: INTEGER
LINE NO: 6         LEXEME: ,         TOKEN: COMMA
LINE NO: 6         LEXEME: p         TOKEN: ID
LINE NO: 6         LEXEME: :         TOKEN: COLON
LINE NO: 6         LEXEME: real         TOKEN: REAL
LINE NO: 6         LEXEME: ]         TOKEN: SQBC
LINE NO: 6         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 7         LEXEME: returns         TOKEN: RETURNS
LINE NO: 7         LEXEME: [         TOKEN: SQBO
LINE NO: 7         LEXEME: n         TOKEN: ID
LINE NO: 7         LEXEME: :         TOKEN: COLON
LINE NO: 7         LEXEME: integer         TOKEN: INTEGER
LINE NO: 7         LEXEME: ,         TOKEN: COMMA
LINE NO: 7         LEXEME: k         TOKEN: ID
LINE NO: 7         LEXEME: :         TOKEN: COLON
LINE NO: 7         LEXEME: boolean         TOKEN: BOOLEAN
LINE NO: 7         LEXEME: ]         TOKEN: SQBC
LINE NO: 7         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 8         LEXEME: start         TOKEN: START
LINE NO: 9         LEXEME: declare         TOKEN: DECLARE
LINE NO: 9         LEXEME: a         TOKEN: ID
LINE NO: 9         LEXEME: ,         TOKEN: COMMA
LINE NO: 9         LEXEME: b         TOKEN: ID
LINE NO: 9         LEXEME: ,         TOKEN: COMMA
LINE NO: 9         LEXEME: h         TOKEN: ID
LINE NO: 9         LEXEME: :         TOKEN: COLON
LINE NO: 9         LEXEME: integer         TOKEN: INTEGER
LINE NO: 9         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 10         LEXEME: get_value         TOKEN: GET_VALUE
LINE NO: 10         LEXEME: (         TOKEN: BO
LINE NO: 10         LEXEME: b         TOKEN: ID
LINE NO: 10         LEXEME: )         TOKEN: BC
LINE NO: 10         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 11         LEXEME: declare         TOKEN: DECLARE
LINE NO: 11         LEXEME: p         TOKEN: ID
LINE NO: 11         LEXEME: :         TOKEN: COLON
LINE NO: 11         LEXEME: array         TOKEN: ARRAY
LINE NO: 11         LEXEME: [         TOKEN: SQBO
LINE NO: 11         LEXEME: -         TOKEN: MINUS
LINE NO: 11         LEXEME: 12         TOKEN: NUM
LINE NO: 11         LEXEME: ..         TOKEN: RANGEOP
LINE NO: 11         LEXEME: 20         TOKEN: NUM
LINE NO: 11         LEXEME: ]         TOKEN: SQBC
LINE NO: 11         LEXEME: of         TOKEN: OF
LINE NO: 11         LEXEME: integer         TOKEN: INTEGER
LINE NO: 11         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 12         LEXEME: a         TOKEN: ID
LINE NO: 12         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 12         LEXEME: m         TOKEN: ID
LINE NO: 12         LEXEME: [         TOKEN: SQBO
LINE NO: 12         LEXEME: -         TOKEN: MINUS
LINE NO: 12         LEXEME: 5         TOKEN: NUM
LINE NO: 12         LEXEME: ]         TOKEN: SQBC
LINE NO: 12         LEXEME: +         TOKEN: PLUS
LINE NO: 12         LEXEME: 3         TOKEN: NUM
LINE NO: 12         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 13         LEXEME: p         TOKEN: ID
LINE NO: 13         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 13         LEXEME: m         TOKEN: ID
LINE NO: 13         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 14         LEXEME: k         TOKEN: ID
LINE NO: 14         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 14         LEXEME: true         TOKEN: true
LINE NO: 14         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 15         LEXEME: p         TOKEN: ID
LINE NO: 15         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 15         LEXEME: m         TOKEN: ID
LINE NO: 15         LEXEME: +         TOKEN: PLUS
LINE NO: 15         LEXEME: p         TOKEN: ID
LINE NO: 15         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 16         LEXEME: p         TOKEN: ID
LINE NO: 16         LEXEME: [         TOKEN: SQBO
LINE NO: 16         LEXEME: 10         TOKEN: NUM
LINE NO: 16         LEXEME: ]         TOKEN: SQBC
LINE NO: 16         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 16         LEXEME: a         TOKEN: ID
LINE NO: 16         LEXEME: *         TOKEN: MUL
LINE NO: 16         LEXEME: b         TOKEN: ID
LINE NO: 16         LEXEME: -         TOKEN: MINUS
LINE NO: 16         LEXEME: 20         TOKEN: NUM
LINE NO: 16         LEXEME: *         TOKEN: MUL
LINE NO: 16         LEXEME: h         TOKEN: ID
LINE NO: 16         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 17         LEXEME: while         TOKEN: WHILE
LINE NO: 17         LEXEME: (         TOKEN: BO
LINE NO: 17         LEXEME: k         TOKEN: ID
LINE NO: 17         LEXEME: AND         TOKEN: AND
LINE NO: 17         LEXEME: x         TOKEN: ID
LINE NO: 17         LEXEME: <=         TOKEN: LE
LINE NO: 17         LEXEME: m         TOKEN: ID
LINE NO: 17         LEXEME: [         TOKEN: SQBO
LINE NO: 17         LEXEME: 11         TOKEN: NUM
LINE NO: 17         LEXEME: ]         TOKEN: SQBC
LINE NO: 17         LEXEME: OR         TOKEN: OR
LINE NO: 17         LEXEME: false         TOKEN: false
LINE NO: 17         LEXEME: )         TOKEN: BC
LINE NO: 18         LEXEME: start         TOKEN: START
LINE NO: 19         LEXEME: declare         TOKEN: DECLARE
LINE NO: 19         LEXEME: p         TOKEN: ID
LINE NO: 19         LEXEME: ,         TOKEN: COMMA
LINE NO: 19         LEXEME: u         TOKEN: ID
LINE NO: 19         LEXEME: :         TOKEN: COLON
LINE NO: 19         LEXEME: integer         TOKEN: INTEGER
LINE NO: 19         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 20         LEXEME: declare         TOKEN: DECLARE
LINE NO: 20         LEXEME: b         TOKEN: ID
LINE NO: 20         LEXEME: :         TOKEN: COLON
LINE NO: 20         LEXEME: array         TOKEN: ARRAY
LINE NO: 20         LEXEME: [         TOKEN: SQBO
LINE NO: 20         LEXEME: 2         TOKEN: NUM
LINE NO: 20         LEXEME: ..         TOKEN: RANGEOP
LINE NO: 20         LEXEME: 20         TOKEN: NUM
LINE NO: 20         LEXEME: ]         TOKEN: SQBC
LINE NO: 20         LEXEME: of         TOKEN: OF
LINE NO: 20         LEXEME: integer         TOKEN: INTEGER
LINE NO: 20         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 21         LEXEME: b         TOKEN: ID
LINE NO: 21         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 21         LEXEME: m         TOKEN: ID
LINE NO: 21         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 22         LEXEME: b         TOKEN: ID
LINE NO: 22         LEXEME: [         TOKEN: SQBO
LINE NO: 22         LEXEME: 2         TOKEN: NUM
LINE NO: 22         LEXEME: ]         TOKEN: SQBC
LINE NO: 22         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 22         LEXEME: u         TOKEN: ID
LINE NO: 22         LEXEME: +         TOKEN: PLUS
LINE NO: 22         LEXEME: m         TOKEN: ID
LINE NO: 22         LEXEME: [         TOKEN: SQBO
LINE NO: 22         LEXEME: 25         TOKEN: NUM
LINE NO: 22         LEXEME: ]         TOKEN: SQBC
LINE NO: 22         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 23         LEXEME: p         TOKEN: ID
LINE NO: 23         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 23         LEXEME: b         TOKEN: ID
LINE NO: 23         LEXEME: [         TOKEN: SQBO
LINE NO: 23         LEXEME: 18         TOKEN: NUM
LINE NO: 23         LEXEME: ]         TOKEN: SQBC
LINE NO: 23         LEXEME: *         TOKEN: MUL
LINE NO: 23         LEXEME: 1856.000000         TOKEN: RNUM
LINE NO: 23         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 24         LEXEME: end         TOKEN: END
Skipped Comment
LINE NO: 25         LEXEME: n         TOKEN: ID
LINE NO: 25         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 25         LEXEME: a         TOKEN: ID
LINE NO: 25         LEXEME: -         TOKEN: MINUS
LINE NO: 25         LEXEME: p         TOKEN: ID
LINE NO: 25         LEXEME: *         TOKEN: MUL
LINE NO: 25         LEXEME: b         TOKEN: ID
LINE NO: 25         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 26         LEXEME: b         TOKEN: ID
LINE NO: 26         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 26         LEXEME: b         TOKEN: ID
LINE NO: 26         LEXEME: +         TOKEN: PLUS
LINE NO: 26         LEXEME: 3         TOKEN: NUM
LINE NO: 26         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 27         LEXEME: k         TOKEN: ID
LINE NO: 27         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 27         LEXEME: a         TOKEN: ID
LINE NO: 27         LEXEME: >         TOKEN: GT
LINE NO: 27         LEXEME: b         TOKEN: ID
LINE NO: 27         LEXEME: OR         TOKEN: OR
LINE NO: 27         LEXEME: b         TOKEN: ID
LINE NO: 27         LEXEME: >         TOKEN: GT
LINE NO: 27         LEXEME: 100         TOKEN: NUM
LINE NO: 27         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 28         LEXEME: print         TOKEN: PRINT
LINE NO: 28         LEXEME: (         TOKEN: BO
LINE NO: 28         LEXEME: k         TOKEN: ID
LINE NO: 28         LEXEME: )         TOKEN: BC
LINE NO: 28         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 29         LEXEME: end         TOKEN: END
LINE NO: 32         LEXEME: <<         TOKEN: DEF
LINE NO: 32         LEXEME: module         TOKEN: MODULE
LINE NO: 32         LEXEME: f1         TOKEN: ID
LINE NO: 32         LEXEME: >>         TOKEN: ENDDEF
LINE NO: 33         LEXEME: takes         TOKEN: TAKES
LINE NO: 33         LEXEME: input         TOKEN: INPUT
LINE NO: 33         LEXEME: [         TOKEN: SQBO
LINE NO: 33         LEXEME: a         TOKEN: ID
LINE NO: 33         LEXEME: :         TOKEN: COLON
LINE NO: 33         LEXEME: array         TOKEN: ARRAY
LINE NO: 33         LEXEME: [         TOKEN: SQBO
LINE NO: 33         LEXEME: 10         TOKEN: NUM
LINE NO: 33         LEXEME: ..         TOKEN: RANGEOP
LINE NO: 33         LEXEME: 30         TOKEN: NUM
LINE NO: 33         LEXEME: ]         TOKEN: SQBC
LINE NO: 33         LEXEME: of         TOKEN: OF
LINE NO: 33         LEXEME: integer         TOKEN: INTEGER
LINE NO: 33         LEXEME: ,         TOKEN: COMMA
LINE NO: 33         LEXEME: b         TOKEN: ID
LINE NO: 33         LEXEME: :         TOKEN: COLON
LINE NO: 33         LEXEME: array         TOKEN: ARRAY
LINE NO: 33         LEXEME: [         TOKEN: SQBO
LINE NO: 33         LEXEME: 10         TOKEN: NUM
LINE NO: 33         LEXEME: ..         TOKEN: RANGEOP
LINE NO: 33         LEXEME: 30         TOKEN: NUM
LINE NO: 33         LEXEME: ]         TOKEN: SQBC
LINE NO: 33         LEXEME: of         TOKEN: OF
LINE NO: 33         LEXEME: integer         TOKEN: INTEGER
LINE NO: 33         LEXEME: ,         TOKEN: COMMA
LINE NO: 33         LEXEME: c         TOKEN: ID
LINE NO: 33         LEXEME: :         TOKEN: COLON
LINE NO: 33         LEXEME: real         TOKEN: REAL
LINE NO: 33         LEXEME: ]         TOKEN: SQBC
LINE NO: 33         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 34         LEXEME: returns         TOKEN: RETURNS
LINE NO: 34         LEXEME: [         TOKEN: SQBO
LINE NO: 34         LEXEME: m         TOKEN: ID
LINE NO: 34         LEXEME: :         TOKEN: COLON
LINE NO: 34         LEXEME: boolean         TOKEN: BOOLEAN
LINE NO: 34         LEXEME: ,         TOKEN: COMMA
LINE NO: 34         LEXEME: n         TOKEN: ID
LINE NO: 34         LEXEME: :         TOKEN: COLON
LINE NO: 34         LEXEME: integer         TOKEN: INTEGER
LINE NO: 34         LEXEME: ]         TOKEN: SQBC
LINE NO: 34         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 35         LEXEME: start         TOKEN: START
LINE NO: 36         LEXEME: declare         TOKEN: DECLARE
LINE NO: 36         LEXEME: x         TOKEN: ID
LINE NO: 36         LEXEME: ,         TOKEN: COMMA
LINE NO: 36         LEXEME: y         TOKEN: ID
LINE NO: 36         LEXEME: ,         TOKEN: COMMA
LINE NO: 36         LEXEME: p         TOKEN: ID
LINE NO: 36         LEXEME: :         TOKEN: COLON
LINE NO: 36         LEXEME: real         TOKEN: REAL
LINE NO: 36         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 37         LEXEME: declare         TOKEN: DECLARE
LINE NO: 37         LEXEME: k         TOKEN: ID
LINE NO: 37         LEXEME: :         TOKEN: COLON
LINE NO: 37         LEXEME: integer         TOKEN: INTEGER
LINE NO: 37         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 38         LEXEME: get_value         TOKEN: GET_VALUE
LINE NO: 38         LEXEME: (         TOKEN: BO
LINE NO: 38         LEXEME: y         TOKEN: ID
LINE NO: 38         LEXEME: )         TOKEN: BC
LINE NO: 38         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 39         LEXEME: get_value         TOKEN: GET_VALUE
LINE NO: 39         LEXEME: (         TOKEN: BO
LINE NO: 39         LEXEME: x         TOKEN: ID
LINE NO: 39         LEXEME: )         TOKEN: BC
LINE NO: 39         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 40         LEXEME: declare         TOKEN: DECLARE
LINE NO: 40         LEXEME: A         TOKEN: ID
LINE NO: 40         LEXEME: ,         TOKEN: COMMA
LINE NO: 40         LEXEME: B         TOKEN: ID
LINE NO: 40         LEXEME: :         TOKEN: COLON
LINE NO: 40         LEXEME: array         TOKEN: ARRAY
LINE NO: 40         LEXEME: [         TOKEN: SQBO
LINE NO: 40         LEXEME: 4         TOKEN: NUM
LINE NO: 40         LEXEME: ..         TOKEN: RANGEOP
LINE NO: 40         LEXEME: 10         TOKEN: NUM
LINE NO: 40         LEXEME: ]         TOKEN: SQBC
LINE NO: 40         LEXEME: of         TOKEN: OF
LINE NO: 40         LEXEME: integer         TOKEN: INTEGER
LINE NO: 40         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 41         LEXEME: get_value         TOKEN: GET_VALUE
LINE NO: 41         LEXEME: (         TOKEN: BO
LINE NO: 41         LEXEME: B         TOKEN: ID
LINE NO: 41         LEXEME: )         TOKEN: BC
LINE NO: 41         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 42         LEXEME: declare         TOKEN: DECLARE
LINE NO: 42         LEXEME: D         TOKEN: ID
LINE NO: 42         LEXEME: ,         TOKEN: COMMA
LINE NO: 42         LEXEME: C         TOKEN: ID
LINE NO: 42         LEXEME: :         TOKEN: COLON
LINE NO: 42         LEXEME: array         TOKEN: ARRAY
LINE NO: 42         LEXEME: [         TOKEN: SQBO
LINE NO: 42         LEXEME: 10         TOKEN: NUM
LINE NO: 42         LEXEME: ..         TOKEN: RANGEOP
LINE NO: 42         LEXEME: 30         TOKEN: NUM
LINE NO: 42         LEXEME: ]         TOKEN: SQBC
LINE NO: 42         LEXEME: of         TOKEN: OF
LINE NO: 42         LEXEME: integer         TOKEN: INTEGER
LINE NO: 42         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 43         LEXEME: A         TOKEN: ID
LINE NO: 43         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 43         LEXEME: B         TOKEN: ID
LINE NO: 43         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 44         LEXEME: C         TOKEN: ID
LINE NO: 44         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 44         LEXEME: a         TOKEN: ID
LINE NO: 44         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 45         LEXEME: D         TOKEN: ID
LINE NO: 45         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 45         LEXEME: C         TOKEN: ID
LINE NO: 45         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 46         LEXEME: for         TOKEN: FOR
LINE NO: 46         LEXEME: (         TOKEN: BO
LINE NO: 46         LEXEME: k         TOKEN: ID
LINE NO: 46         LEXEME: in         TOKEN: IN
LINE NO: 46         LEXEME: -         TOKEN: MINUS
LINE NO: 46         LEXEME: 15         TOKEN: NUM
LINE NO: 46         LEXEME: ..         TOKEN: RANGEOP
LINE NO: 46         LEXEME: +         TOKEN: PLUS
LINE NO: 46         LEXEME: 40         TOKEN: NUM
LINE NO: 46         LEXEME: )         TOKEN: BC
LINE NO: 47         LEXEME: start         TOKEN: START
LINE NO: 48         LEXEME: x         TOKEN: ID
LINE NO: 48         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 48         LEXEME: x         TOKEN: ID
LINE NO: 48         LEXEME: +         TOKEN: PLUS
LINE NO: 48         LEXEME: k         TOKEN: ID
LINE NO: 48         LEXEME: *         TOKEN: MUL
LINE NO: 48         LEXEME: y         TOKEN: ID
LINE NO: 48         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 49         LEXEME: declare         TOKEN: DECLARE
LINE NO: 49         LEXEME: u         TOKEN: ID
LINE NO: 49         LEXEME: ,         TOKEN: COMMA
LINE NO: 49         LEXEME: v         TOKEN: ID
LINE NO: 49         LEXEME: :         TOKEN: COLON
LINE NO: 49         LEXEME: real         TOKEN: REAL
LINE NO: 49         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 50         LEXEME: u         TOKEN: ID
LINE NO: 50         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 50         LEXEME: y         TOKEN: ID
LINE NO: 50         LEXEME: +         TOKEN: PLUS
LINE NO: 50         LEXEME: c         TOKEN: ID
LINE NO: 50         LEXEME: *         TOKEN: MUL
LINE NO: 50         LEXEME: 34.200000         TOKEN: RNUM
LINE NO: 50         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 51         LEXEME: v         TOKEN: ID
LINE NO: 51         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 51         LEXEME: u         TOKEN: ID
LINE NO: 51         LEXEME: -         TOKEN: MINUS
LINE NO: 51         LEXEME: c         TOKEN: ID
LINE NO: 51         LEXEME: *         TOKEN: MUL
LINE NO: 51         LEXEME: p         TOKEN: ID
LINE NO: 51         LEXEME: -         TOKEN: MINUS
LINE NO: 51         LEXEME: 2050.000000         TOKEN: RNUM
LINE NO: 51         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 52         LEXEME: switch         TOKEN: SWITCH
LINE NO: 52         LEXEME: (         TOKEN: BO
LINE NO: 52         LEXEME: k         TOKEN: ID
LINE NO: 52         LEXEME: )         TOKEN: BC
LINE NO: 53         LEXEME: start         TOKEN: START
LINE NO: 54         LEXEME: case         TOKEN: CASE
LINE NO: 54         LEXEME: 10         TOKEN: NUM
LINE NO: 54         LEXEME: :         TOKEN: COLON
LINE NO: 54         LEXEME: declare         TOKEN: DECLARE
LINE NO: 54         LEXEME: A         TOKEN: ID
LINE NO: 54         LEXEME: :         TOKEN: COLON
LINE NO: 54         LEXEME: real         TOKEN: REAL
LINE NO: 54         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 55         LEXEME: declare         TOKEN: DECLARE
LINE NO: 55         LEXEME: Q         TOKEN: ID
LINE NO: 55         LEXEME: :         TOKEN: COLON
LINE NO: 55         LEXEME: integer         TOKEN: INTEGER
LINE NO: 55         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 56         LEXEME: declare         TOKEN: DECLARE
LINE NO: 56         LEXEME: B         TOKEN: ID
LINE NO: 56         LEXEME: :         TOKEN: COLON
LINE NO: 56         LEXEME: array         TOKEN: ARRAY
LINE NO: 56         LEXEME: [         TOKEN: SQBO
LINE NO: 56         LEXEME: 10         TOKEN: NUM
LINE NO: 56         LEXEME: ..         TOKEN: RANGEOP
LINE NO: 56         LEXEME: 30         TOKEN: NUM
LINE NO: 56         LEXEME: ]         TOKEN: SQBC
LINE NO: 56         LEXEME: of         TOKEN: OF
LINE NO: 56         LEXEME: integer         TOKEN: INTEGER
LINE NO: 56         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 57         LEXEME: declare         TOKEN: DECLARE
LINE NO: 57         LEXEME: E         TOKEN: ID
LINE NO: 57         LEXEME: :         TOKEN: COLON
LINE NO: 57         LEXEME: array         TOKEN: ARRAY
LINE NO: 57         LEXEME: [         TOKEN: SQBO
LINE NO: 57         LEXEME: 4         TOKEN: NUM
LINE NO: 57         LEXEME: ..         TOKEN: RANGEOP
LINE NO: 57         LEXEME: 10         TOKEN: NUM
LINE NO: 57         LEXEME: ]         TOKEN: SQBC
LINE NO: 57         LEXEME: of         TOKEN: OF
LINE NO: 57         LEXEME: integer         TOKEN: INTEGER
LINE NO: 57         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 58         LEXEME: B         TOKEN: ID
LINE NO: 58         LEXEME: [         TOKEN: SQBO
LINE NO: 58         LEXEME: 9         TOKEN: NUM
LINE NO: 58         LEXEME: ]         TOKEN: SQBC
LINE NO: 58         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 58         LEXEME: k         TOKEN: ID
LINE NO: 58         LEXEME: *         TOKEN: MUL
LINE NO: 58         LEXEME: 20         TOKEN: NUM
LINE NO: 58         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 59         LEXEME: B         TOKEN: ID
LINE NO: 59         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 59         LEXEME: C         TOKEN: ID
LINE NO: 59         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 60         LEXEME: E         TOKEN: ID
LINE NO: 60         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 60         LEXEME: Q         TOKEN: ID
LINE NO: 60         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 61         LEXEME: break         TOKEN: BREAK
LINE NO: 61         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 62         LEXEME: case         TOKEN: CASE
LINE NO: 62         LEXEME: 20         TOKEN: NUM
LINE NO: 62         LEXEME: :         TOKEN: COLON
LINE NO: 62         LEXEME: c         TOKEN: ID
LINE NO: 62         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 62         LEXEME: 12.900000         TOKEN: RNUM
LINE NO: 62         LEXEME: +         TOKEN: PLUS
LINE NO: 62         LEXEME: u         TOKEN: ID
LINE NO: 62         LEXEME: *         TOKEN: MUL
LINE NO: 62         LEXEME: y         TOKEN: ID
LINE NO: 62         LEXEME: -         TOKEN: MINUS
LINE NO: 62         LEXEME: c         TOKEN: ID
LINE NO: 62         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 63         LEXEME: get_value         TOKEN: GET_VALUE
LINE NO: 63         LEXEME: (         TOKEN: BO
LINE NO: 63         LEXEME: Q         TOKEN: ID
LINE NO: 63         LEXEME: )         TOKEN: BC
LINE NO: 63         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 64         LEXEME: A         TOKEN: ID
LINE NO: 64         LEXEME: [         TOKEN: SQBO
LINE NO: 64         LEXEME: 7         TOKEN: NUM
LINE NO: 64         LEXEME: ]         TOKEN: SQBC
LINE NO: 64         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 64         LEXEME: k         TOKEN: ID
LINE NO: 64         LEXEME: +         TOKEN: PLUS
LINE NO: 64         LEXEME: 12         TOKEN: NUM
LINE NO: 64         LEXEME: -         TOKEN: MINUS
LINE NO: 64         LEXEME: D         TOKEN: ID
LINE NO: 64         LEXEME: [         TOKEN: SQBO
LINE NO: 64         LEXEME: 12         TOKEN: NUM
LINE NO: 64         LEXEME: ]         TOKEN: SQBC
LINE NO: 64         LEXEME: *         TOKEN: MUL
LINE NO: 64         LEXEME: 10         TOKEN: NUM
LINE NO: 64         LEXEME: +         TOKEN: PLUS
LINE NO: 64         LEXEME: u         TOKEN: ID
LINE NO: 64         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 65         LEXEME: break         TOKEN: BREAK
LINE NO: 65         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 66         LEXEME: default         TOKEN: DEFAULT
LINE NO: 66         LEXEME: :         TOKEN: COLON
LINE NO: 66         LEXEME: E         TOKEN: ID
LINE NO: 66         LEXEME: [         TOKEN: SQBO
LINE NO: 66         LEXEME: 9         TOKEN: NUM
LINE NO: 66         LEXEME: ]         TOKEN: SQBC
LINE NO: 66         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 66         LEXEME: B         TOKEN: ID
LINE NO: 66         LEXEME: [         TOKEN: SQBO
LINE NO: 66         LEXEME: 15         TOKEN: NUM
LINE NO: 66         LEXEME: ]         TOKEN: SQBC
LINE NO: 66         LEXEME: +         TOKEN: PLUS
LINE NO: 66         LEXEME: Q         TOKEN: ID
LINE NO: 66         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 67         LEXEME: break         TOKEN: BREAK
LINE NO: 67         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 68         LEXEME: end         TOKEN: END
LINE NO: 69         LEXEME: x         TOKEN: ID
LINE NO: 69         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 69         LEXEME: x         TOKEN: ID
LINE NO: 69         LEXEME: +         TOKEN: PLUS
LINE NO: 69         LEXEME: u         TOKEN: ID
LINE NO: 69         LEXEME: *         TOKEN: MUL
LINE NO: 69         LEXEME: v         TOKEN: ID
LINE NO: 69         LEXEME: -         TOKEN: MINUS
LINE NO: 69         LEXEME: u         TOKEN: ID
LINE NO: 69         LEXEME: <=         TOKEN: LE
LINE NO: 69         LEXEME: v         TOKEN: ID
LINE NO: 69         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 70         LEXEME: end         TOKEN: END
LINE NO: 71         LEXEME: x         TOKEN: ID
LINE NO: 71         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 71         LEXEME: c         TOKEN: ID
LINE NO: 71         LEXEME: +         TOKEN: PLUS
LINE NO: 71         LEXEME: y         TOKEN: ID
LINE NO: 71         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 72         LEXEME: C         TOKEN: ID
LINE NO: 72         LEXEME: [         TOKEN: SQBO
LINE NO: 72         LEXEME: 18         TOKEN: NUM
LINE NO: 72         LEXEME: ]         TOKEN: SQBC
LINE NO: 72         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 72         LEXEME: a         TOKEN: ID
LINE NO: 72         LEXEME: [         TOKEN: SQBO
LINE NO: 72         LEXEME: 18         TOKEN: NUM
LINE NO: 72         LEXEME: ]         TOKEN: SQBC
LINE NO: 72         LEXEME: +         TOKEN: PLUS
LINE NO: 72         LEXEME: b         TOKEN: ID
LINE NO: 72         LEXEME: [         TOKEN: SQBO
LINE NO: 72         LEXEME: 18         TOKEN: NUM
LINE NO: 72         LEXEME: ]         TOKEN: SQBC
LINE NO: 72         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 74         LEXEME: A         TOKEN: ID
LINE NO: 74         LEXEME: [         TOKEN: SQBO
LINE NO: 74         LEXEME: 5         TOKEN: NUM
LINE NO: 74         LEXEME: ]         TOKEN: SQBC
LINE NO: 74         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 74         LEXEME: B         TOKEN: ID
LINE NO: 74         LEXEME: [         TOKEN: SQBO
LINE NO: 74         LEXEME: 6         TOKEN: NUM
LINE NO: 74         LEXEME: ]         TOKEN: SQBC
LINE NO: 74         LEXEME: -         TOKEN: MINUS
LINE NO: 74         LEXEME: 10         TOKEN: NUM
LINE NO: 74         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 75         LEXEME: m         TOKEN: ID
LINE NO: 75         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 75         LEXEME: A         TOKEN: ID
LINE NO: 75         LEXEME: [         TOKEN: SQBO
LINE NO: 75         LEXEME: 5         TOKEN: NUM
LINE NO: 75         LEXEME: ]         TOKEN: SQBC
LINE NO: 75         LEXEME: <         TOKEN: LT
LINE NO: 75         LEXEME: C         TOKEN: ID
LINE NO: 75         LEXEME: [         TOKEN: SQBO
LINE NO: 75         LEXEME: 18         TOKEN: NUM
LINE NO: 75         LEXEME: ]         TOKEN: SQBC
LINE NO: 75         LEXEME: +         TOKEN: PLUS
LINE NO: 75         LEXEME: A         TOKEN: ID
LINE NO: 75         LEXEME: [         TOKEN: SQBO
LINE NO: 75         LEXEME: 11         TOKEN: NUM
LINE NO: 75         LEXEME: ]         TOKEN: SQBC
LINE NO: 75         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 76         LEXEME: n         TOKEN: ID
LINE NO: 76         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 76         LEXEME: 20         TOKEN: NUM
LINE NO: 76         LEXEME: *         TOKEN: MUL
LINE NO: 76         LEXEME: 8         TOKEN: NUM
LINE NO: 76         LEXEME: -         TOKEN: MINUS
LINE NO: 76         LEXEME: 5         TOKEN: NUM
LINE NO: 76         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 77         LEXEME: end         TOKEN: END
LINE NO: 81         LEXEME: <<<         TOKEN: DRIVERDEF
LINE NO: 81         LEXEME: driver         TOKEN: DRIVER
LINE NO: 81         LEXEME: program         TOKEN: PROGRAM
LINE NO: 81         LEXEME: >>>         TOKEN: DRIVERENDDEF
LINE NO: 82         LEXEME: start         TOKEN: START
LINE NO: 83         LEXEME: declare         TOKEN: DECLARE
LINE NO: 83         LEXEME: v_1_2_3         TOKEN: ID
LINE NO: 83         LEXEME: ,         TOKEN: COMMA
LINE NO: 83         LEXEME: A         TOKEN: ID
LINE NO: 83         LEXEME: :         TOKEN: COLON
LINE NO: 83         LEXEME: integer         TOKEN: INTEGER
LINE NO: 83         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 84         LEXEME: declare         TOKEN: DECLARE
LINE NO: 84         LEXEME: u1         TOKEN: ID
LINE NO: 84         LEXEME: ,         TOKEN: COMMA
LINE NO: 84         LEXEME: k         TOKEN: ID
LINE NO: 84         LEXEME: :         TOKEN: COLON
LINE NO: 84         LEXEME: boolean         TOKEN: BOOLEAN
LINE NO: 84         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 85         LEXEME: A         TOKEN: ID
LINE NO: 85         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 85         LEXEME: 12         TOKEN: NUM
LINE NO: 85         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 86         LEXEME: declare         TOKEN: DECLARE
LINE NO: 86         LEXEME: p         TOKEN: ID
LINE NO: 86         LEXEME: :         TOKEN: COLON
LINE NO: 86         LEXEME: real         TOKEN: REAL
LINE NO: 86         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 87         LEXEME: p         TOKEN: ID
LINE NO: 87         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 87         LEXEME: 23.560000         TOKEN: RNUM
LINE NO: 87         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 88         LEXEME: get_value         TOKEN: GET_VALUE
LINE NO: 88         LEXEME: (         TOKEN: BO
LINE NO: 88         LEXEME: v_1_2_3         TOKEN: ID
LINE NO: 88         LEXEME: )         TOKEN: BC
LINE NO: 88         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 89         LEXEME: declare         TOKEN: DECLARE
LINE NO: 89         LEXEME: B         TOKEN: ID
LINE NO: 89         LEXEME: ,         TOKEN: COMMA
LINE NO: 89         LEXEME: C         TOKEN: ID
LINE NO: 89         LEXEME: :         TOKEN: COLON
LINE NO: 89         LEXEME: array         TOKEN: ARRAY
LINE NO: 89         LEXEME: [         TOKEN: SQBO
LINE NO: 89         LEXEME: 2         TOKEN: NUM
LINE NO: 89         LEXEME: ..         TOKEN: RANGEOP
LINE NO: 89         LEXEME: 20         TOKEN: NUM
LINE NO: 89         LEXEME: ]         TOKEN: SQBC
LINE NO: 89         LEXEME: of         TOKEN: OF
LINE NO: 89         LEXEME: integer         TOKEN: INTEGER
LINE NO: 89         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 90         LEXEME: [         TOKEN: SQBO
LINE NO: 90         LEXEME: v_1_2_3         TOKEN: ID
LINE NO: 90         LEXEME: ,         TOKEN: COMMA
LINE NO: 90         LEXEME: u1         TOKEN: ID
LINE NO: 90         LEXEME: ]         TOKEN: SQBC
LINE NO: 90         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 90         LEXEME: use         TOKEN: USE
LINE NO: 90         LEXEME: module         TOKEN: MODULE
LINE NO: 90         LEXEME: var_demo_array         TOKEN: ID
LINE NO: 90         LEXEME: with         TOKEN: WITH
LINE NO: 90         LEXEME: parameters         TOKEN: PARAMETERS
LINE NO: 90         LEXEME: A         TOKEN: ID
LINE NO: 90         LEXEME: ,         TOKEN: COMMA
LINE NO: 90         LEXEME: B         TOKEN: ID
LINE NO: 90         LEXEME: ,         TOKEN: COMMA
LINE NO: 90         LEXEME: p         TOKEN: ID
LINE NO: 90         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 91         LEXEME: [         TOKEN: SQBO
LINE NO: 91         LEXEME: v_1_2_3         TOKEN: ID
LINE NO: 91         LEXEME: ,         TOKEN: COMMA
LINE NO: 91         LEXEME: k         TOKEN: ID
LINE NO: 91         LEXEME: ]         TOKEN: SQBC
LINE NO: 91         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 91         LEXEME: use         TOKEN: USE
LINE NO: 91         LEXEME: module         TOKEN: MODULE
LINE NO: 91         LEXEME: var_demo_array         TOKEN: ID
LINE NO: 91         LEXEME: with         TOKEN: WITH
LINE NO: 91         LEXEME: parameters         TOKEN: PARAMETERS
LINE NO: 91         LEXEME: A         TOKEN: ID
LINE NO: 91         LEXEME: ,         TOKEN: COMMA
LINE NO: 91         LEXEME: B         TOKEN: ID
LINE NO: 91         LEXEME: ,         TOKEN: COMMA
LINE NO: 91         LEXEME: p         TOKEN: ID
LINE NO: 91         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 92         LEXEME: declare         TOKEN: DECLARE
LINE NO: 92         LEXEME: a         TOKEN: ID
LINE NO: 92         LEXEME: ,         TOKEN: COMMA
LINE NO: 92         LEXEME: b         TOKEN: ID
LINE NO: 92         LEXEME: :         TOKEN: COLON
LINE NO: 92         LEXEME: integer         TOKEN: INTEGER
LINE NO: 92         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 93         LEXEME: a         TOKEN: ID
LINE NO: 93         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 93         LEXEME: 0.058900         TOKEN: RNUM
LINE NO: 93         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 94         LEXEME: get_value         TOKEN: GET_VALUE
LINE NO: 94         LEXEME: (         TOKEN: BO
LINE NO: 94         LEXEME: b         TOKEN: ID
LINE NO: 94         LEXEME: )         TOKEN: BC
LINE NO: 94         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 95         LEXEME: declare         TOKEN: DECLARE
LINE NO: 95         LEXEME: value         TOKEN: ID
LINE NO: 95         LEXEME: ,         TOKEN: COMMA
LINE NO: 95         LEXEME: q         TOKEN: ID
LINE NO: 95         LEXEME: ,         TOKEN: COMMA
LINE NO: 95         LEXEME: r         TOKEN: ID
LINE NO: 95         LEXEME: :         TOKEN: COLON
LINE NO: 95         LEXEME: real         TOKEN: REAL
LINE NO: 95         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 96         LEXEME: get_value         TOKEN: GET_VALUE
LINE NO: 96         LEXEME: (         TOKEN: BO
LINE NO: 96         LEXEME: q         TOKEN: ID
LINE NO: 96         LEXEME: )         TOKEN: BC
LINE NO: 96         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 97         LEXEME: r         TOKEN: ID
LINE NO: 97         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 97         LEXEME: 2367.000000         TOKEN: RNUM
LINE NO: 97         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 98         LEXEME: value         TOKEN: ID
LINE NO: 98         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 98         LEXEME: p         TOKEN: ID
LINE NO: 98         LEXEME: +         TOKEN: PLUS
LINE NO: 98         LEXEME: q         TOKEN: ID
LINE NO: 98         LEXEME: *         TOKEN: MUL
LINE NO: 98         LEXEME: r         TOKEN: ID
LINE NO: 98         LEXEME: -         TOKEN: MINUS
LINE NO: 98         LEXEME: a         TOKEN: ID
LINE NO: 98         LEXEME: *         TOKEN: MUL
LINE NO: 98         LEXEME: value         TOKEN: ID
LINE NO: 98         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 99         LEXEME: k         TOKEN: ID
LINE NO: 99         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 99         LEXEME: true         TOKEN: true
LINE NO: 99         LEXEME: AND         TOKEN: AND
LINE NO: 99         LEXEME: false         TOKEN: false
LINE NO: 99         LEXEME: OR         TOKEN: OR
LINE NO: 99         LEXEME: q         TOKEN: ID
LINE NO: 99         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 100         LEXEME: u1         TOKEN: ID
LINE NO: 100         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 100         LEXEME: a         TOKEN: ID
LINE NO: 100         LEXEME: <=         TOKEN: LE
LINE NO: 100         LEXEME: b         TOKEN: ID
LINE NO: 100         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 101         LEXEME: declare         TOKEN: DECLARE
LINE NO: 101         LEXEME: w         TOKEN: ID
LINE NO: 101         LEXEME: :         TOKEN: COLON
LINE NO: 101         LEXEME: integer         TOKEN: INTEGER
LINE NO: 101         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 102         LEXEME: w         TOKEN: ID
LINE NO: 102         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 102         LEXEME: 23         TOKEN: NUM
LINE NO: 102         LEXEME: +         TOKEN: PLUS
LINE NO: 102         LEXEME: B         TOKEN: ID
LINE NO: 102         LEXEME: [         TOKEN: SQBO
LINE NO: 102         LEXEME: 6         TOKEN: NUM
LINE NO: 102         LEXEME: ]         TOKEN: SQBC
LINE NO: 102         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 103         LEXEME: b         TOKEN: ID
LINE NO: 103         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 103         LEXEME: a         TOKEN: ID
LINE NO: 103         LEXEME: *         TOKEN: MUL
LINE NO: 103         LEXEME: 25         TOKEN: NUM
LINE NO: 103         LEXEME: +         TOKEN: PLUS
LINE NO: 103         LEXEME: 100         TOKEN: NUM
LINE NO: 103         LEXEME: *         TOKEN: MUL
LINE NO: 103         LEXEME: C         TOKEN: ID
LINE NO: 103         LEXEME: [         TOKEN: SQBO
LINE NO: 103         LEXEME: 1         TOKEN: NUM
LINE NO: 103         LEXEME: ]         TOKEN: SQBC
LINE NO: 103         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 104         LEXEME: declare         TOKEN: DECLARE
LINE NO: 104         LEXEME: D         TOKEN: ID
LINE NO: 104         LEXEME: :         TOKEN: COLON
LINE NO: 104         LEXEME: array         TOKEN: ARRAY
LINE NO: 104         LEXEME: [         TOKEN: SQBO
LINE NO: 104         LEXEME: 20         TOKEN: NUM
LINE NO: 104         LEXEME: ..         TOKEN: RANGEOP
LINE NO: 104         LEXEME: 40         TOKEN: NUM
LINE NO: 104         LEXEME: ]         TOKEN: SQBC
LINE NO: 104         LEXEME: of         TOKEN: OF
LINE NO: 104         LEXEME: integer         TOKEN: INTEGER
LINE NO: 104         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 105         LEXEME: D         TOKEN: ID
LINE NO: 105         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 105         LEXEME: value         TOKEN: ID
LINE NO: 105         LEXEME: -         TOKEN: MINUS
LINE NO: 105         LEXEME: q         TOKEN: ID
LINE NO: 105         LEXEME: +         TOKEN: PLUS
LINE NO: 105         LEXEME: r         TOKEN: ID
LINE NO: 105         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 106         LEXEME: w         TOKEN: ID
LINE NO: 106         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 106         LEXEME: w         TOKEN: ID
LINE NO: 106         LEXEME: +         TOKEN: PLUS
LINE NO: 106         LEXEME: 5         TOKEN: NUM
LINE NO: 106         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 107         LEXEME: B         TOKEN: ID
LINE NO: 107         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 107         LEXEME: C         TOKEN: ID
LINE NO: 107         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 108         LEXEME: C         TOKEN: ID
LINE NO: 108         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 108         LEXEME: D         TOKEN: ID
LINE NO: 108         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 109         LEXEME: end         TOKEN: END
Enter your option: RUNNING PARSER

                      [32m FIRST AND FOLLOW AUTOMATED [0m

GIVEN SOURCE CODE IS SYNTACTICALLY CORRECT


       epsilon     epsilon        moduleDeclarations      YES

       ----------            moduleDeclarations             program      NO

       ----------            program             finalProgram      NO

<<         5            DEF     module      YES

       ----------            module             otherModules      NO

module         5            MODULE     module      YES

var_demo_array         5            ID     module      YES

>>         5            ENDDEF     module      YES

takes         6            TAKES     module      YES

input         6            INPUT     module      YES

[         6            SQBO     module      YES

x         6            ID     input_plist      YES

       ----------            input_plist             module      NO

:         6            COLON     input_plist      YES

integer         6            INTEGER     dataType      YES

       ----------            dataType             input_plist      NO

,         6            COMMA     leftFactored_input_plist      YES

       ----------            leftFactored_input_plist             input_plist      NO

m         6            ID     leftFactored_input_plist      YES

:         6            COLON     leftFactored_input_plist      YES

array         6            ARRAY     dataType      YES

       ----------            dataType             leftFactored_input_plist      NO

[         6            SQBO     dataType      YES

-         6            MINUS     pm      YES

       ----------            pm             sign      NO

       ----------            sign             arrRange      NO

       ----------            arrRange             dataType      NO

12         6            NUM            12     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

       ----------            leftFactored_arrRange             arrRange      NO

..         6            RANGEOP     leftFactored_arrRange      YES

       epsilon     epsilon        sign      YES

       ----------            sign             leftFactored_arrRange      NO

20         6            NUM            20     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

]         6            SQBC     dataType      YES

of         6            OF     dataType      YES

integer         6            INTEGER     type      YES

       ----------            type             dataType      NO

,         6            COMMA     leftFactored_input_plist      YES

       ----------            leftFactored_input_plist             leftFactored_input_plist      NO

p         6            ID     leftFactored_input_plist      YES

:         6            COLON     leftFactored_input_plist      YES

real         6            REAL     dataType      YES

       ----------            dataType             leftFactored_input_plist      NO

       epsilon     epsilon        leftFactored_input_plist      YES

       ----------            leftFactored_input_plist             leftFactored_input_plist      NO

]         6            SQBC     module      YES

;         6            SEMICOL     module      YES

returns         7            RETURNS     ret      YES

       ----------            ret             module      NO

[         7            SQBO     ret      YES

n         7            ID     output_plist      YES

       ----------            output_plist             ret      NO

:         7            COLON     output_plist      YES

integer         7            INTEGER     type      YES

       ----------            type             output_plist      NO

,         7            COMMA     leftFactored_output_plist      YES

       ----------            leftFactored_output_plist             output_plist      NO

k         7            ID     leftFactored_output_plist      YES

:         7            COLON     leftFactored_output_plist      YES

boolean         7            BOOLEAN     type      YES

       ----------            type             leftFactored_output_plist      NO

       epsilon     epsilon        leftFactored_output_plist      YES

       ----------            leftFactored_output_plist             leftFactored_output_plist      NO

]         7            SQBC     ret      YES

;         7            SEMICOL     ret      YES

start         8            START     moduleDef      YES

       ----------            moduleDef             module      NO

declare         9            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

a         9            ID     idList      YES

       ----------            idList             declareStmt      NO

,         9            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

b         9            ID     leftFactored_idList      YES

,         9            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

h         9            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         9            COLON     declareStmt      YES

integer         9            INTEGER     dataType      YES

       ----------            dataType             declareStmt      NO

;         9            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             moduleDef      NO

get_value         10            GET_VALUE     ioStmt      YES

       ----------            ioStmt             statement      NO

(         10            BO     ioStmt      YES

b         10            ID     ioStmt      YES

)         10            BC     ioStmt      YES

;         10            SEMICOL     ioStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         11            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

p         11            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         11            COLON     declareStmt      YES

array         11            ARRAY     dataType      YES

       ----------            dataType             declareStmt      NO

[         11            SQBO     dataType      YES

-         11            MINUS     pm      YES

       ----------            pm             sign      NO

       ----------            sign             arrRange      NO

       ----------            arrRange             dataType      NO

12         11            NUM            12     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

       ----------            leftFactored_arrRange             arrRange      NO

..         11            RANGEOP     leftFactored_arrRange      YES

       epsilon     epsilon        sign      YES

       ----------            sign             leftFactored_arrRange      NO

20         11            NUM            20     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

]         11            SQBC     dataType      YES

of         11            OF     dataType      YES

integer         11            INTEGER     type      YES

       ----------            type             dataType      NO

;         11            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

a         12            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         12            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

m         12            ID     signedParam      YES

       ----------            signedParam             param      NO

[         12            SQBO     arrID      YES

       ----------            arrID             signedParam      NO

-         12            MINUS     pm      YES

       ----------            pm             sign      NO

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

5         12            NUM            5     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             arrID      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         12            SQBC     arrID      YES

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         12            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

3         12            NUM            3     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         12            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

p         13            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         13            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

m         13            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         13            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

k         14            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         14            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

true         14            true     boolValues      YES

       ----------            boolValues             param      NO

       ----------            param             factor      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         14            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

p         15            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         15            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

m         15            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         15            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

p         15            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         15            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

p         16            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

[         16            SQBO     lvalueARRStmt      YES

       ----------            lvalueARRStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

10         16            NUM            10     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             lvalueARRStmt      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         16            SQBC     lvalueARRStmt      YES

:=         16            ASSIGNOP     lvalueARRStmt      YES

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         16            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

*         16            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

b         16            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

       ----------            arithmeticExpr             anyTerm      NO

-         16            MINUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

20         16            NUM            20     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

*         16            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

h         16            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueARRStmt      NO

;         16            SEMICOL     lvalueARRStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

while         17            WHILE     iterativeStmt      YES

       ----------            iterativeStmt             statement      NO

(         17            BO     iterativeStmt      YES

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

k         17            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             iterativeStmt      NO

AND         17            AND     logicalOp      YES

       ----------            logicalOp             logicalTerm      NO

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

x         17            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             logicalTerm      NO

<=         17            LE     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

m         17            ID     signedParam      YES

       ----------            signedParam             param      NO

[         17            SQBO     arrID      YES

       ----------            arrID             signedParam      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

11         17            NUM            11     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             arrID      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         17            SQBC     arrID      YES

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

OR         17            OR     logicalOp      YES

       ----------            logicalOp             logicalTerm      NO

       ----------            logicalTerm             logicalTerm      NO

false         17            false     boolValues      YES

       ----------            boolValues             param      NO

       ----------            param             factor      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             logicalTerm      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             logicalTerm      NO

)         17            BC     iterativeStmt      YES

start         18            START     iterativeStmt      YES

declare         19            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

p         19            ID     idList      YES

       ----------            idList             declareStmt      NO

,         19            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

u         19            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         19            COLON     declareStmt      YES

integer         19            INTEGER     dataType      YES

       ----------            dataType             declareStmt      NO

;         19            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             iterativeStmt      NO

declare         20            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

b         20            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         20            COLON     declareStmt      YES

array         20            ARRAY     dataType      YES

       ----------            dataType             declareStmt      NO

[         20            SQBO     dataType      YES

       epsilon     epsilon        sign      YES

       ----------            sign             arrRange      NO

       ----------            arrRange             dataType      NO

2         20            NUM            2     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

       ----------            leftFactored_arrRange             arrRange      NO

..         20            RANGEOP     leftFactored_arrRange      YES

       epsilon     epsilon        sign      YES

       ----------            sign             leftFactored_arrRange      NO

20         20            NUM            20     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

]         20            SQBC     dataType      YES

of         20            OF     dataType      YES

integer         20            INTEGER     type      YES

       ----------            type             dataType      NO

;         20            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

b         21            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         21            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

m         21            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         21            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

b         22            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

[         22            SQBO     lvalueARRStmt      YES

       ----------            lvalueARRStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

2         22            NUM            2     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             lvalueARRStmt      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         22            SQBC     lvalueARRStmt      YES

:=         22            ASSIGNOP     lvalueARRStmt      YES

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

u         22            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         22            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

m         22            ID     signedParam      YES

       ----------            signedParam             param      NO

[         22            SQBO     arrID      YES

       ----------            arrID             signedParam      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

25         22            NUM            25     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             arrID      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         22            SQBC     arrID      YES

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueARRStmt      NO

;         22            SEMICOL     lvalueARRStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

p         23            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         23            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

b         23            ID     signedParam      YES

       ----------            signedParam             param      NO

[         23            SQBO     arrID      YES

       ----------            arrID             signedParam      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

18         23            NUM            18     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             arrID      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         23            SQBC     arrID      YES

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

*         23            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

1856.000000         23            RNUM            1856.000000     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         23            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       epsilon     epsilon        statements      YES

       ----------            statements             statements      NO

end         24            END     iterativeStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

n         25            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         25            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         25            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

-         25            MINUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

p         25            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

*         25            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

b         25            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         25            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

b         26            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         26            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

b         26            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         26            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

3         26            NUM            3     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         26            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

k         27            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         27            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         27            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

>         27            GT     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

b         27            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            arithmeticBooleanExpr             expression      NO

OR         27            OR     logicalOp      YES

       ----------            logicalOp             logicalTerm      NO

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

b         27            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             logicalTerm      NO

>         27            GT     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

100         27            NUM            100     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             logicalTerm      NO

       ----------            expression             lvalueIDStmt      NO

;         27            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

print         28            PRINT     ioStmt      YES

       ----------            ioStmt             statement      NO

(         28            BO     ioStmt      YES

k         28            ID     var      YES

       ----------            var             leftFactored_ioStmt      NO

       epsilon     epsilon        whichId      YES

       ----------            whichId             var      NO

       ----------            leftFactored_ioStmt             ioStmt      NO

)         28            BC     leftFactored_ioStmt      YES

;         28            SEMICOL     leftFactored_ioStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       epsilon     epsilon        statements      YES

       ----------            statements             statements      NO

end         29            END     moduleDef      YES

       ----------            otherModules             program      NO

<<         32            DEF     module      YES

       ----------            module             otherModules      NO

module         32            MODULE     module      YES

f1         32            ID     module      YES

>>         32            ENDDEF     module      YES

takes         33            TAKES     module      YES

input         33            INPUT     module      YES

[         33            SQBO     module      YES

a         33            ID     input_plist      YES

       ----------            input_plist             module      NO

:         33            COLON     input_plist      YES

array         33            ARRAY     dataType      YES

       ----------            dataType             input_plist      NO

[         33            SQBO     dataType      YES

       epsilon     epsilon        sign      YES

       ----------            sign             arrRange      NO

       ----------            arrRange             dataType      NO

10         33            NUM            10     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

       ----------            leftFactored_arrRange             arrRange      NO

..         33            RANGEOP     leftFactored_arrRange      YES

       epsilon     epsilon        sign      YES

       ----------            sign             leftFactored_arrRange      NO

30         33            NUM            30     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

]         33            SQBC     dataType      YES

of         33            OF     dataType      YES

integer         33            INTEGER     type      YES

       ----------            type             dataType      NO

,         33            COMMA     leftFactored_input_plist      YES

       ----------            leftFactored_input_plist             input_plist      NO

b         33            ID     leftFactored_input_plist      YES

:         33            COLON     leftFactored_input_plist      YES

array         33            ARRAY     dataType      YES

       ----------            dataType             leftFactored_input_plist      NO

[         33            SQBO     dataType      YES

       epsilon     epsilon        sign      YES

       ----------            sign             arrRange      NO

       ----------            arrRange             dataType      NO

10         33            NUM            10     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

       ----------            leftFactored_arrRange             arrRange      NO

..         33            RANGEOP     leftFactored_arrRange      YES

       epsilon     epsilon        sign      YES

       ----------            sign             leftFactored_arrRange      NO

30         33            NUM            30     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

]         33            SQBC     dataType      YES

of         33            OF     dataType      YES

integer         33            INTEGER     type      YES

       ----------            type             dataType      NO

,         33            COMMA     leftFactored_input_plist      YES

       ----------            leftFactored_input_plist             leftFactored_input_plist      NO

c         33            ID     leftFactored_input_plist      YES

:         33            COLON     leftFactored_input_plist      YES

real         33            REAL     dataType      YES

       ----------            dataType             leftFactored_input_plist      NO

       epsilon     epsilon        leftFactored_input_plist      YES

       ----------            leftFactored_input_plist             leftFactored_input_plist      NO

]         33            SQBC     module      YES

;         33            SEMICOL     module      YES

returns         34            RETURNS     ret      YES

       ----------            ret             module      NO

[         34            SQBO     ret      YES

m         34            ID     output_plist      YES

       ----------            output_plist             ret      NO

:         34            COLON     output_plist      YES

boolean         34            BOOLEAN     type      YES

       ----------            type             output_plist      NO

,         34            COMMA     leftFactored_output_plist      YES

       ----------            leftFactored_output_plist             output_plist      NO

n         34            ID     leftFactored_output_plist      YES

:         34            COLON     leftFactored_output_plist      YES

integer         34            INTEGER     type      YES

       ----------            type             leftFactored_output_plist      NO

       epsilon     epsilon        leftFactored_output_plist      YES

       ----------            leftFactored_output_plist             leftFactored_output_plist      NO

]         34            SQBC     ret      YES

;         34            SEMICOL     ret      YES

start         35            START     moduleDef      YES

       ----------            moduleDef             module      NO

declare         36            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

x         36            ID     idList      YES

       ----------            idList             declareStmt      NO

,         36            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

y         36            ID     leftFactored_idList      YES

,         36            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

p         36            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         36            COLON     declareStmt      YES

real         36            REAL     dataType      YES

       ----------            dataType             declareStmt      NO

;         36            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             moduleDef      NO

declare         37            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

k         37            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         37            COLON     declareStmt      YES

integer         37            INTEGER     dataType      YES

       ----------            dataType             declareStmt      NO

;         37            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

get_value         38            GET_VALUE     ioStmt      YES

       ----------            ioStmt             statement      NO

(         38            BO     ioStmt      YES

y         38            ID     ioStmt      YES

)         38            BC     ioStmt      YES

;         38            SEMICOL     ioStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

get_value         39            GET_VALUE     ioStmt      YES

       ----------            ioStmt             statement      NO

(         39            BO     ioStmt      YES

x         39            ID     ioStmt      YES

)         39            BC     ioStmt      YES

;         39            SEMICOL     ioStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         40            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

A         40            ID     idList      YES

       ----------            idList             declareStmt      NO

,         40            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

B         40            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         40            COLON     declareStmt      YES

array         40            ARRAY     dataType      YES

       ----------            dataType             declareStmt      NO

[         40            SQBO     dataType      YES

       epsilon     epsilon        sign      YES

       ----------            sign             arrRange      NO

       ----------            arrRange             dataType      NO

4         40            NUM            4     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

       ----------            leftFactored_arrRange             arrRange      NO

..         40            RANGEOP     leftFactored_arrRange      YES

       epsilon     epsilon        sign      YES

       ----------            sign             leftFactored_arrRange      NO

10         40            NUM            10     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

]         40            SQBC     dataType      YES

of         40            OF     dataType      YES

integer         40            INTEGER     type      YES

       ----------            type             dataType      NO

;         40            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

get_value         41            GET_VALUE     ioStmt      YES

       ----------            ioStmt             statement      NO

(         41            BO     ioStmt      YES

B         41            ID     ioStmt      YES

)         41            BC     ioStmt      YES

;         41            SEMICOL     ioStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         42            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

D         42            ID     idList      YES

       ----------            idList             declareStmt      NO

,         42            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

C         42            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         42            COLON     declareStmt      YES

array         42            ARRAY     dataType      YES

       ----------            dataType             declareStmt      NO

[         42            SQBO     dataType      YES

       epsilon     epsilon        sign      YES

       ----------            sign             arrRange      NO

       ----------            arrRange             dataType      NO

10         42            NUM            10     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

       ----------            leftFactored_arrRange             arrRange      NO

..         42            RANGEOP     leftFactored_arrRange      YES

       epsilon     epsilon        sign      YES

       ----------            sign             leftFactored_arrRange      NO

30         42            NUM            30     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

]         42            SQBC     dataType      YES

of         42            OF     dataType      YES

integer         42            INTEGER     type      YES

       ----------            type             dataType      NO

;         42            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

A         43            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         43            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

B         43            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         43            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

C         44            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         44            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         44            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         44            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

D         45            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         45            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

C         45            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         45            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

for         46            FOR     iterativeStmt      YES

       ----------            iterativeStmt             statement      NO

(         46            BO     iterativeStmt      YES

k         46            ID     iterativeStmt      YES

in         46            IN     iterativeStmt      YES

-         46            MINUS     pm      YES

       ----------            pm             sign      NO

       ----------            sign             iterativeStmt      NO

15         46            NUM            15     iterativeStmt      YES

..         46            RANGEOP     iterativeStmt      YES

+         46            PLUS     pm      YES

       ----------            pm             sign      NO

       ----------            sign             iterativeStmt      NO

40         46            NUM            40     iterativeStmt      YES

)         46            BC     iterativeStmt      YES

start         47            START     iterativeStmt      YES

x         48            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         48            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

x         48            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         48            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

k         48            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

*         48            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

y         48            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         48            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             iterativeStmt      NO

declare         49            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

u         49            ID     idList      YES

       ----------            idList             declareStmt      NO

,         49            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

v         49            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         49            COLON     declareStmt      YES

real         49            REAL     dataType      YES

       ----------            dataType             declareStmt      NO

;         49            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

u         50            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         50            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

y         50            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         50            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

c         50            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

*         50            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

34.200000         50            RNUM            34.200000     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         50            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

v         51            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         51            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

u         51            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

-         51            MINUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

c         51            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

*         51            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

p         51            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

-         51            MINUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

2050.000000         51            RNUM            2050.000000     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         51            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

switch         52            SWITCH     conditionalStmt      YES

       ----------            conditionalStmt             statement      NO

(         52            BO     conditionalStmt      YES

k         52            ID     conditionalStmt      YES

)         52            BC     conditionalStmt      YES

start         53            START     conditionalStmt      YES

case         54            CASE     caseStmt      YES

       ----------            caseStmt             conditionalStmt      NO

10         54            NUM            10     value      YES

       ----------            value             caseStmt      NO

:         54            COLON     caseStmt      YES

declare         54            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

A         54            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         54            COLON     declareStmt      YES

real         54            REAL     dataType      YES

       ----------            dataType             declareStmt      NO

;         54            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             caseStmt      NO

declare         55            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

Q         55            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         55            COLON     declareStmt      YES

integer         55            INTEGER     dataType      YES

       ----------            dataType             declareStmt      NO

;         55            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         56            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

B         56            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         56            COLON     declareStmt      YES

array         56            ARRAY     dataType      YES

       ----------            dataType             declareStmt      NO

[         56            SQBO     dataType      YES

       epsilon     epsilon        sign      YES

       ----------            sign             arrRange      NO

       ----------            arrRange             dataType      NO

10         56            NUM            10     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

       ----------            leftFactored_arrRange             arrRange      NO

..         56            RANGEOP     leftFactored_arrRange      YES

       epsilon     epsilon        sign      YES

       ----------            sign             leftFactored_arrRange      NO

30         56            NUM            30     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

]         56            SQBC     dataType      YES

of         56            OF     dataType      YES

integer         56            INTEGER     type      YES

       ----------            type             dataType      NO

;         56            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         57            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

E         57            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         57            COLON     declareStmt      YES

array         57            ARRAY     dataType      YES

       ----------            dataType             declareStmt      NO

[         57            SQBO     dataType      YES

       epsilon     epsilon        sign      YES

       ----------            sign             arrRange      NO

       ----------            arrRange             dataType      NO

4         57            NUM            4     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

       ----------            leftFactored_arrRange             arrRange      NO

..         57            RANGEOP     leftFactored_arrRange      YES

       epsilon     epsilon        sign      YES

       ----------            sign             leftFactored_arrRange      NO

10         57            NUM            10     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

]         57            SQBC     dataType      YES

of         57            OF     dataType      YES

integer         57            INTEGER     type      YES

       ----------            type             dataType      NO

;         57            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

B         58            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

[         58            SQBO     lvalueARRStmt      YES

       ----------            lvalueARRStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

9         58            NUM            9     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             lvalueARRStmt      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         58            SQBC     lvalueARRStmt      YES

:=         58            ASSIGNOP     lvalueARRStmt      YES

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

k         58            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

*         58            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

20         58            NUM            20     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueARRStmt      NO

;         58            SEMICOL     lvalueARRStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

B         59            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         59            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

C         59            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         59            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

E         60            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         60            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

Q         60            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         60            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       epsilon     epsilon        statements      YES

       ----------            statements             statements      NO

break         61            BREAK     caseStmt      YES

;         61            SEMICOL     caseStmt      YES

case         62            CASE     leftFactored_caseStmt      YES

       ----------            leftFactored_caseStmt             caseStmt      NO

20         62            NUM            20     value      YES

       ----------            value             leftFactored_caseStmt      NO

:         62            COLON     leftFactored_caseStmt      YES

c         62            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         62            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

12.900000         62            RNUM            12.900000     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         62            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

u         62            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

*         62            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

y         62            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

-         62            MINUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

c         62            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         62            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             leftFactored_caseStmt      NO

get_value         63            GET_VALUE     ioStmt      YES

       ----------            ioStmt             statement      NO

(         63            BO     ioStmt      YES

Q         63            ID     ioStmt      YES

)         63            BC     ioStmt      YES

;         63            SEMICOL     ioStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

A         64            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

[         64            SQBO     lvalueARRStmt      YES

       ----------            lvalueARRStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

7         64            NUM            7     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             lvalueARRStmt      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         64            SQBC     lvalueARRStmt      YES

:=         64            ASSIGNOP     lvalueARRStmt      YES

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

k         64            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         64            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

12         64            NUM            12     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

-         64            MINUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

D         64            ID     signedParam      YES

       ----------            signedParam             param      NO

[         64            SQBO     arrID      YES

       ----------            arrID             signedParam      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

12         64            NUM            12     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             arrID      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         64            SQBC     arrID      YES

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

*         64            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

10         64            NUM            10     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

+         64            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

u         64            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueARRStmt      NO

;         64            SEMICOL     lvalueARRStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       epsilon     epsilon        statements      YES

       ----------            statements             statements      NO

break         65            BREAK     leftFactored_caseStmt      YES

;         65            SEMICOL     leftFactored_caseStmt      YES

       epsilon     epsilon        leftFactored_caseStmt      YES

       ----------            leftFactored_caseStmt             leftFactored_caseStmt      NO

default         66            DEFAULT     dfault      YES

       ----------            dfault             conditionalStmt      NO

:         66            COLON     dfault      YES

E         66            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

[         66            SQBO     lvalueARRStmt      YES

       ----------            lvalueARRStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

9         66            NUM            9     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             lvalueARRStmt      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         66            SQBC     lvalueARRStmt      YES

:=         66            ASSIGNOP     lvalueARRStmt      YES

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

B         66            ID     signedParam      YES

       ----------            signedParam             param      NO

[         66            SQBO     arrID      YES

       ----------            arrID             signedParam      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

15         66            NUM            15     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             arrID      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         66            SQBC     arrID      YES

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         66            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

Q         66            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueARRStmt      NO

;         66            SEMICOL     lvalueARRStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             dfault      NO

       epsilon     epsilon        statements      YES

       ----------            statements             statements      NO

break         67            BREAK     dfault      YES

;         67            SEMICOL     dfault      YES

end         68            END     conditionalStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

x         69            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         69            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

x         69            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         69            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

u         69            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

*         69            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

v         69            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

-         69            MINUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

u         69            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

<=         69            LE     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

v         69            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         69            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       epsilon     epsilon        statements      YES

       ----------            statements             statements      NO

end         70            END     iterativeStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

x         71            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         71            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

c         71            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         71            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

y         71            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         71            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

C         72            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

[         72            SQBO     lvalueARRStmt      YES

       ----------            lvalueARRStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

18         72            NUM            18     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             lvalueARRStmt      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         72            SQBC     lvalueARRStmt      YES

:=         72            ASSIGNOP     lvalueARRStmt      YES

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         72            ID     signedParam      YES

       ----------            signedParam             param      NO

[         72            SQBO     arrID      YES

       ----------            arrID             signedParam      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

18         72            NUM            18     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             arrID      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         72            SQBC     arrID      YES

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         72            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

b         72            ID     signedParam      YES

       ----------            signedParam             param      NO

[         72            SQBO     arrID      YES

       ----------            arrID             signedParam      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

18         72            NUM            18     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             arrID      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         72            SQBC     arrID      YES

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueARRStmt      NO

;         72            SEMICOL     lvalueARRStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

A         74            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

[         74            SQBO     lvalueARRStmt      YES

       ----------            lvalueARRStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

5         74            NUM            5     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             lvalueARRStmt      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         74            SQBC     lvalueARRStmt      YES

:=         74            ASSIGNOP     lvalueARRStmt      YES

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

B         74            ID     signedParam      YES

       ----------            signedParam             param      NO

[         74            SQBO     arrID      YES

       ----------            arrID             signedParam      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

6         74            NUM            6     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             arrID      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         74            SQBC     arrID      YES

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

-         74            MINUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

10         74            NUM            10     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueARRStmt      NO

;         74            SEMICOL     lvalueARRStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

m         75            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         75            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

A         75            ID     signedParam      YES

       ----------            signedParam             param      NO

[         75            SQBO     arrID      YES

       ----------            arrID             signedParam      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

5         75            NUM            5     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             arrID      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         75            SQBC     arrID      YES

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

<         75            LT     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

C         75            ID     signedParam      YES

       ----------            signedParam             param      NO

[         75            SQBO     arrID      YES

       ----------            arrID             signedParam      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

18         75            NUM            18     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             arrID      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         75            SQBC     arrID      YES

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

+         75            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

A         75            ID     signedParam      YES

       ----------            signedParam             param      NO

[         75            SQBO     arrID      YES

       ----------            arrID             signedParam      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

11         75            NUM            11     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             arrID      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         75            SQBC     arrID      YES

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         75            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

n         76            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         76            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

20         76            NUM            20     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

*         76            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

8         76            NUM            8     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

       ----------            arithmeticExpr             anyTerm      NO

-         76            MINUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

5         76            NUM            5     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         76            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       epsilon     epsilon        statements      YES

       ----------            statements             statements      NO

end         77            END     moduleDef      YES

       ----------            otherModules             otherModules      NO

       epsilon     epsilon        otherModules      YES

       ----------            otherModules             otherModules      NO

<<<         81            DRIVERDEF     driverModule      YES

       ----------            driverModule             program      NO

driver         81            DRIVER     driverModule      YES

program         81            PROGRAM     driverModule      YES

>>>         81            DRIVERENDDEF     driverModule      YES

start         82            START     moduleDef      YES

       ----------            moduleDef             driverModule      NO

declare         83            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

v_1_2_3         83            ID     idList      YES

       ----------            idList             declareStmt      NO

,         83            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

A         83            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         83            COLON     declareStmt      YES

integer         83            INTEGER     dataType      YES

       ----------            dataType             declareStmt      NO

;         83            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             moduleDef      NO

declare         84            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

u1         84            ID     idList      YES

       ----------            idList             declareStmt      NO

,         84            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

k         84            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         84            COLON     declareStmt      YES

boolean         84            BOOLEAN     dataType      YES

       ----------            dataType             declareStmt      NO

;         84            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

A         85            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         85            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

12         85            NUM            12     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         85            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         86            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

p         86            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         86            COLON     declareStmt      YES

real         86            REAL     dataType      YES

       ----------            dataType             declareStmt      NO

;         86            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

p         87            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         87            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

23.560000         87            RNUM            23.560000     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         87            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

get_value         88            GET_VALUE     ioStmt      YES

       ----------            ioStmt             statement      NO

(         88            BO     ioStmt      YES

v_1_2_3         88            ID     ioStmt      YES

)         88            BC     ioStmt      YES

;         88            SEMICOL     ioStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         89            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

B         89            ID     idList      YES

       ----------            idList             declareStmt      NO

,         89            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

C         89            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         89            COLON     declareStmt      YES

array         89            ARRAY     dataType      YES

       ----------            dataType             declareStmt      NO

[         89            SQBO     dataType      YES

       epsilon     epsilon        sign      YES

       ----------            sign             arrRange      NO

       ----------            arrRange             dataType      NO

2         89            NUM            2     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

       ----------            leftFactored_arrRange             arrRange      NO

..         89            RANGEOP     leftFactored_arrRange      YES

       epsilon     epsilon        sign      YES

       ----------            sign             leftFactored_arrRange      NO

20         89            NUM            20     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

]         89            SQBC     dataType      YES

of         89            OF     dataType      YES

integer         89            INTEGER     type      YES

       ----------            type             dataType      NO

;         89            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

[         90            SQBO     optional      YES

       ----------            optional             moduleReuseStmt      NO

v_1_2_3         90            ID     idList      YES

       ----------            idList             optional      NO

,         90            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

u1         90            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

]         90            SQBC     optional      YES

:=         90            ASSIGNOP     optional      YES

       ----------            moduleReuseStmt             simpleStmt      NO

use         90            USE     moduleReuseStmt      YES

module         90            MODULE     moduleReuseStmt      YES

var_demo_array         90            ID     moduleReuseStmt      YES

with         90            WITH     moduleReuseStmt      YES

parameters         90            PARAMETERS     moduleReuseStmt      YES

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             paramList      NO

A         90            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            paramList             moduleReuseStmt      NO

,         90            COMMA     leftFactored_paramList      YES

       ----------            leftFactored_paramList             paramList      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             leftFactored_paramList      NO

B         90            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

,         90            COMMA     leftFactored_paramList      YES

       ----------            leftFactored_paramList             leftFactored_paramList      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             leftFactored_paramList      NO

p         90            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       epsilon     epsilon        leftFactored_paramList      YES

       ----------            leftFactored_paramList             leftFactored_paramList      NO

;         90            SEMICOL     moduleReuseStmt      YES

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

[         91            SQBO     optional      YES

       ----------            optional             moduleReuseStmt      NO

v_1_2_3         91            ID     idList      YES

       ----------            idList             optional      NO

,         91            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

k         91            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

]         91            SQBC     optional      YES

:=         91            ASSIGNOP     optional      YES

       ----------            moduleReuseStmt             simpleStmt      NO

use         91            USE     moduleReuseStmt      YES

module         91            MODULE     moduleReuseStmt      YES

var_demo_array         91            ID     moduleReuseStmt      YES

with         91            WITH     moduleReuseStmt      YES

parameters         91            PARAMETERS     moduleReuseStmt      YES

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             paramList      NO

A         91            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            paramList             moduleReuseStmt      NO

,         91            COMMA     leftFactored_paramList      YES

       ----------            leftFactored_paramList             paramList      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             leftFactored_paramList      NO

B         91            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

,         91            COMMA     leftFactored_paramList      YES

       ----------            leftFactored_paramList             leftFactored_paramList      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             leftFactored_paramList      NO

p         91            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       epsilon     epsilon        leftFactored_paramList      YES

       ----------            leftFactored_paramList             leftFactored_paramList      NO

;         91            SEMICOL     moduleReuseStmt      YES

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         92            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

a         92            ID     idList      YES

       ----------            idList             declareStmt      NO

,         92            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

b         92            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         92            COLON     declareStmt      YES

integer         92            INTEGER     dataType      YES

       ----------            dataType             declareStmt      NO

;         92            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

a         93            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         93            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

0.058900         93            RNUM            0.058900     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         93            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

get_value         94            GET_VALUE     ioStmt      YES

       ----------            ioStmt             statement      NO

(         94            BO     ioStmt      YES

b         94            ID     ioStmt      YES

)         94            BC     ioStmt      YES

;         94            SEMICOL     ioStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         95            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

value         95            ID     idList      YES

       ----------            idList             declareStmt      NO

,         95            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

q         95            ID     leftFactored_idList      YES

,         95            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

r         95            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         95            COLON     declareStmt      YES

real         95            REAL     dataType      YES

       ----------            dataType             declareStmt      NO

;         95            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

get_value         96            GET_VALUE     ioStmt      YES

       ----------            ioStmt             statement      NO

(         96            BO     ioStmt      YES

q         96            ID     ioStmt      YES

)         96            BC     ioStmt      YES

;         96            SEMICOL     ioStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

r         97            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         97            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

2367.000000         97            RNUM            2367.000000     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         97            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

value         98            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         98            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

p         98            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         98            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

q         98            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

*         98            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

r         98            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

-         98            MINUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         98            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

*         98            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

value         98            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         98            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

k         99            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         99            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

true         99            true     boolValues      YES

       ----------            boolValues             param      NO

       ----------            param             factor      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

AND         99            AND     logicalOp      YES

       ----------            logicalOp             logicalTerm      NO

       ----------            logicalTerm             arithmeticBooleanExpr      NO

false         99            false     boolValues      YES

       ----------            boolValues             param      NO

       ----------            param             factor      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             logicalTerm      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

OR         99            OR     logicalOp      YES

       ----------            logicalOp             logicalTerm      NO

       ----------            logicalTerm             logicalTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

q         99            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             logicalTerm      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             logicalTerm      NO

       ----------            expression             lvalueIDStmt      NO

;         99            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

u1         100            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         100            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         100            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

<=         100            LE     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

b         100            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         100            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         101            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

w         101            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         101            COLON     declareStmt      YES

integer         101            INTEGER     dataType      YES

       ----------            dataType             declareStmt      NO

;         101            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

w         102            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         102            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

23         102            NUM            23     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         102            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

B         102            ID     signedParam      YES

       ----------            signedParam             param      NO

[         102            SQBO     arrID      YES

       ----------            arrID             signedParam      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

6         102            NUM            6     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             arrID      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         102            SQBC     arrID      YES

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         102            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

b         103            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         103            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         103            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

*         103            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

25         103            NUM            25     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         103            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

100         103            NUM            100     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

*         103            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

C         103            ID     signedParam      YES

       ----------            signedParam             param      NO

[         103            SQBO     arrID      YES

       ----------            arrID             signedParam      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

1         103            NUM            1     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             arrID      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         103            SQBC     arrID      YES

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         103            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         104            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

D         104            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         104            COLON     declareStmt      YES

array         104            ARRAY     dataType      YES

       ----------            dataType             declareStmt      NO

[         104            SQBO     dataType      YES

       epsilon     epsilon        sign      YES

       ----------            sign             arrRange      NO

       ----------            arrRange             dataType      NO

20         104            NUM            20     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

       ----------            leftFactored_arrRange             arrRange      NO

..         104            RANGEOP     leftFactored_arrRange      YES

       epsilon     epsilon        sign      YES

       ----------            sign             leftFactored_arrRange      NO

40         104            NUM            40     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

]         104            SQBC     dataType      YES

of         104            OF     dataType      YES

integer         104            INTEGER     type      YES

       ----------            type             dataType      NO

;         104            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

D         105            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         105            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

value         105            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

-         105            MINUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

q         105            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

+         105            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

r         105            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         105            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

w         106            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         106            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

w         106            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         106            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

5         106            NUM            5     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         106            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

B         107            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         107            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

C         107            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         107            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

C         108            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         108            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

D         108            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         108            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       epsilon     epsilon        statements      YES

       ----------            statements             statements      NO

end         109            END     moduleDef      YES

       epsilon     epsilon        otherModules      YES

       ----------            otherModules             program      NO

       ----------            finalProgram           ROOT	      NO

Enter your option: RUNNING PARSER

                      [32m FIRST AND FOLLOW AUTOMATED [0m

GIVEN SOURCE CODE IS SYNTACTICALLY CORRECT








					PRINTING AST IN LEFT TO RIGHT & PREORDER 



var_demo_array


takes


x


integer


m


array


integer


..


12


-


20


p


real


n


integer


k


boolean


declare


a


b


h


integer


get_value


b


declare


p


array


integer


..


12


-


20


:=


a


+


m


5


-


3


:=


p


m


:=


k


true


:=


p


+


m


p


:=


p


10


-


*


a


b


*


20


h


while


OR


AND


k


<=


x


m


11


false


declare


p


u


integer


declare


b


array


integer


..


2


20


:=


b


m


:=


b


2


+


u


m


25


:=


p


*


b


18


1856.000000


:=


n


-


a


*


p


b


:=


b


+


b


3


:=


k


OR


>


a


b


>


b


100


print


k


f1


takes


a


array


integer


..


10


30


b


array


integer


..


10


30


c


real


m


boolean


n


integer


declare


x


y


p


real


declare


k


integer


get_value


y


get_value


x


declare


A


B


array


integer


..


4


10


get_value


B


declare


D


C


array


integer


..


10


30


:=


A


B


:=


C


a


:=


D


C


for


k


15


-


40


+


:=


x


+


x


*


k


y


declare


u


v


real


:=


u


+


y


*


c


34.200000


:=


v


-


-


u


*


c


p


2050.000000


k


10


declare


A


real


declare


Q


integer


declare


B


array


integer


..


10


30


declare


E


array


integer


..


4


10


:=


B


9


*


k


20


:=


B


C


:=


E


Q


break


20


:=


c


-


+


12.900000


*


u


y


c


get_value


Q


:=


A


7


+


-


+


k


12


*


D


12


10


u


break


default


:=


E


9


+


B


15


Q


break


:=


x


<=


-


+


x


*


u


v


u


v


:=


x


+


c


y


:=


C


18


+


a


18


b


18


:=


A


5


-


B


6


10


:=


m


<


A


5


+


C


18


A


11


:=


n


-


*


20


8


5


driver


declare


v_1_2_3


A


integer


declare


u1


k


boolean


:=


A


12


declare


p


real


:=


p


23.560000


get_value


v_1_2_3


declare


B


C


array


integer


..


2


20


var_demo_array


v_1_2_3


u1


A


B


p


var_demo_array


v_1_2_3


k


A


B


p


declare


a


b


integer


:=


a


0.058900


get_value


b


declare


value


q


r


real


get_value


q


:=


r


2367.000000


:=


value


-


+


p


*


q


r


*


a


value


:=


k


OR


AND


true


false


q


:=


u1


<=


a


b


declare


w


integer


:=


w


+


23


B


6


:=


b


+


*


a


25


*


100


C


1


declare


D


array


integer


..


20


40


:=


D


+


-


value


q


r


:=


w


+


w


5


:=


B


C


:=


C


D


Enter your option: RUNNING PARSER

                      [32m FIRST AND FOLLOW AUTOMATED [0m

GIVEN SOURCE CODE IS SYNTACTICALLY CORRECT


NUMBER OF PARSE TREE NODES ARE: 3102		 AND TOTAL MEMORY ALLOCATED IS 0 BYTES

NUMBER OF AST NODES ARE: 956		 AND TOTAL MEMORY ALLOCATED IS 0 BYTES

COMPRESSION PERCENTAGE = 69 %

Enter your option: RUNNING PARSER

                      [32m FIRST AND FOLLOW AUTOMATED [0m

GIVEN SOURCE CODE IS SYNTACTICALLY CORRECT


LINE 12: ARRAY INDEX OUT OF BOUNDS 


LINE 15: ARRAY VARIABLE + CAN NOT BE USED FOR THIS OPERATOR

LINE 15: ARRAY VARIABLE + CAN NOT BE USED FOR THIS OPERATOR

LINE 15: TYPE MISMATCH ERROR OCCURED
LINE 15: CAN NOT ASSIGN VALUE TO AN ARRAY

LINE 16: ARRAY INDEX OUT OF BOUNDS 

LINE 17: ARRAY INDEX OUT OF BOUNDS 

LINE 21: ARRAY CAN NOT BE ASSIGNED DUE TO RANGE MISMATCH

LINE 22: ARRAY INDEX OUT OF BOUNDS 

LINE 23: TYPE MISMATCH ERROR OCCURED
LINE 23: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 25: ARRAY VARIABLE * CAN NOT BE USED FOR THIS OPERATOR

LINE 25: TYPE MISMATCH ERROR OCCURED
LINE 25: TYPE MISMATCH ERROR OCCURED
LINE 25: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH




LINE 48: TYPE MISMATCH ERROR OCCURED
LINE 48: TYPE MISMATCH ERROR OCCURED
LINE 48: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 58: ARRAY INDEX OUT OF BOUNDS 


LINE 60: CAN NOT ASSIGN VALUE TO AN ARRAY

LINE 63: VARIABLE 'Q' NOT DECLARED

LINE 64: TYPE MISMATCH ERROR OCCURED
LINE 66: ARRAY INDEX OUT OF BOUNDS 

LINE 66: VARIABLE Q NOT DECLARED IN SCOPE

LINE 66: TYPE MISMATCH ERROR OCCURED
LINE 66: VARIABLE E NOT DECLARED IN SCOPE

LINE 66: VARIABLE ON LEFT 'E' IS NOT DEFINED

LINE 69: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 75: ARRAY INDEX OUT OF BOUNDS 

LINE 90: TYPE DID NOT MATCH FOR ARRAY PARAM var_demo_array
LINE 91: TYPE DID NOT MATCH FOR ARRAY PARAM var_demo_array
LINE 93: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 98: TYPE MISMATCH ERROR OCCURED
LINE 98: TYPE MISMATCH ERROR OCCURED
LINE 98: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 99: TYPE MISMATCH ERROR OCCURED
LINE 99: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 103: ARRAY INDEX OUT OF BOUNDS 

LINE 105: CAN NOT ASSIGN VALUE TO AN ARRAY


LINE 108: ARRAY CAN NOT BE ASSIGNED DUE TO RANGE MISMATCH



					TRAVERSAL 1 ENDED 



LINE [17-24]: WHILE LOOP VARIABLE MUST BE ASSIGED VALUE ATLEAST ONCE

LINE 90: TYPE DID NOT MATCH FOR ARRAY PARAM var_demo_array
LINE 91: TYPE DID NOT MATCH FOR ARRAY PARAM var_demo_array


					TRAVERSAL 2 ENDED 



a		f1		[32-77]		integer		yes		static		[10,30]		43		0		0		

b		f1		[32-77]		integer		yes		static		[10,30]		43		5		0		

c		f1		[32-77]		real		no		**		**		4		10		0		

m		f1		[32-77]		boolean		no		**		**		1		14		0		

n		f1		[32-77]		integer		no		**		**		2		15		0		

x		f1		[32-77]		real		no		**		**		4		17		1		

y		f1		[32-77]		real		no		**		**		4		21		1		

A		f1		[32-77]		integer		yes		static		[4,10]		15		31		1		

B		f1		[32-77]		integer		yes		static		[4,10]		15		46		1		

C		f1		[32-77]		integer		yes		static		[10,30]		43		104		1		

D		f1		[32-77]		integer		yes		static		[10,30]		43		61		1		

k		f1		[32-77]		integer		no		**		**		2		29		1		

p		f1		[32-77]		real		no		**		**		4		25		1		

v		f1		[46-70]		real		no		**		**		4		153		2		

k		f1		[46-70]		integer		no		**		**		2		147		2		

u		f1		[46-70]		real		no		**		**		4		149		2		

A		f1		[52-61]		real		no		**		**		4		157		3		

B		f1		[52-61]		integer		yes		static		[10,30]		43		163		3		

E		f1		[52-61]		integer		yes		static		[4,10]		15		206		3		

Q		f1		[52-61]		integer		no		**		**		2		161		3		

x		var_demo_array		[5-29]		integer		no		**		**		2		0		0		

m		var_demo_array		[5-29]		integer		yes		static		[-12,20]		19		2		0		

p		var_demo_array		[5-29]		real		no		**		**		4		7		0		

n		var_demo_array		[5-29]		integer		no		**		**		2		11		0		

k		var_demo_array		[5-29]		boolean		no		**		**		1		13		0		

a		var_demo_array		[5-29]		integer		no		**		**		2		14		1		

b		var_demo_array		[5-29]		integer		no		**		**		2		16		1		

h		var_demo_array		[5-29]		integer		no		**		**		2		18		1		

p		var_demo_array		[5-29]		integer		yes		static		[-12,20]		19		20		1		

b		var_demo_array		[17-24]		integer		yes		static		[2,20]		39		43		2		

p		var_demo_array		[17-24]		integer		no		**		**		2		39		2		

u		var_demo_array		[17-24]		integer		no		**		**		2		41		2		

w		driver		[81-109]		integer		no		**		**		2		104		1		

A		driver		[81-109]		integer		no		**		**		2		2		1		

B		driver		[81-109]		integer		yes		static		[2,20]		39		10		1		

C		driver		[81-109]		integer		yes		static		[2,20]		39		49		1		

value		driver		[81-109]		real		no		**		**		4		92		1		

D		driver		[81-109]		integer		yes		static		[20,40]		43		106		1		

v_1_2_3		driver		[81-109]		integer		no		**		**		2		0		1		

a		driver		[81-109]		integer		no		**		**		2		88		1		

b		driver		[81-109]		integer		no		**		**		2		90		1		

u1		driver		[81-109]		boolean		no		**		**		1		4		1		

k		driver		[81-109]		boolean		no		**		**		1		5		1		

p		driver		[81-109]		real		no		**		**		4		6		1		

q		driver		[81-109]		real		no		**		**		4		96		1		

r		driver		[81-109]		real		no		**		**		4		100		1		

Enter your option: RUNNING PARSER

                      [32m FIRST AND FOLLOW AUTOMATED [0m

GIVEN SOURCE CODE IS SYNTACTICALLY CORRECT


LINE 12: ARRAY INDEX OUT OF BOUNDS 


LINE 15: ARRAY VARIABLE + CAN NOT BE USED FOR THIS OPERATOR

LINE 15: ARRAY VARIABLE + CAN NOT BE USED FOR THIS OPERATOR

LINE 15: TYPE MISMATCH ERROR OCCURED
LINE 15: CAN NOT ASSIGN VALUE TO AN ARRAY

LINE 16: ARRAY INDEX OUT OF BOUNDS 

LINE 17: ARRAY INDEX OUT OF BOUNDS 

LINE 21: ARRAY CAN NOT BE ASSIGNED DUE TO RANGE MISMATCH

LINE 22: ARRAY INDEX OUT OF BOUNDS 

LINE 23: TYPE MISMATCH ERROR OCCURED
LINE 23: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 25: ARRAY VARIABLE * CAN NOT BE USED FOR THIS OPERATOR

LINE 25: TYPE MISMATCH ERROR OCCURED
LINE 25: TYPE MISMATCH ERROR OCCURED
LINE 25: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH




LINE 48: TYPE MISMATCH ERROR OCCURED
LINE 48: TYPE MISMATCH ERROR OCCURED
LINE 48: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 58: ARRAY INDEX OUT OF BOUNDS 


LINE 60: CAN NOT ASSIGN VALUE TO AN ARRAY

LINE 63: VARIABLE 'Q' NOT DECLARED

LINE 64: TYPE MISMATCH ERROR OCCURED
LINE 66: ARRAY INDEX OUT OF BOUNDS 

LINE 66: VARIABLE Q NOT DECLARED IN SCOPE

LINE 66: TYPE MISMATCH ERROR OCCURED
LINE 66: VARIABLE E NOT DECLARED IN SCOPE

LINE 66: VARIABLE ON LEFT 'E' IS NOT DEFINED

LINE 69: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 75: ARRAY INDEX OUT OF BOUNDS 

LINE 90: TYPE DID NOT MATCH FOR ARRAY PARAM var_demo_array
LINE 91: TYPE DID NOT MATCH FOR ARRAY PARAM var_demo_array
LINE 93: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 98: TYPE MISMATCH ERROR OCCURED
LINE 98: TYPE MISMATCH ERROR OCCURED
LINE 98: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 99: TYPE MISMATCH ERROR OCCURED
LINE 99: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 103: ARRAY INDEX OUT OF BOUNDS 

LINE 105: CAN NOT ASSIGN VALUE TO AN ARRAY


LINE 108: ARRAY CAN NOT BE ASSIGNED DUE TO RANGE MISMATCH



					TRAVERSAL 1 ENDED 



LINE [17-24]: WHILE LOOP VARIABLE MUST BE ASSIGED VALUE ATLEAST ONCE

LINE 90: TYPE DID NOT MATCH FOR ARRAY PARAM var_demo_array
LINE 91: TYPE DID NOT MATCH FOR ARRAY PARAM var_demo_array


					TRAVERSAL 2 ENDED 









					PRINTING ACTIVATION RECORD SIZES 



		f1					221


		var_demo_array					82


		driver					149


Enter your option: RUNNING PARSER

                      [32m FIRST AND FOLLOW AUTOMATED [0m

GIVEN SOURCE CODE IS SYNTACTICALLY CORRECT


LINE 12: ARRAY INDEX OUT OF BOUNDS 


LINE 15: ARRAY VARIABLE + CAN NOT BE USED FOR THIS OPERATOR

LINE 15: ARRAY VARIABLE + CAN NOT BE USED FOR THIS OPERATOR

LINE 15: TYPE MISMATCH ERROR OCCURED
LINE 15: CAN NOT ASSIGN VALUE TO AN ARRAY

LINE 16: ARRAY INDEX OUT OF BOUNDS 

LINE 17: ARRAY INDEX OUT OF BOUNDS 

LINE 21: ARRAY CAN NOT BE ASS