            FIRST AND FOLLOW SETS AUTOMATED         
            BOTH LEXICAL AND SYNTAX ANALYSIS MODULE IMPLEMENTED         
            MODULES WORK WITH ALL GIVEN TEST CASES
Enter your option: RUNNING PARSER

                      [32m FIRST AND FOLLOW AUTOMATED [0m

GIVEN SOURCE CODE IS SYNTACTICALLY CORRECT


moduleDeclarations


LINE IS 15

function1




LINE IS 16

function2




LINE IS 17

function4




LINE IS 18

switch_int_default


otherModules


LINE IS 21

switch_var_demo1




LINE IS 26

declare




LINE IS 27

declare




LINE IS 28

declare




LINE IS 29

get_value




LINE IS 30

k




LINE IS 32

declare




LINE IS 33

declare




LINE IS 34

declare




LINE IS 35

declare




LINE IS 36

:=


k


LINE 38: CASE STATEMENT MUST HAVE TYPE SAME AS SWITCH VAR


LINE IS 40

:=


n




LINE IS 44

:=


x


m


u


n




LINE IS 45

switch_int_default


LINE 45: NUMBER OF ACTUAL PARAMS IS MORE THAN NUMBER OF FORMAL PARAMS



LINE IS 46

p


LINE 46: SWITCH CASE CAN NOT HAVE REAL TYPE VARIABLE



LINE IS 54

h




LINE IS 56

declare




LINE IS 57

declare




LINE IS 58

declare




LINE IS 59

declare




LINE IS 60

:=


k




LINE IS 62

:=


m


n




LINE IS 63

print


LINE 54: NO DEFAULT STATEMENT IN CASE OF BOOLEAN EXPRESSION



LINE IS 71

for_loop_demo




LINE IS 76

declare




LINE IS 77

for




LINE IS 79

:=


x


k




LINE IS 80

:=


LINE 80: FOR LOOP VARIABLE CAN NOT BE DECLARED OR ASSIGNED AGAIN
k




LINE IS 84

var_demo_array




LINE IS 88

declare




LINE IS 89

get_value




LINE IS 90

declare




LINE IS 91

declare




LINE IS 92

:=


m




LINE IS 93

function2


LINE 93: NUMBER OF ACTUAL PARAMS IS MORE THAN NUMBER OF FORMAL PARAMS



LINE IS 94

:=


ARRAY ASSIGNED



LINE IS 95

:=




LINE IS 96

:=


m


LINE 96: ARRAY VARIABLE CAN NOT BE USED FOR THIS OPERATOR

p


LINE 96: ARRAY VARIABLE CAN NOT BE USED FOR THIS OPERATOR

LINE 96: TYPE ERROR OCCURED
LINE 96:CAN NOT ASSIGN VALUE TO AN ARRAY



LINE IS 97

declare




LINE IS 98

:=


a


b


h




LINE IS 99

declare




LINE IS 100

while


x


m


k




LINE IS 102

declare




LINE IS 103

declare




LINE IS 104

declare




LINE IS 105

:=


ARRAY ASSIGNED



LINE IS 106

function1


LINE 106: NUMBER OF ACTUAL PARAMS IS MORE THAN NUMBER OF FORMAL PARAMS

LINE 106: NUMBER OF ACTUAL RETURN PARAMS IS MORE THAN NUMBER OF FORMAL RETURN PARAMS



LINE IS 107

:=


ARRAY INDEX OUT OF BOUNDS IN LINE 107

u


m




LINE IS 108

:=


b


LINE 108: TYPE ERROR OCCURED
LINE 108: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH



LINE IS 109

declare




LINE IS 110

function1


LINE 110: NUMBER OF ACTUAL PARAMS IS MORE THAN NUMBER OF FORMAL PARAMS

LINE 110: NUMBER OF ACTUAL RETURN PARAMS IS MORE THAN NUMBER OF FORMAL RETURN PARAMS



LINE IS 112

:=


p


LINE 112: ARRAY VARIABLE CAN NOT BE USED FOR THIS OPERATOR

b


LINE 112: TYPE ERROR OCCURED
a


LINE 112: TYPE ERROR OCCURED
LINE 112: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH



LINE IS 113

:=


b




LINE IS 114

:=


a


b


b




LINE IS 115

function1


LINE 115: NUMBER OF ACTUAL PARAMS IS MORE THAN NUMBER OF FORMAL PARAMS

LINE 115: NUMBER OF ACTUAL RETURN PARAMS IS MORE THAN NUMBER OF FORMAL RETURN PARAMS



LINE IS 116

print




LINE IS 119

function2




LINE IS 122

declare




LINE IS 123

function2


LINE 123: RECURSION IS NOT ALLOWED



LINE IS 128

f1




LINE IS 132

declare




LINE IS 133

declare




LINE IS 134

declare




LINE IS 135

declare




LINE IS 136

get_value




LINE IS 137

get_value




LINE IS 138

declare




LINE IS 139

declare




LINE IS 140

get_value




LINE IS 141

function2




LINE IS 142

declare




LINE IS 143

:=


ARRAY ASSIGNED



LINE IS 144

var_demo_array




LINE IS 145

:=


ARRAY ASSIGNED



LINE IS 146

function1


LINE 146: NUMBER OF ACTUAL PARAMS IS MORE THAN NUMBER OF FORMAL PARAMS

LINE 146: NUMBER OF ACTUAL RETURN PARAMS IS MORE THAN NUMBER OF FORMAL RETURN PARAMS



LINE IS 147

:=


ARRAY ASSIGNED



LINE IS 150

var_demo_array




LINE IS 151

for




LINE IS 153

:=


k


y


LINE 153: TYPE ERROR OCCURED
x


LINE 153: TYPE ERROR OCCURED
LINE 153: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH



LINE IS 154

declare




LINE IS 155

declare




LINE IS 156

:=


c


y




LINE IS 157

:=


c


p


u




LINE IS 158

function1


LINE 158: NUMBER OF ACTUAL PARAMS IS MORE THAN NUMBER OF FORMAL PARAMS

LINE 158: NUMBER OF ACTUAL RETURN PARAMS IS MORE THAN NUMBER OF FORMAL RETURN PARAMS



LINE IS 159

k




LINE IS 161

declare




LINE IS 162

declare




LINE IS 163

declare




LINE IS 164

declare




LINE IS 165

:=


k




LINE IS 166

:=


ARRAY ASSIGNED



LINE IS 167

:=


LINE 167:CAN NOT ASSIGN VALUE TO AN ARRAY



LINE IS 169

:=


u


y


c


LINE 169:CAN NOT ASSIGN VALUE TO AN ARRAY



LINE IS 170

function1


LINE 170: NUMBER OF ACTUAL PARAMS IS MORE THAN NUMBER OF FORMAL PARAMS

LINE 170: NUMBER OF ACTUAL RETURN PARAMS IS MORE THAN NUMBER OF FORMAL RETURN PARAMS



LINE IS 171

get_value


LINE 171: VARIABLE NOT DECLARED



LINE IS 172

:=


k


LINE 172: VARIABLE NOT DEFINED IN SCOPE

Q


LINE 172: TYPE ERROR OCCURED
LINE 172: TYPE ERROR OCCURED
u


LINE 172: TYPE ERROR OCCURED


LINE IS 174

:=


ARRAY INDEX OUT OF BOUNDS IN LINE 174

LINE 174: VARIABLE NOT DEFINED IN SCOPE

B


Q


LINE 174: TYPE ERROR OCCURED


LINE IS 175

function1


LINE 175: NUMBER OF ACTUAL PARAMS IS MORE THAN NUMBER OF FORMAL PARAMS

LINE 175: NUMBER OF ACTUAL RETURN PARAMS IS MORE THAN NUMBER OF FORMAL RETURN PARAMS



LINE IS 178

:=


u


v


x


u


v


LINE 178: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH



LINE IS 180

:=


c


y




LINE IS 181

function3


LINE 181: FUNCTION NOT DEFINED

LINE IS 190

function3




LINE IS 194

:=


a


b




LINE IS 197

function4




LINE IS 201

:=


a


b




LINE IS 204

function3


LINE 204: THIS MODULE HAS ALREADY BEEN DEFINED
driverModule


LINE IS 212

driver




LINE IS 214

declare




LINE IS 215

declare




LINE IS 216

:=




LINE IS 217

declare




LINE IS 218

function4




LINE IS 219

:=




LINE IS 220

get_value




LINE IS 221

declare




LINE IS 222

var_demo_array




LINE IS 223

var_demo_array




LINE IS 224

declare




LINE IS 225

:=


LINE 225: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH



LINE IS 226

get_value




LINE IS 227

declare




LINE IS 228

get_value




LINE IS 229

:=




LINE IS 230

:=


q


r


p


a


value


LINE 230: TYPE ERROR OCCURED
LINE 230: TYPE ERROR OCCURED
LINE 230: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH



LINE IS 231

:=


q


TYPE ERROR OCCURED AT LINE 231
LINE 231: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH



LINE IS 232

:=


a


b




LINE IS 233

declare




LINE IS 234

:=


B




LINE IS 235

:=


a


ARRAY INDEX OUT OF BOUNDS IN LINE 235

C




LINE IS 236

declare




LINE IS 237

:=


value


q


r


LINE 237:CAN NOT ASSIGN VALUE TO AN ARRAY



LINE IS 238

:=


w




LINE IS 239

:=


ARRAY ASSIGNED



LINE IS 240

:=


LINE 240: ARRAY CAN NOT BE ASSIGNED DUE TO RANGE MISMATCH

otherModules


LINE IS 243

function1




LINE IS 247

declare




LINE IS 248

declare




LINE IS 249

get_value




LINE IS 250

:=


ARRAY ASSIGNED



LINE IS 251

:=


length


q


g


h




LINE IS 252

declare




LINE IS 253

declare




LINE IS 254

:=


q




LINE IS 255

get_value




LINE IS 256

function1


LINE 256: RECURSION IS NOT ALLOWED



LINE IS 261

function1


LINE 261: THIS MODULE HAS ALREADY BEEN DEFINED


LINE IS 269

switch_int_default




LINE IS 272

declare




LINE IS 273

declare




LINE IS 274

declare




LINE IS 275

:=


a


b




LINE IS 276

for_loop_demo




LINE IS 277

a




LINE IS 279

:=


a


b




LINE IS 281

:=


a


b




LINE IS 283

:=


a


b




LINE IS 285

:=


a


b


LINE 285: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 277: DEFAULT STATEMENT MUST BE THERE IN CASE OF INTEGER
Enter your option: 