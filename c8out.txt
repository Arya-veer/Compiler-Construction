            FIRST AND FOLLOW SETS AUTOMATED         
            BOTH LEXICAL AND SYNTAX ANALYSIS MODULE IMPLEMENTED         
            MODULES WORK WITH ALL GIVEN TEST CASES
Enter your option: RUNNING PARSER

                      [32m FIRST AND FOLLOW AUTOMATED [0m

GIVEN SOURCE CODE IS SYNTACTICALLY CORRECT


MAKE NODE

declare


x


integer


MAKE NODE

declare


b


boolean


MAKE NODE

get_value


x


NODE IS NULL

MAKE NODE

19


NODE IS NULL

NODE IS NULL

MAKE NODE

:=


y


19


MAKE NODE

56


NODE IS NULL

NODE IS NULL

MAKE NODE

:=


z


56


MAKE NODE

declare


z


integer


MAKE NODE

-


10


NODE IS NULL

MAKE NODE

:=


z


-


MAKE NODE

x


NODE IS NULL

NODE IS NULL

MAKE NODE

2


NODE IS NULL

NODE IS NULL

MAKE NODE

*


x


2


MAKE NODE

y


NODE IS NULL

NODE IS NULL

MAKE NODE

-


*


y


MAKE NODE

z


NODE IS NULL

NODE IS NULL

MAKE NODE

3


NODE IS NULL

NODE IS NULL

MAKE NODE

*


z


3


MAKE NODE

+


-


*


MAKE NODE

:=


y


+


MAKE NODE

y


NODE IS NULL

NODE IS NULL

MAKE NODE

print


y


NODE IS NULL

MAKE NODE

1


declare


NODE IS NULL

MAKE NODE

declare


x


integer


MAKE NODE

6


NODE IS NULL

NODE IS NULL

MAKE NODE

:=


x


6


MAKE NODE

x


NODE IS NULL

NODE IS NULL

MAKE NODE

3


NODE IS NULL

NODE IS NULL

MAKE NODE

*


x


3


MAKE NODE

z


NODE IS NULL

NODE IS NULL

MAKE NODE

-


*


z


MAKE NODE

:=


z


-


MAKE NODE

z


NODE IS NULL

NODE IS NULL

MAKE NODE

print


z


NODE IS NULL

MAKE NODE

2


declare


NODE IS NULL

MAKE NODE

x


NODE IS NULL

NODE IS NULL

MAKE NODE

print


x


NODE IS NULL

MAKE NODE

default


print


NODE IS NULL

MAKE NODE

x


1


default


MAKE NODE

y


NODE IS NULL

NODE IS NULL

MAKE NODE

print


y


NODE IS NULL

MAKE NODE

x


NODE IS NULL

NODE IS NULL

MAKE NODE

print


x


NODE IS NULL

MAKE NODE

z


NODE IS NULL

NODE IS NULL

MAKE NODE

print


z


NODE IS NULL

MAKE NODE

driver


declare


NODE IS NULL



					TRAVERSAL 1 ENDED 



					TRAVERSAL 2 ENDED 

x		driver		[9-10000]		integer		no		**		**		2		0		1		

y		driver		[9-10000]		integer		no		**		**		2		2		1		

z		driver		[9-10000]		integer		no		**		**		2		4		1		

b		driver		[9-10000]		boolean		no		**		**		1		6		1		

z		driver		[9-10000]		integer		no		**		**		2		7		2		

x		driver		[9-10000]		integer		no		**		**		2		9		2		

STARTING INTERMEDIATE CODE GENERATION

*****************
19


NODE IS NULL

NODE IS NULL

_________________
*****************
56


NODE IS NULL

NODE IS NULL

_________________
*****************
-


10


NODE IS NULL

_________________
*****************
10


NODE IS NULL

NODE IS NULL

_________________
*****************
+


-


*


_________________
*****************
-


*


y


_________________
*****************
*


x


2


_________________
*****************
x


NODE IS NULL

NODE IS NULL

_________________
*****************
2


NODE IS NULL

NODE IS NULL

_________________
*****************
y


NODE IS NULL

NODE IS NULL

_________________
*****************
*


z


3


_________________
*****************
z


NODE IS NULL

NODE IS NULL

_________________
*****************
3


NODE IS NULL

NODE IS NULL

_________________
*****************
6


NODE IS NULL

NODE IS NULL

_________________
*****************
-


*


z


_________________
*****************
*


x


3


_________________
*****************
x


NODE IS NULL

NODE IS NULL

_________________
*****************
3


NODE IS NULL

NODE IS NULL

_________________
*****************
z


NODE IS NULL

NODE IS NULL

_________________
PRINTING QUADRUPLE

1  driver  NULL  NULL  

7  x  NULL  NULL  

7  y  NULL  NULL  

7  z  NULL  NULL  

7  b  NULL  NULL  

8  x  NULL  NULL  

21  y  19  NULL  

21  z  56  NULL  

14  x  NULL  NULL  

16  1  NULL  NULL  

7  z  NULL  NULL  

23  t0  10  NULL  

21  z  t0  NULL  

24  t1  x  2  

23  t2  t1  y  

24  t3  z  3  

22  t4  t2  t3  

21  y  t4  NULL  

9  y  NULL  NULL  

17  NULL  NULL  NULL  

16  2  NULL  NULL  

7  x  NULL  NULL  

21  x  6  NULL  

24  t5  x  3  

23  t6  t5  z  

21  z  t6  NULL  

9  z  NULL  NULL  

17  NULL  NULL  NULL  

18  NULL  NULL  NULL  

9  x  NULL  NULL  

15  x  NULL  NULL  

9  y  NULL  NULL  

9  x  NULL  NULL  

9  z  NULL  NULL  

29  NULL  NULL  NULL  

Enter your option: 