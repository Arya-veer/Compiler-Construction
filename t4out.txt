Enter your option: 2
Skipped Comment
Skipped Comment
Skipped Comment
LINE NO: 5         LEXEME: <<         TOKEN: DEF
LINE NO: 5         LEXEME: module         TOKEN: MODULE
LINE NO: 5         LEXEME: var_demo_array         TOKEN: ID
LINE NO: 5         LEXEME: >>         TOKEN: ENDDEF
LINE NO: 6         LEXEME: takes         TOKEN: TAKES
LINE NO: 6         LEXEME: input         TOKEN: INPUT
LINE NO: 6         LEXEME: [         TOKEN: SQBO
LINE NO: 6         LEXEME: x         TOKEN: ID
LINE NO: 6         LEXEME: :         TOKEN: COLON
LINE NO: 6         LEXEME: integer         TOKEN: INTEGER
LINE NO: 6         LEXEME: ,         TOKEN: COMMA
LINE NO: 6         LEXEME: m         TOKEN: ID
LINE NO: 6         LEXEME: :         TOKEN: COLON
LINE NO: 6         LEXEME: array         TOKEN: ARRAY
LINE NO: 6         LEXEME: [         TOKEN: SQBO
LINE NO: 6         LEXEME: 2         TOKEN: NUM
LINE NO: 6         LEXEME: ..         TOKEN: RANGEOP
LINE NO: 6         LEXEME: 20         TOKEN: NUM
LINE NO: 6         LEXEME: ]         TOKEN: SQBC
LINE NO: 6         LEXEME: of         TOKEN: OF
LINE NO: 6         LEXEME: integer         TOKEN: INTEGER
LINE NO: 6         LEXEME: ,         TOKEN: COMMA
LINE NO: 6         LEXEME: p         TOKEN: ID
LINE NO: 6         LEXEME: :         TOKEN: COLON
LINE NO: 6         LEXEME: real         TOKEN: REAL
LINE NO: 6         LEXEME: ]         TOKEN: SQBC
LINE NO: 6         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 7         LEXEME: returns         TOKEN: RETURNS
LINE NO: 7         LEXEME: [         TOKEN: SQBO
LINE NO: 7         LEXEME: n         TOKEN: ID
LINE NO: 7         LEXEME: :         TOKEN: COLON
LINE NO: 7         LEXEME: integer         TOKEN: INTEGER
LINE NO: 7         LEXEME: ,         TOKEN: COMMA
LINE NO: 7         LEXEME: k         TOKEN: ID
LINE NO: 7         LEXEME: :         TOKEN: COLON
LINE NO: 7         LEXEME: boolean         TOKEN: BOOLEAN
LINE NO: 7         LEXEME: ]         TOKEN: SQBC
LINE NO: 7         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 8         LEXEME: start         TOKEN: START
LINE NO: 9         LEXEME: declare         TOKEN: DECLARE
LINE NO: 9         LEXEME: a         TOKEN: ID
LINE NO: 9         LEXEME: ,         TOKEN: COMMA
LINE NO: 9         LEXEME: b         TOKEN: ID
LINE NO: 9         LEXEME: :         TOKEN: COLON
LINE NO: 9         LEXEME: integer         TOKEN: INTEGER
LINE NO: 9         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 10         LEXEME: get_value         TOKEN: GET_VALUE
LINE NO: 10         LEXEME: (         TOKEN: BO
LINE NO: 10         LEXEME: b         TOKEN: ID
LINE NO: 10         LEXEME: )         TOKEN: BC
LINE NO: 10         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 11         LEXEME: declare         TOKEN: DECLARE
LINE NO: 11         LEXEME: p         TOKEN: ID
LINE NO: 11         LEXEME: :         TOKEN: COLON
LINE NO: 11         LEXEME: array         TOKEN: ARRAY
LINE NO: 11         LEXEME: [         TOKEN: SQBO
LINE NO: 11         LEXEME: 2         TOKEN: NUM
LINE NO: 11         LEXEME: ..         TOKEN: RANGEOP
LINE NO: 11         LEXEME: 20         TOKEN: NUM
LINE NO: 11         LEXEME: ]         TOKEN: SQBC
LINE NO: 11         LEXEME: of         TOKEN: OF
LINE NO: 11         LEXEME: integer         TOKEN: INTEGER
LINE NO: 11         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 12         LEXEME: a         TOKEN: ID
LINE NO: 12         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 12         LEXEME: m         TOKEN: ID
LINE NO: 12         LEXEME: [         TOKEN: SQBO
LINE NO: 12         LEXEME: 5         TOKEN: NUM
LINE NO: 12         LEXEME: ]         TOKEN: SQBC
LINE NO: 12         LEXEME: +         TOKEN: PLUS
LINE NO: 12         LEXEME: 3         TOKEN: NUM
LINE NO: 12         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 13         LEXEME: p         TOKEN: ID
LINE NO: 13         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 13         LEXEME: m         TOKEN: ID
LINE NO: 13         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 14         LEXEME: k         TOKEN: ID
LINE NO: 14         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 14         LEXEME: true         TOKEN: true
LINE NO: 14         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 15         LEXEME: p         TOKEN: ID
LINE NO: 15         LEXEME: [         TOKEN: SQBO
LINE NO: 15         LEXEME: 10         TOKEN: NUM
LINE NO: 15         LEXEME: ]         TOKEN: SQBC
LINE NO: 15         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 15         LEXEME: a         TOKEN: ID
LINE NO: 15         LEXEME: *         TOKEN: MUL
LINE NO: 15         LEXEME: b         TOKEN: ID
LINE NO: 15         LEXEME: -         TOKEN: MINUS
LINE NO: 15         LEXEME: 20         TOKEN: NUM
LINE NO: 15         LEXEME: *         TOKEN: MUL
LINE NO: 15         LEXEME: h         TOKEN: ID
LINE NO: 15         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 16         LEXEME: while         TOKEN: WHILE
LINE NO: 16         LEXEME: (         TOKEN: BO
LINE NO: 16         LEXEME: k         TOKEN: ID
LINE NO: 16         LEXEME: AND         TOKEN: AND
LINE NO: 16         LEXEME: x         TOKEN: ID
LINE NO: 16         LEXEME: <=         TOKEN: LE
LINE NO: 16         LEXEME: m         TOKEN: ID
LINE NO: 16         LEXEME: [         TOKEN: SQBO
LINE NO: 16         LEXEME: 11         TOKEN: NUM
LINE NO: 16         LEXEME: ]         TOKEN: SQBC
LINE NO: 16         LEXEME: OR         TOKEN: OR
LINE NO: 16         LEXEME: false         TOKEN: false
LINE NO: 16         LEXEME: )         TOKEN: BC
LINE NO: 17         LEXEME: start         TOKEN: START
LINE NO: 18         LEXEME: declare         TOKEN: DECLARE
LINE NO: 18         LEXEME: p         TOKEN: ID
LINE NO: 18         LEXEME: :         TOKEN: COLON
LINE NO: 18         LEXEME: integer         TOKEN: INTEGER
LINE NO: 18         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 19         LEXEME: declare         TOKEN: DECLARE
LINE NO: 19         LEXEME: b         TOKEN: ID
LINE NO: 19         LEXEME: :         TOKEN: COLON
LINE NO: 19         LEXEME: array         TOKEN: ARRAY
LINE NO: 19         LEXEME: [         TOKEN: SQBO
LINE NO: 19         LEXEME: 2         TOKEN: NUM
LINE NO: 19         LEXEME: ..         TOKEN: RANGEOP
LINE NO: 19         LEXEME: 20         TOKEN: NUM
LINE NO: 19         LEXEME: ]         TOKEN: SQBC
LINE NO: 19         LEXEME: of         TOKEN: OF
LINE NO: 19         LEXEME: integer         TOKEN: INTEGER
LINE NO: 19         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 20         LEXEME: b         TOKEN: ID
LINE NO: 20         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 20         LEXEME: m         TOKEN: ID
LINE NO: 20         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 21         LEXEME: b         TOKEN: ID
LINE NO: 21         LEXEME: [         TOKEN: SQBO
LINE NO: 21         LEXEME: 2         TOKEN: NUM
LINE NO: 21         LEXEME: ]         TOKEN: SQBC
LINE NO: 21         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 21         LEXEME: u         TOKEN: ID
LINE NO: 21         LEXEME: +         TOKEN: PLUS
LINE NO: 21         LEXEME: m         TOKEN: ID
LINE NO: 21         LEXEME: [         TOKEN: SQBO
LINE NO: 21         LEXEME: 6         TOKEN: NUM
LINE NO: 21         LEXEME: ]         TOKEN: SQBC
LINE NO: 21         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 22         LEXEME: p         TOKEN: ID
LINE NO: 22         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 22         LEXEME: b         TOKEN: ID
LINE NO: 22         LEXEME: [         TOKEN: SQBO
LINE NO: 22         LEXEME: 18         TOKEN: NUM
LINE NO: 22         LEXEME: ]         TOKEN: SQBC
LINE NO: 22         LEXEME: *         TOKEN: MUL
LINE NO: 22         LEXEME: 18         TOKEN: NUM
LINE NO: 22         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 23         LEXEME: end         TOKEN: END
LINE NO: 24         LEXEME: n         TOKEN: ID
LINE NO: 24         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 24         LEXEME: a         TOKEN: ID
LINE NO: 24         LEXEME: -         TOKEN: MINUS
LINE NO: 24         LEXEME: b         TOKEN: ID
LINE NO: 24         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 25         LEXEME: declare         TOKEN: DECLARE
LINE NO: 25         LEXEME: b         TOKEN: ID
LINE NO: 25         LEXEME: :         TOKEN: COLON
LINE NO: 25         LEXEME: real         TOKEN: REAL
LINE NO: 25         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 26         LEXEME: b         TOKEN: ID
LINE NO: 26         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 26         LEXEME: b         TOKEN: ID
LINE NO: 26         LEXEME: +         TOKEN: PLUS
LINE NO: 26         LEXEME: 3         TOKEN: NUM
LINE NO: 26         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 27         LEXEME: k         TOKEN: ID
LINE NO: 27         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 27         LEXEME: a         TOKEN: ID
LINE NO: 27         LEXEME: >         TOKEN: GT
LINE NO: 27         LEXEME: b         TOKEN: ID
LINE NO: 27         LEXEME: OR         TOKEN: OR
LINE NO: 27         LEXEME: b         TOKEN: ID
LINE NO: 27         LEXEME: >         TOKEN: GT
LINE NO: 27         LEXEME: 100         TOKEN: NUM
LINE NO: 27         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 28         LEXEME: print         TOKEN: PRINT
LINE NO: 28         LEXEME: (         TOKEN: BO
LINE NO: 28         LEXEME: k         TOKEN: ID
LINE NO: 28         LEXEME: )         TOKEN: BC
LINE NO: 28         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 29         LEXEME: end         TOKEN: END
LINE NO: 32         LEXEME: <<         TOKEN: DEF
LINE NO: 32         LEXEME: module         TOKEN: MODULE
LINE NO: 32         LEXEME: f1         TOKEN: ID
LINE NO: 32         LEXEME: >>         TOKEN: ENDDEF
LINE NO: 33         LEXEME: takes         TOKEN: TAKES
LINE NO: 33         LEXEME: input         TOKEN: INPUT
LINE NO: 33         LEXEME: [         TOKEN: SQBO
LINE NO: 33         LEXEME: a         TOKEN: ID
LINE NO: 33         LEXEME: :         TOKEN: COLON
LINE NO: 33         LEXEME: array         TOKEN: ARRAY
LINE NO: 33         LEXEME: [         TOKEN: SQBO
LINE NO: 33         LEXEME: 10         TOKEN: NUM
LINE NO: 33         LEXEME: ..         TOKEN: RANGEOP
LINE NO: 33         LEXEME: 30         TOKEN: NUM
LINE NO: 33         LEXEME: ]         TOKEN: SQBC
LINE NO: 33         LEXEME: of         TOKEN: OF
LINE NO: 33         LEXEME: integer         TOKEN: INTEGER
LINE NO: 33         LEXEME: ,         TOKEN: COMMA
LINE NO: 33         LEXEME: b         TOKEN: ID
LINE NO: 33         LEXEME: :         TOKEN: COLON
LINE NO: 33         LEXEME: array         TOKEN: ARRAY
LINE NO: 33         LEXEME: [         TOKEN: SQBO
LINE NO: 33         LEXEME: 10         TOKEN: NUM
LINE NO: 33         LEXEME: ..         TOKEN: RANGEOP
LINE NO: 33         LEXEME: 30         TOKEN: NUM
LINE NO: 33         LEXEME: ]         TOKEN: SQBC
LINE NO: 33         LEXEME: of         TOKEN: OF
LINE NO: 33         LEXEME: integer         TOKEN: INTEGER
LINE NO: 33         LEXEME: ,         TOKEN: COMMA
LINE NO: 33         LEXEME: c         TOKEN: ID
LINE NO: 33         LEXEME: :         TOKEN: COLON
LINE NO: 33         LEXEME: real         TOKEN: REAL
LINE NO: 33         LEXEME: ]         TOKEN: SQBC
LINE NO: 33         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 34         LEXEME: returns         TOKEN: RETURNS
LINE NO: 34         LEXEME: [         TOKEN: SQBO
LINE NO: 34         LEXEME: m         TOKEN: ID
LINE NO: 34         LEXEME: :         TOKEN: COLON
LINE NO: 34         LEXEME: boolean         TOKEN: BOOLEAN
LINE NO: 34         LEXEME: ,         TOKEN: COMMA
LINE NO: 34         LEXEME: n         TOKEN: ID
LINE NO: 34         LEXEME: :         TOKEN: COLON
LINE NO: 34         LEXEME: integer         TOKEN: INTEGER
LINE NO: 34         LEXEME: ]         TOKEN: SQBC
LINE NO: 34         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 35         LEXEME: start         TOKEN: START
LINE NO: 36         LEXEME: declare         TOKEN: DECLARE
LINE NO: 36         LEXEME: x         TOKEN: ID
LINE NO: 36         LEXEME: ,         TOKEN: COMMA
LINE NO: 36         LEXEME: y         TOKEN: ID
LINE NO: 36         LEXEME: :         TOKEN: COLON
LINE NO: 36         LEXEME: real         TOKEN: REAL
LINE NO: 36         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 37         LEXEME: declare         TOKEN: DECLARE
LINE NO: 37         LEXEME: k         TOKEN: ID
LINE NO: 37         LEXEME: :         TOKEN: COLON
LINE NO: 37         LEXEME: integer         TOKEN: INTEGER
LINE NO: 37         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 38         LEXEME: get_value         TOKEN: GET_VALUE
LINE NO: 38         LEXEME: (         TOKEN: BO
LINE NO: 38         LEXEME: y         TOKEN: ID
LINE NO: 38         LEXEME: )         TOKEN: BC
LINE NO: 38         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 39         LEXEME: get_value         TOKEN: GET_VALUE
LINE NO: 39         LEXEME: (         TOKEN: BO
LINE NO: 39         LEXEME: x         TOKEN: ID
LINE NO: 39         LEXEME: )         TOKEN: BC
LINE NO: 39         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 40         LEXEME: declare         TOKEN: DECLARE
LINE NO: 40         LEXEME: A         TOKEN: ID
LINE NO: 40         LEXEME: ,         TOKEN: COMMA
LINE NO: 40         LEXEME: B         TOKEN: ID
LINE NO: 40         LEXEME: :         TOKEN: COLON
LINE NO: 40         LEXEME: array         TOKEN: ARRAY
LINE NO: 40         LEXEME: [         TOKEN: SQBO
LINE NO: 40         LEXEME: 4         TOKEN: NUM
LINE NO: 40         LEXEME: ..         TOKEN: RANGEOP
LINE NO: 40         LEXEME: 10         TOKEN: NUM
LINE NO: 40         LEXEME: ]         TOKEN: SQBC
LINE NO: 40         LEXEME: of         TOKEN: OF
LINE NO: 40         LEXEME: integer         TOKEN: INTEGER
LINE NO: 40         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 41         LEXEME: get_value         TOKEN: GET_VALUE
LINE NO: 41         LEXEME: (         TOKEN: BO
LINE NO: 41         LEXEME: B         TOKEN: ID
LINE NO: 41         LEXEME: )         TOKEN: BC
LINE NO: 41         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 42         LEXEME: declare         TOKEN: DECLARE
LINE NO: 42         LEXEME: C         TOKEN: ID
LINE NO: 42         LEXEME: :         TOKEN: COLON
LINE NO: 42         LEXEME: array         TOKEN: ARRAY
LINE NO: 42         LEXEME: [         TOKEN: SQBO
LINE NO: 42         LEXEME: 10         TOKEN: NUM
LINE NO: 42         LEXEME: ..         TOKEN: RANGEOP
LINE NO: 42         LEXEME: 30         TOKEN: NUM
LINE NO: 42         LEXEME: ]         TOKEN: SQBC
LINE NO: 42         LEXEME: of         TOKEN: OF
LINE NO: 42         LEXEME: integer         TOKEN: INTEGER
LINE NO: 42         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 43         LEXEME: A         TOKEN: ID
LINE NO: 43         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 43         LEXEME: B         TOKEN: ID
LINE NO: 43         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 44         LEXEME: C         TOKEN: ID
LINE NO: 44         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 44         LEXEME: a         TOKEN: ID
LINE NO: 44         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 45         LEXEME: D         TOKEN: ID
LINE NO: 45         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 45         LEXEME: C         TOKEN: ID
LINE NO: 45         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 46         LEXEME: for         TOKEN: FOR
LINE NO: 46         LEXEME: (         TOKEN: BO
LINE NO: 46         LEXEME: k         TOKEN: ID
LINE NO: 46         LEXEME: in         TOKEN: IN
LINE NO: 46         LEXEME: -         TOKEN: MINUS
LINE NO: 46         LEXEME: 15         TOKEN: NUM
LINE NO: 46         LEXEME: ..         TOKEN: RANGEOP
LINE NO: 46         LEXEME: 40         TOKEN: NUM
LINE NO: 46         LEXEME: )         TOKEN: BC
LINE NO: 47         LEXEME: start         TOKEN: START
LINE NO: 48         LEXEME: x         TOKEN: ID
LINE NO: 48         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 48         LEXEME: x         TOKEN: ID
LINE NO: 48         LEXEME: +         TOKEN: PLUS
LINE NO: 48         LEXEME: y         TOKEN: ID
LINE NO: 48         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 49         LEXEME: declare         TOKEN: DECLARE
LINE NO: 49         LEXEME: u         TOKEN: ID
LINE NO: 49         LEXEME: ,         TOKEN: COMMA
LINE NO: 49         LEXEME: v         TOKEN: ID
LINE NO: 49         LEXEME: :         TOKEN: COLON
LINE NO: 49         LEXEME: real         TOKEN: REAL
LINE NO: 49         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 50         LEXEME: u         TOKEN: ID
LINE NO: 50         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 50         LEXEME: y         TOKEN: ID
LINE NO: 50         LEXEME: +         TOKEN: PLUS
LINE NO: 50         LEXEME: c         TOKEN: ID
LINE NO: 50         LEXEME: *         TOKEN: MUL
LINE NO: 50         LEXEME: 34.200000         TOKEN: RNUM
LINE NO: 50         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 51         LEXEME: v         TOKEN: ID
LINE NO: 51         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 51         LEXEME: u         TOKEN: ID
LINE NO: 51         LEXEME: -         TOKEN: MINUS
LINE NO: 51         LEXEME: c         TOKEN: ID
LINE NO: 51         LEXEME: *         TOKEN: MUL
LINE NO: 51         LEXEME: p         TOKEN: ID
LINE NO: 51         LEXEME: -         TOKEN: MINUS
LINE NO: 51         LEXEME: 2050.000000         TOKEN: RNUM
LINE NO: 51         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 52         LEXEME: switch         TOKEN: SWITCH
LINE NO: 52         LEXEME: (         TOKEN: BO
LINE NO: 52         LEXEME: k         TOKEN: ID
LINE NO: 52         LEXEME: )         TOKEN: BC
LINE NO: 53         LEXEME: start         TOKEN: START
LINE NO: 54         LEXEME: case         TOKEN: CASE
LINE NO: 54         LEXEME: 10         TOKEN: NUM
LINE NO: 54         LEXEME: :         TOKEN: COLON
LINE NO: 54         LEXEME: declare         TOKEN: DECLARE
LINE NO: 54         LEXEME: A         TOKEN: ID
LINE NO: 54         LEXEME: :         TOKEN: COLON
LINE NO: 54         LEXEME: real         TOKEN: REAL
LINE NO: 54         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 55         LEXEME: declare         TOKEN: DECLARE
LINE NO: 55         LEXEME: B         TOKEN: ID
LINE NO: 55         LEXEME: :         TOKEN: COLON
LINE NO: 55         LEXEME: array         TOKEN: ARRAY
LINE NO: 55         LEXEME: [         TOKEN: SQBO
LINE NO: 55         LEXEME: 10         TOKEN: NUM
LINE NO: 55         LEXEME: ..         TOKEN: RANGEOP
LINE NO: 55         LEXEME: 30         TOKEN: NUM
LINE NO: 55         LEXEME: ]         TOKEN: SQBC
LINE NO: 55         LEXEME: of         TOKEN: OF
LINE NO: 55         LEXEME: integer         TOKEN: INTEGER
LINE NO: 55         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 56         LEXEME: declare         TOKEN: DECLARE
LINE NO: 56         LEXEME: E         TOKEN: ID
LINE NO: 56         LEXEME: :         TOKEN: COLON
LINE NO: 56         LEXEME: array         TOKEN: ARRAY
LINE NO: 56         LEXEME: [         TOKEN: SQBO
LINE NO: 56         LEXEME: 4         TOKEN: NUM
LINE NO: 56         LEXEME: ..         TOKEN: RANGEOP
LINE NO: 56         LEXEME: 10         TOKEN: NUM
LINE NO: 56         LEXEME: ]         TOKEN: SQBC
LINE NO: 56         LEXEME: of         TOKEN: OF
LINE NO: 56         LEXEME: integer         TOKEN: INTEGER
LINE NO: 56         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 57         LEXEME: B         TOKEN: ID
LINE NO: 57         LEXEME: [         TOKEN: SQBO
LINE NO: 57         LEXEME: 15         TOKEN: NUM
LINE NO: 57         LEXEME: ]         TOKEN: SQBC
LINE NO: 57         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 57         LEXEME: k         TOKEN: ID
LINE NO: 57         LEXEME: *         TOKEN: MUL
LINE NO: 57         LEXEME: 20         TOKEN: NUM
LINE NO: 57         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 58         LEXEME: B         TOKEN: ID
LINE NO: 58         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 58         LEXEME: C         TOKEN: ID
LINE NO: 58         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 59         LEXEME: E         TOKEN: ID
LINE NO: 59         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 59         LEXEME: Q         TOKEN: ID
LINE NO: 59         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 60         LEXEME: break         TOKEN: BREAK
LINE NO: 60         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 61         LEXEME: case         TOKEN: CASE
LINE NO: 61         LEXEME: 20         TOKEN: NUM
LINE NO: 61         LEXEME: :         TOKEN: COLON
LINE NO: 61         LEXEME: declare         TOKEN: DECLARE
LINE NO: 61         LEXEME: B         TOKEN: ID
LINE NO: 61         LEXEME: ,         TOKEN: COMMA
LINE NO: 61         LEXEME: A         TOKEN: ID
LINE NO: 61         LEXEME: :         TOKEN: COLON
LINE NO: 61         LEXEME: array         TOKEN: ARRAY
LINE NO: 61         LEXEME: [         TOKEN: SQBO
LINE NO: 61         LEXEME: -         TOKEN: MINUS
LINE NO: 61         LEXEME: 11         TOKEN: NUM
LINE NO: 61         LEXEME: ..         TOKEN: RANGEOP
LINE NO: 61         LEXEME: 10         TOKEN: NUM
LINE NO: 61         LEXEME: ]         TOKEN: SQBC
LINE NO: 61         LEXEME: of         TOKEN: OF
LINE NO: 61         LEXEME: real         TOKEN: REAL
LINE NO: 61         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 62         LEXEME: A         TOKEN: ID
LINE NO: 62         LEXEME: [         TOKEN: SQBO
LINE NO: 62         LEXEME: 3         TOKEN: NUM
LINE NO: 62         LEXEME: ]         TOKEN: SQBC
LINE NO: 62         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 62         LEXEME: 12.900000         TOKEN: RNUM
LINE NO: 62         LEXEME: +         TOKEN: PLUS
LINE NO: 62         LEXEME: u         TOKEN: ID
LINE NO: 62         LEXEME: *         TOKEN: MUL
LINE NO: 62         LEXEME: y         TOKEN: ID
LINE NO: 62         LEXEME: -         TOKEN: MINUS
LINE NO: 62         LEXEME: c         TOKEN: ID
LINE NO: 62         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 63         LEXEME: declare         TOKEN: DECLARE
LINE NO: 63         LEXEME: B         TOKEN: ID
LINE NO: 63         LEXEME: :         TOKEN: COLON
LINE NO: 63         LEXEME: real         TOKEN: REAL
LINE NO: 63         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 64         LEXEME: declare         TOKEN: DECLARE
LINE NO: 64         LEXEME: Q         TOKEN: ID
LINE NO: 64         LEXEME: :         TOKEN: COLON
LINE NO: 64         LEXEME: integer         TOKEN: INTEGER
LINE NO: 64         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 65         LEXEME: get_value         TOKEN: GET_VALUE
LINE NO: 65         LEXEME: (         TOKEN: BO
LINE NO: 65         LEXEME: Q         TOKEN: ID
LINE NO: 65         LEXEME: )         TOKEN: BC
LINE NO: 65         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 66         LEXEME: u         TOKEN: ID
LINE NO: 66         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 66         LEXEME: k         TOKEN: ID
LINE NO: 66         LEXEME: +         TOKEN: PLUS
LINE NO: 66         LEXEME: 12         TOKEN: NUM
LINE NO: 66         LEXEME: -         TOKEN: MINUS
LINE NO: 66         LEXEME: Q         TOKEN: ID
LINE NO: 66         LEXEME: *         TOKEN: MUL
LINE NO: 66         LEXEME: 10         TOKEN: NUM
LINE NO: 66         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 67         LEXEME: break         TOKEN: BREAK
LINE NO: 67         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 68         LEXEME: default         TOKEN: DEFAULT
LINE NO: 68         LEXEME: :         TOKEN: COLON
LINE NO: 68         LEXEME: C         TOKEN: ID
LINE NO: 68         LEXEME: [         TOKEN: SQBO
LINE NO: 68         LEXEME: 9         TOKEN: NUM
LINE NO: 68         LEXEME: ]         TOKEN: SQBC
LINE NO: 68         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 68         LEXEME: A         TOKEN: ID
LINE NO: 68         LEXEME: [         TOKEN: SQBO
LINE NO: 68         LEXEME: 15         TOKEN: NUM
LINE NO: 68         LEXEME: ]         TOKEN: SQBC
LINE NO: 68         LEXEME: +         TOKEN: PLUS
LINE NO: 68         LEXEME: Q         TOKEN: ID
LINE NO: 68         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 69         LEXEME: break         TOKEN: BREAK
LINE NO: 69         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 70         LEXEME: end         TOKEN: END
LINE NO: 71         LEXEME: x         TOKEN: ID
LINE NO: 71         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 71         LEXEME: x         TOKEN: ID
LINE NO: 71         LEXEME: +         TOKEN: PLUS
LINE NO: 71         LEXEME: u         TOKEN: ID
LINE NO: 71         LEXEME: *         TOKEN: MUL
LINE NO: 71         LEXEME: v         TOKEN: ID
LINE NO: 71         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 72         LEXEME: k         TOKEN: ID
LINE NO: 72         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 72         LEXEME: 23         TOKEN: NUM
LINE NO: 72         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 73         LEXEME: end         TOKEN: END
LINE NO: 74         LEXEME: x         TOKEN: ID
LINE NO: 74         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 74         LEXEME: c         TOKEN: ID
LINE NO: 74         LEXEME: +         TOKEN: PLUS
LINE NO: 74         LEXEME: y         TOKEN: ID
LINE NO: 74         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 75         LEXEME: C         TOKEN: ID
LINE NO: 75         LEXEME: [         TOKEN: SQBO
LINE NO: 75         LEXEME: 18         TOKEN: NUM
LINE NO: 75         LEXEME: ]         TOKEN: SQBC
LINE NO: 75         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 75         LEXEME: a         TOKEN: ID
LINE NO: 75         LEXEME: [         TOKEN: SQBO
LINE NO: 75         LEXEME: 18         TOKEN: NUM
LINE NO: 75         LEXEME: ]         TOKEN: SQBC
LINE NO: 75         LEXEME: +         TOKEN: PLUS
LINE NO: 75         LEXEME: b         TOKEN: ID
LINE NO: 75         LEXEME: [         TOKEN: SQBO
LINE NO: 75         LEXEME: 18         TOKEN: NUM
LINE NO: 75         LEXEME: ]         TOKEN: SQBC
LINE NO: 75         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 76         LEXEME: A         TOKEN: ID
LINE NO: 76         LEXEME: [         TOKEN: SQBO
LINE NO: 76         LEXEME: 5         TOKEN: NUM
LINE NO: 76         LEXEME: ]         TOKEN: SQBC
LINE NO: 76         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 76         LEXEME: B         TOKEN: ID
LINE NO: 76         LEXEME: [         TOKEN: SQBO
LINE NO: 76         LEXEME: 6         TOKEN: NUM
LINE NO: 76         LEXEME: ]         TOKEN: SQBC
LINE NO: 76         LEXEME: -         TOKEN: MINUS
LINE NO: 76         LEXEME: 10         TOKEN: NUM
LINE NO: 76         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 77         LEXEME: declare         TOKEN: DECLARE
LINE NO: 77         LEXEME: A         TOKEN: ID
LINE NO: 77         LEXEME: :         TOKEN: COLON
LINE NO: 77         LEXEME: array         TOKEN: ARRAY
LINE NO: 77         LEXEME: [         TOKEN: SQBO
LINE NO: 77         LEXEME: 10         TOKEN: NUM
LINE NO: 77         LEXEME: ..         TOKEN: RANGEOP
LINE NO: 77         LEXEME: 70         TOKEN: NUM
LINE NO: 77         LEXEME: ]         TOKEN: SQBC
LINE NO: 77         LEXEME: of         TOKEN: OF
LINE NO: 77         LEXEME: integer         TOKEN: INTEGER
LINE NO: 77         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 78         LEXEME: m         TOKEN: ID
LINE NO: 78         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 78         LEXEME: A         TOKEN: ID
LINE NO: 78         LEXEME: [         TOKEN: SQBO
LINE NO: 78         LEXEME: 5         TOKEN: NUM
LINE NO: 78         LEXEME: ]         TOKEN: SQBC
LINE NO: 78         LEXEME: <         TOKEN: LT
LINE NO: 78         LEXEME: C         TOKEN: ID
LINE NO: 78         LEXEME: [         TOKEN: SQBO
LINE NO: 78         LEXEME: 18         TOKEN: NUM
LINE NO: 78         LEXEME: ]         TOKEN: SQBC
LINE NO: 78         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 79         LEXEME: m         TOKEN: ID
LINE NO: 79         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 79         LEXEME: c         TOKEN: ID
LINE NO: 79         LEXEME: >=         TOKEN: GE
LINE NO: 79         LEXEME: x         TOKEN: ID
LINE NO: 79         LEXEME: AND         TOKEN: AND
LINE NO: 79         LEXEME: E         TOKEN: ID
LINE NO: 79         LEXEME: [         TOKEN: SQBO
LINE NO: 79         LEXEME: 10         TOKEN: NUM
LINE NO: 79         LEXEME: ]         TOKEN: SQBC
LINE NO: 79         LEXEME: >=         TOKEN: GE
LINE NO: 79         LEXEME: y         TOKEN: ID
LINE NO: 79         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 80         LEXEME: n         TOKEN: ID
LINE NO: 80         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 80         LEXEME: 20         TOKEN: NUM
LINE NO: 80         LEXEME: *         TOKEN: MUL
LINE NO: 80         LEXEME: 8         TOKEN: NUM
LINE NO: 80         LEXEME: -         TOKEN: MINUS
LINE NO: 80         LEXEME: 5         TOKEN: NUM
LINE NO: 80         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 81         LEXEME: end         TOKEN: END
LINE NO: 85         LEXEME: <<<         TOKEN: DRIVERDEF
LINE NO: 85         LEXEME: driver         TOKEN: DRIVER
LINE NO: 85         LEXEME: program         TOKEN: PROGRAM
LINE NO: 85         LEXEME: >>>         TOKEN: DRIVERENDDEF
LINE NO: 86         LEXEME: start         TOKEN: START
LINE NO: 87         LEXEME: declare         TOKEN: DECLARE
LINE NO: 87         LEXEME: v_1_2_3         TOKEN: ID
LINE NO: 87         LEXEME: ,         TOKEN: COMMA
LINE NO: 87         LEXEME: A         TOKEN: ID
LINE NO: 87         LEXEME: :         TOKEN: COLON
LINE NO: 87         LEXEME: integer         TOKEN: INTEGER
LINE NO: 87         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 88         LEXEME: declare         TOKEN: DECLARE
LINE NO: 88         LEXEME: u1         TOKEN: ID
LINE NO: 88         LEXEME: :         TOKEN: COLON
LINE NO: 88         LEXEME: boolean         TOKEN: BOOLEAN
LINE NO: 88         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 89         LEXEME: A         TOKEN: ID
LINE NO: 89         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 89         LEXEME: 12         TOKEN: NUM
LINE NO: 89         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 90         LEXEME: declare         TOKEN: DECLARE
LINE NO: 90         LEXEME: p         TOKEN: ID
LINE NO: 90         LEXEME: :         TOKEN: COLON
LINE NO: 90         LEXEME: real         TOKEN: REAL
LINE NO: 90         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 91         LEXEME: p         TOKEN: ID
LINE NO: 91         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 91         LEXEME: 23.560000         TOKEN: RNUM
LINE NO: 91         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 92         LEXEME: get_value         TOKEN: GET_VALUE
LINE NO: 92         LEXEME: (         TOKEN: BO
LINE NO: 92         LEXEME: v_1_2_43         TOKEN: ID
LINE NO: 92         LEXEME: )         TOKEN: BC
LINE NO: 92         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 93         LEXEME: declare         TOKEN: DECLARE
LINE NO: 93         LEXEME: B         TOKEN: ID
LINE NO: 93         LEXEME: ,         TOKEN: COMMA
LINE NO: 93         LEXEME: C         TOKEN: ID
LINE NO: 93         LEXEME: :         TOKEN: COLON
LINE NO: 93         LEXEME: array         TOKEN: ARRAY
LINE NO: 93         LEXEME: [         TOKEN: SQBO
LINE NO: 93         LEXEME: 2         TOKEN: NUM
LINE NO: 93         LEXEME: ..         TOKEN: RANGEOP
LINE NO: 93         LEXEME: 20         TOKEN: NUM
LINE NO: 93         LEXEME: ]         TOKEN: SQBC
LINE NO: 93         LEXEME: of         TOKEN: OF
LINE NO: 93         LEXEME: integer         TOKEN: INTEGER
LINE NO: 93         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 94         LEXEME: [         TOKEN: SQBO
LINE NO: 94         LEXEME: v_1_2_3         TOKEN: ID
LINE NO: 94         LEXEME: ,         TOKEN: COMMA
LINE NO: 94         LEXEME: u1         TOKEN: ID
LINE NO: 94         LEXEME: ]         TOKEN: SQBC
LINE NO: 94         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 94         LEXEME: use         TOKEN: USE
LINE NO: 94         LEXEME: module         TOKEN: MODULE
LINE NO: 94         LEXEME: var_demo_array         TOKEN: ID
LINE NO: 94         LEXEME: with         TOKEN: WITH
LINE NO: 94         LEXEME: parameters         TOKEN: PARAMETERS
LINE NO: 94         LEXEME: A         TOKEN: ID
LINE NO: 94         LEXEME: ,         TOKEN: COMMA
LINE NO: 94         LEXEME: B         TOKEN: ID
LINE NO: 94         LEXEME: ,         TOKEN: COMMA
LINE NO: 94         LEXEME: p         TOKEN: ID
LINE NO: 94         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 95         LEXEME: [         TOKEN: SQBO
LINE NO: 95         LEXEME: v_1_2_3         TOKEN: ID
LINE NO: 95         LEXEME: ,         TOKEN: COMMA
LINE NO: 95         LEXEME: k         TOKEN: ID
LINE NO: 95         LEXEME: ]         TOKEN: SQBC
LINE NO: 95         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 95         LEXEME: use         TOKEN: USE
LINE NO: 95         LEXEME: module         TOKEN: MODULE
LINE NO: 95         LEXEME: var_demo_array         TOKEN: ID
LINE NO: 95         LEXEME: with         TOKEN: WITH
LINE NO: 95         LEXEME: parameters         TOKEN: PARAMETERS
LINE NO: 95         LEXEME: A         TOKEN: ID
LINE NO: 95         LEXEME: ,         TOKEN: COMMA
LINE NO: 95         LEXEME: B         TOKEN: ID
LINE NO: 95         LEXEME: ,         TOKEN: COMMA
LINE NO: 95         LEXEME: p         TOKEN: ID
LINE NO: 95         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 96         LEXEME: B         TOKEN: ID
LINE NO: 96         LEXEME: :=         TOKEN: ASSIGNOP
LINE NO: 96         LEXEME: C         TOKEN: ID
LINE NO: 96         LEXEME: ;         TOKEN: SEMICOL
LINE NO: 97         LEXEME: declare         TOKEN: DECLARE
LINE NO: 97         LEXEME: B         TOKEN: ID
LINE NO: 97         LEXEME: :         TOKEN: COLON
LINE NO: 97         LEXEME: real         TOKEN: REAL
LINE NO: 97         LEXEME: ;         TOKEN: SEMICOL
Skipped Comment
LINE NO: 98         LEXEME: end         TOKEN: END



		ACTION SUCCESSFUL, EXITING THE CODE


Enter your option: RUNNING PARSER

                      [32m FIRST AND FOLLOW AUTOMATED [0m

GIVEN SOURCE CODE IS SYNTACTICALLY CORRECT


       epsilon     epsilon        moduleDeclarations      YES

       ----------            moduleDeclarations             program      NO

       ----------            program             finalProgram      NO

<<         5            DEF     module      YES

       ----------            module             otherModules      NO

module         5            MODULE     module      YES

var_demo_array         5            ID     module      YES

>>         5            ENDDEF     module      YES

takes         6            TAKES     module      YES

input         6            INPUT     module      YES

[         6            SQBO     module      YES

x         6            ID     input_plist      YES

       ----------            input_plist             module      NO

:         6            COLON     input_plist      YES

integer         6            INTEGER     dataType      YES

       ----------            dataType             input_plist      NO

,         6            COMMA     leftFactored_input_plist      YES

       ----------            leftFactored_input_plist             input_plist      NO

m         6            ID     leftFactored_input_plist      YES

:         6            COLON     leftFactored_input_plist      YES

array         6            ARRAY     dataType      YES

       ----------            dataType             leftFactored_input_plist      NO

[         6            SQBO     dataType      YES

       epsilon     epsilon        sign      YES

       ----------            sign             arrRange      NO

       ----------            arrRange             dataType      NO

2         6            NUM            2     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

       ----------            leftFactored_arrRange             arrRange      NO

..         6            RANGEOP     leftFactored_arrRange      YES

       epsilon     epsilon        sign      YES

       ----------            sign             leftFactored_arrRange      NO

20         6            NUM            20     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

]         6            SQBC     dataType      YES

of         6            OF     dataType      YES

integer         6            INTEGER     type      YES

       ----------            type             dataType      NO

,         6            COMMA     leftFactored_input_plist      YES

       ----------            leftFactored_input_plist             leftFactored_input_plist      NO

p         6            ID     leftFactored_input_plist      YES

:         6            COLON     leftFactored_input_plist      YES

real         6            REAL     dataType      YES

       ----------            dataType             leftFactored_input_plist      NO

       epsilon     epsilon        leftFactored_input_plist      YES

       ----------            leftFactored_input_plist             leftFactored_input_plist      NO

]         6            SQBC     module      YES

;         6            SEMICOL     module      YES

returns         7            RETURNS     ret      YES

       ----------            ret             module      NO

[         7            SQBO     ret      YES

n         7            ID     output_plist      YES

       ----------            output_plist             ret      NO

:         7            COLON     output_plist      YES

integer         7            INTEGER     type      YES

       ----------            type             output_plist      NO

,         7            COMMA     leftFactored_output_plist      YES

       ----------            leftFactored_output_plist             output_plist      NO

k         7            ID     leftFactored_output_plist      YES

:         7            COLON     leftFactored_output_plist      YES

boolean         7            BOOLEAN     type      YES

       ----------            type             leftFactored_output_plist      NO

       epsilon     epsilon        leftFactored_output_plist      YES

       ----------            leftFactored_output_plist             leftFactored_output_plist      NO

]         7            SQBC     ret      YES

;         7            SEMICOL     ret      YES

start         8            START     moduleDef      YES

       ----------            moduleDef             module      NO

declare         9            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

a         9            ID     idList      YES

       ----------            idList             declareStmt      NO

,         9            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

b         9            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         9            COLON     declareStmt      YES

integer         9            INTEGER     dataType      YES

       ----------            dataType             declareStmt      NO

;         9            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             moduleDef      NO

get_value         10            GET_VALUE     ioStmt      YES

       ----------            ioStmt             statement      NO

(         10            BO     ioStmt      YES

b         10            ID     ioStmt      YES

)         10            BC     ioStmt      YES

;         10            SEMICOL     ioStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         11            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

p         11            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         11            COLON     declareStmt      YES

array         11            ARRAY     dataType      YES

       ----------            dataType             declareStmt      NO

[         11            SQBO     dataType      YES

       epsilon     epsilon        sign      YES

       ----------            sign             arrRange      NO

       ----------            arrRange             dataType      NO

2         11            NUM            2     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

       ----------            leftFactored_arrRange             arrRange      NO

..         11            RANGEOP     leftFactored_arrRange      YES

       epsilon     epsilon        sign      YES

       ----------            sign             leftFactored_arrRange      NO

20         11            NUM            20     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

]         11            SQBC     dataType      YES

of         11            OF     dataType      YES

integer         11            INTEGER     type      YES

       ----------            type             dataType      NO

;         11            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

a         12            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         12            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

m         12            ID     signedParam      YES

       ----------            signedParam             param      NO

[         12            SQBO     arrID      YES

       ----------            arrID             signedParam      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

5         12            NUM            5     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             arrID      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         12            SQBC     arrID      YES

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         12            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

3         12            NUM            3     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         12            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

p         13            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         13            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

m         13            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         13            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

k         14            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         14            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

true         14            true     boolValues      YES

       ----------            boolValues             param      NO

       ----------            param             factor      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         14            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

p         15            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

[         15            SQBO     lvalueARRStmt      YES

       ----------            lvalueARRStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

10         15            NUM            10     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             lvalueARRStmt      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         15            SQBC     lvalueARRStmt      YES

:=         15            ASSIGNOP     lvalueARRStmt      YES

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         15            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

*         15            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

b         15            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

       ----------            arithmeticExpr             anyTerm      NO

-         15            MINUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

20         15            NUM            20     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

*         15            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

h         15            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueARRStmt      NO

;         15            SEMICOL     lvalueARRStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

while         16            WHILE     iterativeStmt      YES

       ----------            iterativeStmt             statement      NO

(         16            BO     iterativeStmt      YES

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

k         16            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             iterativeStmt      NO

AND         16            AND     logicalOp      YES

       ----------            logicalOp             logicalTerm      NO

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

x         16            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             logicalTerm      NO

<=         16            LE     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

m         16            ID     signedParam      YES

       ----------            signedParam             param      NO

[         16            SQBO     arrID      YES

       ----------            arrID             signedParam      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

11         16            NUM            11     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             arrID      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         16            SQBC     arrID      YES

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

OR         16            OR     logicalOp      YES

       ----------            logicalOp             logicalTerm      NO

       ----------            logicalTerm             logicalTerm      NO

false         16            false     boolValues      YES

       ----------            boolValues             param      NO

       ----------            param             factor      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             logicalTerm      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             logicalTerm      NO

)         16            BC     iterativeStmt      YES

start         17            START     iterativeStmt      YES

declare         18            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

p         18            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         18            COLON     declareStmt      YES

integer         18            INTEGER     dataType      YES

       ----------            dataType             declareStmt      NO

;         18            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             iterativeStmt      NO

declare         19            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

b         19            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         19            COLON     declareStmt      YES

array         19            ARRAY     dataType      YES

       ----------            dataType             declareStmt      NO

[         19            SQBO     dataType      YES

       epsilon     epsilon        sign      YES

       ----------            sign             arrRange      NO

       ----------            arrRange             dataType      NO

2         19            NUM            2     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

       ----------            leftFactored_arrRange             arrRange      NO

..         19            RANGEOP     leftFactored_arrRange      YES

       epsilon     epsilon        sign      YES

       ----------            sign             leftFactored_arrRange      NO

20         19            NUM            20     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

]         19            SQBC     dataType      YES

of         19            OF     dataType      YES

integer         19            INTEGER     type      YES

       ----------            type             dataType      NO

;         19            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

b         20            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         20            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

m         20            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         20            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

b         21            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

[         21            SQBO     lvalueARRStmt      YES

       ----------            lvalueARRStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

2         21            NUM            2     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             lvalueARRStmt      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         21            SQBC     lvalueARRStmt      YES

:=         21            ASSIGNOP     lvalueARRStmt      YES

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

u         21            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         21            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

m         21            ID     signedParam      YES

       ----------            signedParam             param      NO

[         21            SQBO     arrID      YES

       ----------            arrID             signedParam      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

6         21            NUM            6     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             arrID      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         21            SQBC     arrID      YES

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueARRStmt      NO

;         21            SEMICOL     lvalueARRStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

p         22            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         22            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

b         22            ID     signedParam      YES

       ----------            signedParam             param      NO

[         22            SQBO     arrID      YES

       ----------            arrID             signedParam      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

18         22            NUM            18     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             arrID      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         22            SQBC     arrID      YES

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

*         22            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

18         22            NUM            18     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         22            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       epsilon     epsilon        statements      YES

       ----------            statements             statements      NO

end         23            END     iterativeStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

n         24            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         24            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         24            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

-         24            MINUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

b         24            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         24            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         25            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

b         25            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         25            COLON     declareStmt      YES

real         25            REAL     dataType      YES

       ----------            dataType             declareStmt      NO

;         25            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

b         26            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         26            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

b         26            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         26            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

3         26            NUM            3     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         26            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

k         27            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         27            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         27            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

>         27            GT     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

b         27            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            arithmeticBooleanExpr             expression      NO

OR         27            OR     logicalOp      YES

       ----------            logicalOp             logicalTerm      NO

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

b         27            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             logicalTerm      NO

>         27            GT     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

100         27            NUM            100     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             logicalTerm      NO

       ----------            expression             lvalueIDStmt      NO

;         27            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

print         28            PRINT     ioStmt      YES

       ----------            ioStmt             statement      NO

(         28            BO     ioStmt      YES

k         28            ID     var      YES

       ----------            var             leftFactored_ioStmt      NO

       epsilon     epsilon        whichId      YES

       ----------            whichId             var      NO

       ----------            leftFactored_ioStmt             ioStmt      NO

)         28            BC     leftFactored_ioStmt      YES

;         28            SEMICOL     leftFactored_ioStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       epsilon     epsilon        statements      YES

       ----------            statements             statements      NO

end         29            END     moduleDef      YES

       ----------            otherModules             program      NO

<<         32            DEF     module      YES

       ----------            module             otherModules      NO

module         32            MODULE     module      YES

f1         32            ID     module      YES

>>         32            ENDDEF     module      YES

takes         33            TAKES     module      YES

input         33            INPUT     module      YES

[         33            SQBO     module      YES

a         33            ID     input_plist      YES

       ----------            input_plist             module      NO

:         33            COLON     input_plist      YES

array         33            ARRAY     dataType      YES

       ----------            dataType             input_plist      NO

[         33            SQBO     dataType      YES

       epsilon     epsilon        sign      YES

       ----------            sign             arrRange      NO

       ----------            arrRange             dataType      NO

10         33            NUM            10     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

       ----------            leftFactored_arrRange             arrRange      NO

..         33            RANGEOP     leftFactored_arrRange      YES

       epsilon     epsilon        sign      YES

       ----------            sign             leftFactored_arrRange      NO

30         33            NUM            30     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

]         33            SQBC     dataType      YES

of         33            OF     dataType      YES

integer         33            INTEGER     type      YES

       ----------            type             dataType      NO

,         33            COMMA     leftFactored_input_plist      YES

       ----------            leftFactored_input_plist             input_plist      NO

b         33            ID     leftFactored_input_plist      YES

:         33            COLON     leftFactored_input_plist      YES

array         33            ARRAY     dataType      YES

       ----------            dataType             leftFactored_input_plist      NO

[         33            SQBO     dataType      YES

       epsilon     epsilon        sign      YES

       ----------            sign             arrRange      NO

       ----------            arrRange             dataType      NO

10         33            NUM            10     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

       ----------            leftFactored_arrRange             arrRange      NO

..         33            RANGEOP     leftFactored_arrRange      YES

       epsilon     epsilon        sign      YES

       ----------            sign             leftFactored_arrRange      NO

30         33            NUM            30     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

]         33            SQBC     dataType      YES

of         33            OF     dataType      YES

integer         33            INTEGER     type      YES

       ----------            type             dataType      NO

,         33            COMMA     leftFactored_input_plist      YES

       ----------            leftFactored_input_plist             leftFactored_input_plist      NO

c         33            ID     leftFactored_input_plist      YES

:         33            COLON     leftFactored_input_plist      YES

real         33            REAL     dataType      YES

       ----------            dataType             leftFactored_input_plist      NO

       epsilon     epsilon        leftFactored_input_plist      YES

       ----------            leftFactored_input_plist             leftFactored_input_plist      NO

]         33            SQBC     module      YES

;         33            SEMICOL     module      YES

returns         34            RETURNS     ret      YES

       ----------            ret             module      NO

[         34            SQBO     ret      YES

m         34            ID     output_plist      YES

       ----------            output_plist             ret      NO

:         34            COLON     output_plist      YES

boolean         34            BOOLEAN     type      YES

       ----------            type             output_plist      NO

,         34            COMMA     leftFactored_output_plist      YES

       ----------            leftFactored_output_plist             output_plist      NO

n         34            ID     leftFactored_output_plist      YES

:         34            COLON     leftFactored_output_plist      YES

integer         34            INTEGER     type      YES

       ----------            type             leftFactored_output_plist      NO

       epsilon     epsilon        leftFactored_output_plist      YES

       ----------            leftFactored_output_plist             leftFactored_output_plist      NO

]         34            SQBC     ret      YES

;         34            SEMICOL     ret      YES

start         35            START     moduleDef      YES

       ----------            moduleDef             module      NO

declare         36            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

x         36            ID     idList      YES

       ----------            idList             declareStmt      NO

,         36            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

y         36            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         36            COLON     declareStmt      YES

real         36            REAL     dataType      YES

       ----------            dataType             declareStmt      NO

;         36            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             moduleDef      NO

declare         37            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

k         37            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         37            COLON     declareStmt      YES

integer         37            INTEGER     dataType      YES

       ----------            dataType             declareStmt      NO

;         37            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

get_value         38            GET_VALUE     ioStmt      YES

       ----------            ioStmt             statement      NO

(         38            BO     ioStmt      YES

y         38            ID     ioStmt      YES

)         38            BC     ioStmt      YES

;         38            SEMICOL     ioStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

get_value         39            GET_VALUE     ioStmt      YES

       ----------            ioStmt             statement      NO

(         39            BO     ioStmt      YES

x         39            ID     ioStmt      YES

)         39            BC     ioStmt      YES

;         39            SEMICOL     ioStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         40            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

A         40            ID     idList      YES

       ----------            idList             declareStmt      NO

,         40            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

B         40            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         40            COLON     declareStmt      YES

array         40            ARRAY     dataType      YES

       ----------            dataType             declareStmt      NO

[         40            SQBO     dataType      YES

       epsilon     epsilon        sign      YES

       ----------            sign             arrRange      NO

       ----------            arrRange             dataType      NO

4         40            NUM            4     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

       ----------            leftFactored_arrRange             arrRange      NO

..         40            RANGEOP     leftFactored_arrRange      YES

       epsilon     epsilon        sign      YES

       ----------            sign             leftFactored_arrRange      NO

10         40            NUM            10     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

]         40            SQBC     dataType      YES

of         40            OF     dataType      YES

integer         40            INTEGER     type      YES

       ----------            type             dataType      NO

;         40            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

get_value         41            GET_VALUE     ioStmt      YES

       ----------            ioStmt             statement      NO

(         41            BO     ioStmt      YES

B         41            ID     ioStmt      YES

)         41            BC     ioStmt      YES

;         41            SEMICOL     ioStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         42            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

C         42            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         42            COLON     declareStmt      YES

array         42            ARRAY     dataType      YES

       ----------            dataType             declareStmt      NO

[         42            SQBO     dataType      YES

       epsilon     epsilon        sign      YES

       ----------            sign             arrRange      NO

       ----------            arrRange             dataType      NO

10         42            NUM            10     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

       ----------            leftFactored_arrRange             arrRange      NO

..         42            RANGEOP     leftFactored_arrRange      YES

       epsilon     epsilon        sign      YES

       ----------            sign             leftFactored_arrRange      NO

30         42            NUM            30     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

]         42            SQBC     dataType      YES

of         42            OF     dataType      YES

integer         42            INTEGER     type      YES

       ----------            type             dataType      NO

;         42            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

A         43            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         43            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

B         43            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         43            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

C         44            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         44            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         44            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         44            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

D         45            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         45            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

C         45            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         45            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

for         46            FOR     iterativeStmt      YES

       ----------            iterativeStmt             statement      NO

(         46            BO     iterativeStmt      YES

k         46            ID     iterativeStmt      YES

in         46            IN     iterativeStmt      YES

-         46            MINUS     pm      YES

       ----------            pm             sign      NO

       ----------            sign             iterativeStmt      NO

15         46            NUM            15     iterativeStmt      YES

..         46            RANGEOP     iterativeStmt      YES

       epsilon     epsilon        sign      YES

       ----------            sign             iterativeStmt      NO

40         46            NUM            40     iterativeStmt      YES

)         46            BC     iterativeStmt      YES

start         47            START     iterativeStmt      YES

x         48            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         48            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

x         48            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         48            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

y         48            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         48            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             iterativeStmt      NO

declare         49            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

u         49            ID     idList      YES

       ----------            idList             declareStmt      NO

,         49            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

v         49            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         49            COLON     declareStmt      YES

real         49            REAL     dataType      YES

       ----------            dataType             declareStmt      NO

;         49            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

u         50            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         50            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

y         50            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         50            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

c         50            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

*         50            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

34.200000         50            RNUM            34.200000     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         50            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

v         51            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         51            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

u         51            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

-         51            MINUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

c         51            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

*         51            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

p         51            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

-         51            MINUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

2050.000000         51            RNUM            2050.000000     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         51            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

switch         52            SWITCH     conditionalStmt      YES

       ----------            conditionalStmt             statement      NO

(         52            BO     conditionalStmt      YES

k         52            ID     conditionalStmt      YES

)         52            BC     conditionalStmt      YES

start         53            START     conditionalStmt      YES

case         54            CASE     caseStmt      YES

       ----------            caseStmt             conditionalStmt      NO

10         54            NUM            10     value      YES

       ----------            value             caseStmt      NO

:         54            COLON     caseStmt      YES

declare         54            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

A         54            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         54            COLON     declareStmt      YES

real         54            REAL     dataType      YES

       ----------            dataType             declareStmt      NO

;         54            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             caseStmt      NO

declare         55            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

B         55            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         55            COLON     declareStmt      YES

array         55            ARRAY     dataType      YES

       ----------            dataType             declareStmt      NO

[         55            SQBO     dataType      YES

       epsilon     epsilon        sign      YES

       ----------            sign             arrRange      NO

       ----------            arrRange             dataType      NO

10         55            NUM            10     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

       ----------            leftFactored_arrRange             arrRange      NO

..         55            RANGEOP     leftFactored_arrRange      YES

       epsilon     epsilon        sign      YES

       ----------            sign             leftFactored_arrRange      NO

30         55            NUM            30     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

]         55            SQBC     dataType      YES

of         55            OF     dataType      YES

integer         55            INTEGER     type      YES

       ----------            type             dataType      NO

;         55            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         56            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

E         56            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         56            COLON     declareStmt      YES

array         56            ARRAY     dataType      YES

       ----------            dataType             declareStmt      NO

[         56            SQBO     dataType      YES

       epsilon     epsilon        sign      YES

       ----------            sign             arrRange      NO

       ----------            arrRange             dataType      NO

4         56            NUM            4     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

       ----------            leftFactored_arrRange             arrRange      NO

..         56            RANGEOP     leftFactored_arrRange      YES

       epsilon     epsilon        sign      YES

       ----------            sign             leftFactored_arrRange      NO

10         56            NUM            10     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

]         56            SQBC     dataType      YES

of         56            OF     dataType      YES

integer         56            INTEGER     type      YES

       ----------            type             dataType      NO

;         56            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

B         57            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

[         57            SQBO     lvalueARRStmt      YES

       ----------            lvalueARRStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

15         57            NUM            15     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             lvalueARRStmt      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         57            SQBC     lvalueARRStmt      YES

:=         57            ASSIGNOP     lvalueARRStmt      YES

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

k         57            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

*         57            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

20         57            NUM            20     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueARRStmt      NO

;         57            SEMICOL     lvalueARRStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

B         58            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         58            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

C         58            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         58            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

E         59            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         59            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

Q         59            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         59            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       epsilon     epsilon        statements      YES

       ----------            statements             statements      NO

break         60            BREAK     caseStmt      YES

;         60            SEMICOL     caseStmt      YES

case         61            CASE     leftFactored_caseStmt      YES

       ----------            leftFactored_caseStmt             caseStmt      NO

20         61            NUM            20     value      YES

       ----------            value             leftFactored_caseStmt      NO

:         61            COLON     leftFactored_caseStmt      YES

declare         61            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

B         61            ID     idList      YES

       ----------            idList             declareStmt      NO

,         61            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

A         61            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         61            COLON     declareStmt      YES

array         61            ARRAY     dataType      YES

       ----------            dataType             declareStmt      NO

[         61            SQBO     dataType      YES

-         61            MINUS     pm      YES

       ----------            pm             sign      NO

       ----------            sign             arrRange      NO

       ----------            arrRange             dataType      NO

11         61            NUM            11     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

       ----------            leftFactored_arrRange             arrRange      NO

..         61            RANGEOP     leftFactored_arrRange      YES

       epsilon     epsilon        sign      YES

       ----------            sign             leftFactored_arrRange      NO

10         61            NUM            10     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

]         61            SQBC     dataType      YES

of         61            OF     dataType      YES

real         61            REAL     type      YES

       ----------            type             dataType      NO

;         61            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             leftFactored_caseStmt      NO

A         62            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

[         62            SQBO     lvalueARRStmt      YES

       ----------            lvalueARRStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

3         62            NUM            3     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             lvalueARRStmt      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         62            SQBC     lvalueARRStmt      YES

:=         62            ASSIGNOP     lvalueARRStmt      YES

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

12.900000         62            RNUM            12.900000     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         62            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

u         62            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

*         62            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

y         62            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

-         62            MINUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

c         62            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueARRStmt      NO

;         62            SEMICOL     lvalueARRStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         63            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

B         63            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         63            COLON     declareStmt      YES

real         63            REAL     dataType      YES

       ----------            dataType             declareStmt      NO

;         63            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         64            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

Q         64            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         64            COLON     declareStmt      YES

integer         64            INTEGER     dataType      YES

       ----------            dataType             declareStmt      NO

;         64            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

get_value         65            GET_VALUE     ioStmt      YES

       ----------            ioStmt             statement      NO

(         65            BO     ioStmt      YES

Q         65            ID     ioStmt      YES

)         65            BC     ioStmt      YES

;         65            SEMICOL     ioStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

u         66            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         66            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

k         66            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         66            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

12         66            NUM            12     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

-         66            MINUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

Q         66            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

*         66            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

10         66            NUM            10     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         66            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       epsilon     epsilon        statements      YES

       ----------            statements             statements      NO

break         67            BREAK     leftFactored_caseStmt      YES

;         67            SEMICOL     leftFactored_caseStmt      YES

       epsilon     epsilon        leftFactored_caseStmt      YES

       ----------            leftFactored_caseStmt             leftFactored_caseStmt      NO

default         68            DEFAULT     dfault      YES

       ----------            dfault             conditionalStmt      NO

:         68            COLON     dfault      YES

C         68            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

[         68            SQBO     lvalueARRStmt      YES

       ----------            lvalueARRStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

9         68            NUM            9     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             lvalueARRStmt      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         68            SQBC     lvalueARRStmt      YES

:=         68            ASSIGNOP     lvalueARRStmt      YES

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

A         68            ID     signedParam      YES

       ----------            signedParam             param      NO

[         68            SQBO     arrID      YES

       ----------            arrID             signedParam      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

15         68            NUM            15     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             arrID      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         68            SQBC     arrID      YES

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         68            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

Q         68            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueARRStmt      NO

;         68            SEMICOL     lvalueARRStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             dfault      NO

       epsilon     epsilon        statements      YES

       ----------            statements             statements      NO

break         69            BREAK     dfault      YES

;         69            SEMICOL     dfault      YES

end         70            END     conditionalStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

x         71            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         71            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

x         71            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         71            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

u         71            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

*         71            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

v         71            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         71            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

k         72            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         72            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

23         72            NUM            23     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         72            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       epsilon     epsilon        statements      YES

       ----------            statements             statements      NO

end         73            END     iterativeStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

x         74            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         74            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

c         74            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         74            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

y         74            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         74            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

C         75            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

[         75            SQBO     lvalueARRStmt      YES

       ----------            lvalueARRStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

18         75            NUM            18     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             lvalueARRStmt      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         75            SQBC     lvalueARRStmt      YES

:=         75            ASSIGNOP     lvalueARRStmt      YES

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

a         75            ID     signedParam      YES

       ----------            signedParam             param      NO

[         75            SQBO     arrID      YES

       ----------            arrID             signedParam      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

18         75            NUM            18     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             arrID      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         75            SQBC     arrID      YES

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

+         75            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

b         75            ID     signedParam      YES

       ----------            signedParam             param      NO

[         75            SQBO     arrID      YES

       ----------            arrID             signedParam      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

18         75            NUM            18     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             arrID      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         75            SQBC     arrID      YES

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueARRStmt      NO

;         75            SEMICOL     lvalueARRStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

A         76            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

[         76            SQBO     lvalueARRStmt      YES

       ----------            lvalueARRStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

5         76            NUM            5     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             lvalueARRStmt      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         76            SQBC     lvalueARRStmt      YES

:=         76            ASSIGNOP     lvalueARRStmt      YES

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

B         76            ID     signedParam      YES

       ----------            signedParam             param      NO

[         76            SQBO     arrID      YES

       ----------            arrID             signedParam      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

6         76            NUM            6     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             arrID      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         76            SQBC     arrID      YES

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

-         76            MINUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

10         76            NUM            10     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueARRStmt      NO

;         76            SEMICOL     lvalueARRStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         77            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

A         77            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         77            COLON     declareStmt      YES

array         77            ARRAY     dataType      YES

       ----------            dataType             declareStmt      NO

[         77            SQBO     dataType      YES

       epsilon     epsilon        sign      YES

       ----------            sign             arrRange      NO

       ----------            arrRange             dataType      NO

10         77            NUM            10     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

       ----------            leftFactored_arrRange             arrRange      NO

..         77            RANGEOP     leftFactored_arrRange      YES

       epsilon     epsilon        sign      YES

       ----------            sign             leftFactored_arrRange      NO

70         77            NUM            70     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

]         77            SQBC     dataType      YES

of         77            OF     dataType      YES

integer         77            INTEGER     type      YES

       ----------            type             dataType      NO

;         77            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

m         78            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         78            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

A         78            ID     signedParam      YES

       ----------            signedParam             param      NO

[         78            SQBO     arrID      YES

       ----------            arrID             signedParam      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

5         78            NUM            5     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             arrID      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         78            SQBC     arrID      YES

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

<         78            LT     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

C         78            ID     signedParam      YES

       ----------            signedParam             param      NO

[         78            SQBO     arrID      YES

       ----------            arrID             signedParam      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

18         78            NUM            18     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             arrID      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         78            SQBC     arrID      YES

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         78            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

m         79            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         79            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

c         79            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

>=         79            GE     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

x         79            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            arithmeticBooleanExpr             expression      NO

AND         79            AND     logicalOp      YES

       ----------            logicalOp             logicalTerm      NO

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

E         79            ID     signedParam      YES

       ----------            signedParam             param      NO

[         79            SQBO     arrID      YES

       ----------            arrID             signedParam      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

10         79            NUM            10     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             arrID      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

]         79            SQBC     arrID      YES

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             logicalTerm      NO

>=         79            GE     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

y         79            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             logicalTerm      NO

       ----------            expression             lvalueIDStmt      NO

;         79            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

n         80            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         80            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

20         80            NUM            20     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

*         80            MUL     md      YES

       ----------            md             leftFactored_term      NO

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

8         80            NUM            8     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             leftFactored_term      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             leftFactored_term      NO

       ----------            arithmeticExpr             anyTerm      NO

-         80            MINUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

5         80            NUM            5     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         80            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       epsilon     epsilon        statements      YES

       ----------            statements             statements      NO

end         81            END     moduleDef      YES

       ----------            otherModules             otherModules      NO

       epsilon     epsilon        otherModules      YES

       ----------            otherModules             otherModules      NO

<<<         85            DRIVERDEF     driverModule      YES

       ----------            driverModule             program      NO

driver         85            DRIVER     driverModule      YES

program         85            PROGRAM     driverModule      YES

>>>         85            DRIVERENDDEF     driverModule      YES

start         86            START     moduleDef      YES

       ----------            moduleDef             driverModule      NO

declare         87            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

v_1_2_3         87            ID     idList      YES

       ----------            idList             declareStmt      NO

,         87            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

A         87            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         87            COLON     declareStmt      YES

integer         87            INTEGER     dataType      YES

       ----------            dataType             declareStmt      NO

;         87            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             moduleDef      NO

declare         88            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

u1         88            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         88            COLON     declareStmt      YES

boolean         88            BOOLEAN     dataType      YES

       ----------            dataType             declareStmt      NO

;         88            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

A         89            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         89            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

12         89            NUM            12     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         89            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         90            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

p         90            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         90            COLON     declareStmt      YES

real         90            REAL     dataType      YES

       ----------            dataType             declareStmt      NO

;         90            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

p         91            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         91            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

23.560000         91            RNUM            23.560000     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         91            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

get_value         92            GET_VALUE     ioStmt      YES

       ----------            ioStmt             statement      NO

(         92            BO     ioStmt      YES

v_1_2_43         92            ID     ioStmt      YES

)         92            BC     ioStmt      YES

;         92            SEMICOL     ioStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         93            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

B         93            ID     idList      YES

       ----------            idList             declareStmt      NO

,         93            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

C         93            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

:         93            COLON     declareStmt      YES

array         93            ARRAY     dataType      YES

       ----------            dataType             declareStmt      NO

[         93            SQBO     dataType      YES

       epsilon     epsilon        sign      YES

       ----------            sign             arrRange      NO

       ----------            arrRange             dataType      NO

2         93            NUM            2     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

       ----------            leftFactored_arrRange             arrRange      NO

..         93            RANGEOP     leftFactored_arrRange      YES

       epsilon     epsilon        sign      YES

       ----------            sign             leftFactored_arrRange      NO

20         93            NUM            20     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

]         93            SQBC     dataType      YES

of         93            OF     dataType      YES

integer         93            INTEGER     type      YES

       ----------            type             dataType      NO

;         93            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

[         94            SQBO     optional      YES

       ----------            optional             moduleReuseStmt      NO

v_1_2_3         94            ID     idList      YES

       ----------            idList             optional      NO

,         94            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

u1         94            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

]         94            SQBC     optional      YES

:=         94            ASSIGNOP     optional      YES

       ----------            moduleReuseStmt             simpleStmt      NO

use         94            USE     moduleReuseStmt      YES

module         94            MODULE     moduleReuseStmt      YES

var_demo_array         94            ID     moduleReuseStmt      YES

with         94            WITH     moduleReuseStmt      YES

parameters         94            PARAMETERS     moduleReuseStmt      YES

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             paramList      NO

A         94            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            paramList             moduleReuseStmt      NO

,         94            COMMA     leftFactored_paramList      YES

       ----------            leftFactored_paramList             paramList      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             leftFactored_paramList      NO

B         94            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

,         94            COMMA     leftFactored_paramList      YES

       ----------            leftFactored_paramList             leftFactored_paramList      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             leftFactored_paramList      NO

p         94            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       epsilon     epsilon        leftFactored_paramList      YES

       ----------            leftFactored_paramList             leftFactored_paramList      NO

;         94            SEMICOL     moduleReuseStmt      YES

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

[         95            SQBO     optional      YES

       ----------            optional             moduleReuseStmt      NO

v_1_2_3         95            ID     idList      YES

       ----------            idList             optional      NO

,         95            COMMA     leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

k         95            ID     leftFactored_idList      YES

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             leftFactored_idList      NO

]         95            SQBC     optional      YES

:=         95            ASSIGNOP     optional      YES

       ----------            moduleReuseStmt             simpleStmt      NO

use         95            USE     moduleReuseStmt      YES

module         95            MODULE     moduleReuseStmt      YES

var_demo_array         95            ID     moduleReuseStmt      YES

with         95            WITH     moduleReuseStmt      YES

parameters         95            PARAMETERS     moduleReuseStmt      YES

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             paramList      NO

A         95            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            paramList             moduleReuseStmt      NO

,         95            COMMA     leftFactored_paramList      YES

       ----------            leftFactored_paramList             paramList      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             leftFactored_paramList      NO

B         95            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

,         95            COMMA     leftFactored_paramList      YES

       ----------            leftFactored_paramList             leftFactored_paramList      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             leftFactored_paramList      NO

p         95            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       epsilon     epsilon        leftFactored_paramList      YES

       ----------            leftFactored_paramList             leftFactored_paramList      NO

;         95            SEMICOL     moduleReuseStmt      YES

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

B         96            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

:=         96            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

C         96            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

;         96            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

declare         97            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

B         97            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

:         97            COLON     declareStmt      YES

real         97            REAL     dataType      YES

       ----------            dataType             declareStmt      NO

;         97            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       epsilon     epsilon        statements      YES

       ----------            statements             statements      NO

end         98            END     moduleDef      YES

       epsilon     epsilon        otherModules      YES

       ----------            otherModules             program      NO

       ----------            finalProgram           ROOT	      NO




		ACTION SUCCESSFUL, EXITING THE CODE


Enter your option: RUNNING PARSER

                      [32m FIRST AND FOLLOW AUTOMATED [0m

GIVEN SOURCE CODE IS SYNTACTICALLY CORRECT








					PRINTING AST IN LEFT TO RIGHT & PREORDER 



var_demo_array


takes


x


integer


m


array


integer


..


2


20


p


real


n


integer


k


boolean


declare


a


b


integer


get_value


b


declare


p


array


integer


..


2


20


:=


a


+


m


5


3


:=


p


m


:=


k


true


:=


p


10


-


*


a


b


*


20


h


while


OR


AND


k


<=


x


m


11


false


declare


p


integer


declare


b


array


integer


..


2


20


:=


b


m


:=


b


2


+


u


m


6


:=


p


*


b


18


18


:=


n


-


a


b


declare


b


real


:=


b


+


b


3


:=


k


OR


>


a


b


>


b


100


print


k


f1


takes


a


array


integer


..


10


30


b


array


integer


..


10


30


c


real


m


boolean


n


integer


declare


x


y


real


declare


k


integer


get_value


y


get_value


x


declare


A


B


array


integer


..


4


10


get_value


B


declare


C


array


integer


..


10


30


:=


A


B


:=


C


a


:=


D


C


for


k


15


-


40


:=


x


+


x


y


declare


u


v


real


:=


u


+


y


*


c


34.200000


:=


v


-


-


u


*


c


p


2050.000000


k


10


declare


A


real


declare


B


array


integer


..


10


30


declare


E


array


integer


..


4


10


:=


B


15


*


k


20


:=


B


C


:=


E


Q


break


20


declare


B


A


array


real


..


11


-


10


:=


A


3


-


+


12.900000


*


u


y


c


declare


B


real


declare


Q


integer


get_value


Q


:=


u


-


+


k


12


*


Q


10


break


default


:=


C


9


+


A


15


Q


break


:=


x


+


x


*


u


v


:=


k


23


:=


x


+


c


y


:=


C


18


+


a


18


b


18


:=


A


5


-


B


6


10


declare


A


array


integer


..


10


70


:=


m


<


A


5


C


18


:=


m


AND


>=


c


x


>=


E


10


y


:=


n


-


*


20


8


5


driver


declare


v_1_2_3


A


integer


declare


u1


boolean


:=


A


12


declare


p


real


:=


p


23.560000


get_value


v_1_2_43


declare


B


C


array


integer


..


2


20


var_demo_array


v_1_2_3


u1


A


B


p


var_demo_array


v_1_2_3


k


A


B


p


:=


B


C


declare


B


real





		ACTION SUCCESSFUL, EXITING THE CODE


Enter your option: RUNNING PARSER

                      [32m FIRST AND FOLLOW AUTOMATED [0m

GIVEN SOURCE CODE IS SYNTACTICALLY CORRECT


NUMBER OF PARSE TREE NODES ARE: 2562		 AND TOTAL MEMORY ALLOCATED IS 292152 BYTES

NUMBER OF AST NODES ARE: 824		 AND TOTAL MEMORY ALLOCATED IS 93963 BYTES

COMPRESSION PERCENTAGE = 67 %




		ACTION SUCCESSFUL, EXITING THE CODE


Enter your option: RUNNING PARSER

                      [32m FIRST AND FOLLOW AUTOMATED [0m

GIVEN SOURCE CODE IS SYNTACTICALLY CORRECT



LINE 15: VARIABLE h NOT DECLARED IN SCOPE

LINE 15: TYPE MISMATCH ERROR OCCURED
LINE 15: TYPE MISMATCH ERROR OCCURED

LINE 21: VARIABLE u NOT DECLARED IN SCOPE

LINE 21: TYPE MISMATCH ERROR OCCURED
LINE 25: VARIABLE 'b' ALREADY DECLARED 


LINE 45: VARIABLE D NOT DECLARED IN SCOPE

LINE 45: VARIABLE ON LEFT 'D' IS NOT DEFINED

LINE 51: VARIABLE p NOT DECLARED IN SCOPE

LINE 51: TYPE MISMATCH ERROR OCCURED
LINE 51: TYPE MISMATCH ERROR OCCURED
LINE 51: TYPE MISMATCH ERROR OCCURED
LINE 51: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH


LINE 59: VARIABLE Q NOT DECLARED IN SCOPE

LINE 59, VARIABLE 'Q' NOT DECLARED

LINE 59: CAN NOT ASSIGN VALUE TO AN ARRAY

LINE 62: ARRAY INDEX OUT OF BOUNDS 

LINE 63: VARIABLE 'B' ALREADY DECLARED 
LINE 66: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 68: ARRAY INDEX OUT OF BOUNDS 

LINE 68: VARIABLE Q NOT DECLARED IN SCOPE

LINE 68: TYPE MISMATCH ERROR OCCURED
LINE 68: ARRAY INDEX OUT OF BOUNDS 

LINE 72: FOR LOOP VARIABLE k CAN NOT BE DECLARED OR ASSIGNED AGAIN
LINE 77: VARIABLE 'A' ALREADY DECLARED 
LINE 79: VARIABLE E NOT DECLARED IN SCOPE

LINE 79: TYPE MISMATCH ERROR OCCURED
LINE 79: TYPE MISMATCH ERROR OCCURED
LINE 79: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 92: VARIABLE 'v_1_2_43' NOT DECLARED

LINE 95: VARIABLE k NOT DECLARED IN SCOPE

LINE 95: TYPE DID NOT MATCH FOR PARAM 'k'

LINE 97: VARIABLE 'B' ALREADY DECLARED 


					TRAVERSAL 1 ENDED 



LINE [16-23]: WHILE LOOP VARIABLE MUST BE ASSIGED VALUE ATLEAST ONCE

LINE 95: VARIABLE k NOT DECLARED IN SCOPE

LINE 95: TYPE DID NOT MATCH FOR PARAM 'k'


					TRAVERSAL 2 ENDED 



a		f1		[32-81]		integer		yes		static		[10,30]		5		0		0		

b		f1		[32-81]		integer		yes		static		[10,30]		5		5		0		

c		f1		[32-81]		real		no		**		**		4		10		0		

m		f1		[32-81]		boolean		no		**		**		1		14		0		

n		f1		[32-81]		integer		no		**		**		2		15		0		

x		f1		[32-81]		real		no		**		**		4		17		1		

y		f1		[32-81]		real		no		**		**		4		21		1		

A		f1		[32-81]		integer		yes		static		[4,10]		15		27		1		

B		f1		[32-81]		integer		yes		static		[4,10]		15		42		1		

C		f1		[32-81]		integer		yes		static		[10,30]		43		57		1		

k		f1		[32-81]		integer		no		**		**		2		25		1		

v		f1		[46-73]		real		no		**		**		4		106		2		

k		f1		[46-73]		integer		no		**		**		2		100		2		

u		f1		[46-73]		real		no		**		**		4		102		2		

A		f1		[54-60]		real		no		**		**		4		110		3		

B		f1		[54-60]		integer		yes		static		[10,30]		43		114		3		

E		f1		[54-60]		integer		yes		static		[4,10]		15		157		3		

A		f1		[61-67]		real		yes		static		[11,10]		1		261		3		

B		f1		[61-67]		real		yes		static		[11,10]		1		172		3		

Q		f1		[61-67]		integer		no		**		**		2		262		3		

x		var_demo_array		[5-29]		integer		no		**		**		2		0		0		

m		var_demo_array		[5-29]		integer		yes		static		[2,20]		5		2		0		

p		var_demo_array		[5-29]		real		no		**		**		4		7		0		

n		var_demo_array		[5-29]		integer		no		**		**		2		11		0		

k		var_demo_array		[5-29]		boolean		no		**		**		1		13		0		

a		var_demo_array		[5-29]		integer		no		**		**		2		14		1		

b		var_demo_array		[5-29]		integer		no		**		**		2		16		1		

p		var_demo_array		[5-29]		integer		yes		static		[2,20]		39		18		1		

b		var_demo_array		[16-23]		integer		yes		static		[2,20]		39		59		2		

p		var_demo_array		[16-23]		integer		no		**		**		2		57		2		

A		driver		[85-98]		integer		no		**		**		2		2		1		

B		driver		[85-98]		integer		yes		static		[2,20]		39		9		1		

C		driver		[85-98]		integer		yes		static		[2,20]		39		48		1		

v_1_2_3		driver		[85-98]		integer		no		**		**		2		0		1		

u1		driver		[85-98]		boolean		no		**		**		1		4		1		

p		driver		[85-98]		real		no		**		**		4		5		1		




		ACTION SUCCESSFUL, EXITING THE CODE


Enter your option: RUNNING PARSER

                      [32m FIRST AND FOLLOW AUTOMATED [0m

GIVEN SOURCE CODE IS SYNTACTICALLY CORRECT



LINE 15: VARIABLE h NOT DECLARED IN SCOPE

LINE 15: TYPE MISMATCH ERROR OCCURED
LINE 15: TYPE MISMATCH ERROR OCCURED

LINE 21: VARIABLE u NOT DECLARED IN SCOPE

LINE 21: TYPE MISMATCH ERROR OCCURED
LINE 25: VARIABLE 'b' ALREADY DECLARED 


LINE 45: VARIABLE D NOT DECLARED IN SCOPE

LINE 45: VARIABLE ON LEFT 'D' IS NOT DEFINED

LINE 51: VARIABLE p NOT DECLARED IN SCOPE

LINE 51: TYPE MISMATCH ERROR OCCURED
LINE 51: TYPE MISMATCH ERROR OCCURED
LINE 51: TYPE MISMATCH ERROR OCCURED
LINE 51: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH


LINE 59: VARIABLE Q NOT DECLARED IN SCOPE

LINE 59, VARIABLE 'Q' NOT DECLARED

LINE 59: CAN NOT ASSIGN VALUE TO AN ARRAY

LINE 62: ARRAY INDEX OUT OF BOUNDS 

LINE 63: VARIABLE 'B' ALREADY DECLARED 
LINE 66: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 68: ARRAY INDEX OUT OF BOUNDS 

LINE 68: VARIABLE Q NOT DECLARED IN SCOPE

LINE 68: TYPE MISMATCH ERROR OCCURED
LINE 68: ARRAY INDEX OUT OF BOUNDS 

LINE 72: FOR LOOP VARIABLE k CAN NOT BE DECLARED OR ASSIGNED AGAIN
LINE 77: VARIABLE 'A' ALREADY DECLARED 
LINE 79: VARIABLE E NOT DECLARED IN SCOPE

LINE 79: TYPE MISMATCH ERROR OCCURED
LINE 79: TYPE MISMATCH ERROR OCCURED
LINE 79: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 92: VARIABLE 'v_1_2_43' NOT DECLARED

LINE 95: VARIABLE k NOT DECLARED IN SCOPE

LINE 95: TYPE DID NOT MATCH FOR PARAM 'k'

LINE 97: VARIABLE 'B' ALREADY DECLARED 


					TRAVERSAL 1 ENDED 



LINE [16-23]: WHILE LOOP VARIABLE MUST BE ASSIGED VALUE ATLEAST ONCE

LINE 95: VARIABLE k NOT DECLARED IN SCOPE

LINE 95: TYPE DID NOT MATCH FOR PARAM 'k'


					TRAVERSAL 2 ENDED 









					PRINTING ACTIVATION RECORD SIZES 



		f1					176


		var_demo_array					98


		driver					87





		ACTION SUCCESSFUL, EXITING THE CODE


Enter your option: RUNNING PARSER

                      [32m FIRST AND FOLLOW AUTOMATED [0m

GIVEN SOURCE CODE IS SYNTACTICALLY CORRECT



LINE 15: VARIABLE h NOT DECLARED IN SCOPE

LINE 15: TYPE MISMATCH ERROR OCCURED
LINE 15: TYPE MISMATCH ERROR OCCURED

LINE 21: VARIABLE u NOT DECLARED IN SCOPE

LINE 21: TYPE MISMATCH ERROR OCCURED
LINE 25: VARIABLE 'b' ALREADY DECLARED 


LINE 45: VARIABLE D NOT DECLARED IN SCOPE

LINE 45: VARIABLE ON LEFT 'D' IS NOT DEFINED

LINE 51: VARIABLE p NOT DECLARED IN SCOPE

LINE 51: TYPE MISMATCH ERROR OCCURED
LINE 51: TYPE MISMATCH ERROR OCCURED
LINE 51: TYPE MISMATCH ERROR OCCURED
LINE 51: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH


LINE 59: VARIABLE Q NOT DECLARED IN SCOPE

LINE 59, VARIABLE 'Q' NOT DECLARED

LINE 59: CAN NOT ASSIGN VALUE TO AN ARRAY

LINE 62: ARRAY INDEX OUT OF BOUNDS 

LINE 63: VARIABLE 'B' ALREADY DECLARED 
LINE 66: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 68: ARRAY INDEX OUT OF BOUNDS 

LINE 68: VARIABLE Q NOT DECLARED IN SCOPE

LINE 68: TYPE MISMATCH ERROR OCCURED
LINE 68: ARRAY INDEX OUT OF BOUNDS 

LINE 72: FOR LOOP VARIABLE k CAN NOT BE DECLARED OR ASSIGNED AGAIN
LINE 77: VARIABLE 'A' ALREADY DECLARED 
LINE 79: VARIABLE E NOT DECLARED IN SCOPE

LINE 79: TYPE MISMATCH ERROR OCCURED
LINE 79: TYPE MISMATCH ERROR OCCURED
LINE 79: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 92: VARIABLE 'v_1_2_43' NOT DECLARED

LINE 95: VARIABLE k NOT DECLARED IN SCOPE

LINE 95: TYPE DID NOT MATCH FOR PARAM 'k'

LINE 97: VARIABLE 'B' ALREADY DECLARED 


					TRAVERSAL 1 ENDED 



LINE [16-23]: WHILE LOOP VARIABLE MUST BE ASSIGED VALUE ATLEAST ONCE

LINE 95: VARIABLE k NOT DECLARED IN SCOPE

LINE 95: TYPE DID NOT MATCH FOR PARAM 'k'


					TRAVERSAL 2 ENDED 









					PRINTING ARRAY RECORD SIZES 



f1		[32-81]		a		static		[10,30]		integer		

f1		[32-81]		b		static		[10,30]		integer		

f1		[32-81]		A		static		[4,10]		integer		

f1		[32-81]		B		static		[4,10]		integer		

f1		[32-81]		C		static		[10,30]		integer		

f1		[54-60]		B		static		[10,30]		integer		

f1		[54-60]		E		static		[4,10]		integer		

f1		[61-67]		A		static		[11,10]		real		

f1		[61-67]		B		static		[11,10]		real		

var_demo_array		[5-29]		m		static		[2,20]		integer		

var_demo_array		[5-29]		p		static		[2,20]		integer		

var_demo_array		[16-23]		b		static		[2,20]		integer		

driver		[85-98]		B		static		[2,20]		integer		

driver		[85-98]		C		static		[2,20]		integer		




		ACTION SUCCESSFUL, EXITING THE CODE


Enter your option: RUNNING PARSER

                      [32m FIRST AND FOLLOW AUTOMATED [0m

GIVEN SOURCE CODE IS SYNTACTICALLY CORRECT



LINE 15: VARIABLE h NOT DECLARED IN SCOPE

LINE 15: TYPE MISMATCH ERROR OCCURED
LINE 15: TYPE MISMATCH ERROR OCCURED

LINE 21: VARIABLE u NOT DECLARED IN SCOPE

LINE 21: TYPE MISMATCH ERROR OCCURED
LINE 25: VARIABLE 'b' ALREADY DECLARED 


LINE 45: VARIABLE D NOT DECLARED IN SCOPE

LINE 45: VARIABLE ON LEFT 'D' IS NOT DEFINED

LINE 51: VARIABLE p NOT DECLARED IN SCOPE

LINE 51: TYPE MISMATCH ERROR OCCURED
LINE 51: TYPE MISMATCH ERROR OCCURED
LINE 51: TYPE MISMATCH ERROR OCCURED
LINE 51: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH


LINE 59: VARIABLE Q NOT DECLARED IN SCOPE

LINE 59, VARIABLE 'Q' NOT DECLARED

LINE 59: CAN NOT ASSIGN VALUE TO AN ARRAY

LINE 62: ARRAY INDEX OUT OF BOUNDS 

LINE 63: VARIABLE 'B' ALREADY DECLARED 
LINE 66: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 68: ARRAY INDEX OUT OF BOUNDS 

LINE 68: VARIABLE Q NOT DECLARED IN SCOPE

LINE 68: TYPE MISMATCH ERROR OCCURED
LINE 68: ARRAY INDEX OUT OF BOUNDS 

LINE 72: FOR LOOP VARIABLE k CAN NOT BE DECLARED OR ASSIGNED AGAIN
LINE 77: VARIABLE 'A' ALREADY DECLARED 
LINE 79: VARIABLE E NOT DECLARED IN SCOPE

LINE 79: TYPE MISMATCH ERROR OCCURED
LINE 79: TYPE MISMATCH ERROR OCCURED
LINE 79: ERROR OCCURED WHILE ASSIGNMENT, LEFT AND RIGHT TYPES DID NOT MATCH

LINE 92: VARIABLE 'v_1_2_43' NOT DECLARED

LINE 95: VARIABLE k NOT DECLARED IN SCOPE

LINE 95: TYPE DID NOT MATCH FOR PARAM 'k'

LINE 97: VARIABLE 'B' ALREADY DECLARED 


					TRAVERSAL 1 ENDED 



LINE [16-23]: WHILE LOOP VARIABLE MUST BE ASSIGED VALUE ATLEAST ONCE

LINE 95: VARIABLE k NOT DECLARED IN SCOPE

LINE 95: TYPE DID NOT MATCH FOR PARAM 'k'


					TRAVERSAL 2 ENDED 



Clock Ticks = 5846.000000
The code took 0.005846 seconds.




		ACTION SUCCESSFUL, EXITING THE CODE


