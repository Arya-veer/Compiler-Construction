       declare            1            DECLARE     moduleDeclaration      YES

       ----------            moduleDeclaration             moduleDeclarations      NO

       module            1            MODULE     moduleDeclaration      YES

       $            1            ID     moduleDeclaration      YES

       ;            1            SEMICOL     moduleDeclaration      YES

       ----------            moduleDeclarations             program      NO

       epsilon     epsilon        moduleDeclarations      YES

       ----------            moduleDeclarations             moduleDeclarations      NO

       ----------            program             finalProgram      NO

       <<            3            DEF     module      YES

       ----------            module             otherModules      NO

       module            3            MODULE     module      YES

       $            3            ID     module      YES

       >>            3            ENDDEF     module      YES

       takes            4            TAKES     module      YES

       input            4            INPUT     module      YES

       [            4            SQBO     module      YES

       $            4            ID     input_plist      YES

       ----------            input_plist             module      NO

       :            4            COLON     input_plist      YES

       array            4            ARRAY     dataType      YES

       ----------            dataType             input_plist      NO

       [            4            SQBO     dataType      YES

       epsilon     epsilon        sign      YES

       ----------            sign             arrRange      NO

       ----------            arrRange             dataType      NO

       $            4            NUM            1     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

       ----------            leftFactored_arrRange             arrRange      NO

       ..            4            RANGEOP     leftFactored_arrRange      YES

       epsilon     epsilon        sign      YES

       ----------            sign             leftFactored_arrRange      NO

       $            4            NUM            15     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

       ]            4            SQBC     dataType      YES

       of            4            OF     dataType      YES

       real            4            REAL     type      YES

       ----------            type             dataType      NO

       ,            4            COMMA     leftFactored_input_plist      YES

       ----------            leftFactored_input_plist             input_plist      NO

       $            4            ID     leftFactored_input_plist      YES

Some Terminal Node with Error
       ----------            dataType             leftFactored_input_plist      NO

       epsilon     epsilon        leftFactored_input_plist      YES

       ----------            leftFactored_input_plist             leftFactored_input_plist      NO

       ]            4            SQBC     module      YES

       ;            4            SEMICOL     module      YES

       returns            5            RETURNS     ret      YES

       ----------            ret             module      NO

       [            5            SQBO     ret      YES

       $            5            ID     output_plist      YES

       ----------            output_plist             ret      NO

       :            5            COLON     output_plist      YES

       real            5            REAL     type      YES

       ----------            type             output_plist      NO

       epsilon     epsilon        leftFactored_output_plist      YES

       ----------            leftFactored_output_plist             output_plist      NO

       ]            5            SQBC     ret      YES

       ;            5            SEMICOL     ret      YES

       start            6            START     moduleDef      YES

       ----------            moduleDef             module      NO

       declare            7            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

       $            7            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

       :            7            COLON     declareStmt      YES

       integer            7            INTEGER     dataType      YES

       ----------            dataType             declareStmt      NO

       ;            7            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             moduleDef      NO

       declare            8            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

       $            8            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

       :            8            COLON     declareStmt      YES

       boolean            8            BOOLEAN     dataType      YES

       ----------            dataType             declareStmt      NO

       ;            8            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       $            9            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       for            10            FOR     iterativeStmt      YES

       ----------            iterativeStmt             statement      NO

       (            10            BO     iterativeStmt      YES

       $            10            ID     iterativeStmt      YES

Some Terminal Node with Error
       epsilon     epsilon        sign      YES

       ----------            sign             iterativeStmt      NO

Some Terminal Node with Error
Some Terminal Node with Error
       epsilon     epsilon        sign      YES

       ----------            sign             iterativeStmt      NO

Some Terminal Node with Error
Some Terminal Node with Error
Some Terminal Node with Error
       switch            13            SWITCH     conditionalStmt      YES

       ----------            conditionalStmt             statement      NO

       (            13            BO     conditionalStmt      YES

       $            13            ID     conditionalStmt      YES

       )            13            BC     conditionalStmt      YES

       start            14            START     conditionalStmt      YES

       case            15            CASE     caseStmt      YES

       ----------            caseStmt             conditionalStmt      NO

       true            15            true     boolValues      YES

       ----------            boolValues             value      NO

       ----------            value             caseStmt      NO

       :            15            COLON     caseStmt      YES

       print            15            PRINT     ioStmt      YES

       ----------            ioStmt             statement      NO

       (            15            BO     ioStmt      YES

       $            15            ID     var      YES

       ----------            var             leftFactored_ioStmt      NO

       [            15            SQBO     whichId      YES

       ----------            whichId             var      NO

       epsilon     epsilon        sign      YES

       ----------            sign             whichId      NO

       $            15            ID     leftFactored_whichId      YES

       ----------            leftFactored_whichId             whichId      NO

       ]            15            SQBC     leftFactored_whichId      YES

       ----------            leftFactored_ioStmt             ioStmt      NO

       )            15            BC     leftFactored_ioStmt      YES

       ;            15            SEMICOL     leftFactored_ioStmt      YES

       ----------            statement             statements      NO

       ----------            statements             caseStmt      NO

       $            16            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

       :=            16            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

       $            16            ID     signedParam      YES

       ----------            signedParam             param      NO

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

Some Terminal Node with Error
       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       print            19            PRINT     ioStmt      YES

       ----------            ioStmt             statement      NO

       (            19            BO     ioStmt      YES

       $            19            ID     var      YES

       ----------            var             leftFactored_ioStmt      NO

       epsilon     epsilon        whichId      YES

       ----------            whichId             var      NO

       ----------            leftFactored_ioStmt             ioStmt      NO

       )            19            BC     leftFactored_ioStmt      YES

       ;            19            SEMICOL     leftFactored_ioStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       epsilon     epsilon        statements      YES

       ----------            statements             statements      NO

       break            21            BREAK     caseStmt      YES

       ;            21            SEMICOL     caseStmt      YES

       epsilon     epsilon        leftFactored_caseStmt      YES

       ----------            leftFactored_caseStmt             caseStmt      NO

       epsilon     epsilon        dfault      YES

       ----------            dfault             conditionalStmt      NO

       end            22            END     conditionalStmt      YES

       ----------            statement             statements      NO

       ----------            statements             iterativeStmt      NO

       epsilon     epsilon        statements      YES

       ----------            statements             statements      NO

       end            24            END     iterativeStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       print            25            PRINT     ioStmt      YES

       ----------            ioStmt             statement      NO

       (            25            BO     ioStmt      YES

       ----------            leftFactored_ioStmt             ioStmt      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       epsilon     epsilon        statements      YES

       ----------            statements             statements      NO

       end            26            END     moduleDef      YES

       ----------            otherModules             program      NO

       epsilon     epsilon        otherModules      YES

       ----------            otherModules             otherModules      NO

       <<<            27            DRIVERDEF     driverModule      YES

       ----------            driverModule             program      NO

       driver            27            DRIVER     driverModule      YES

       program            27            PROGRAM     driverModule      YES

       >>>            27            DRIVERENDDEF     driverModule      YES

       start            28            START     moduleDef      YES

       ----------            moduleDef             driverModule      NO

       declare            29            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

       $            29            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

       :            29            COLON     declareStmt      YES

       array            29            ARRAY     dataType      YES

       ----------            dataType             declareStmt      NO

       [            29            SQBO     dataType      YES

       epsilon     epsilon        sign      YES

       ----------            sign             arrRange      NO

       ----------            arrRange             dataType      NO

       $            29            NUM            1     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

       ----------            leftFactored_arrRange             arrRange      NO

       ..            29            RANGEOP     leftFactored_arrRange      YES

       epsilon     epsilon        sign      YES

       ----------            sign             leftFactored_arrRange      NO

       $            29            NUM            15     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

       ]            29            SQBC     dataType      YES

       of            29            OF     dataType      YES

       real            29            REAL     type      YES

       ----------            type             dataType      NO

       ;            29            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             moduleDef      NO

       declare            30            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

       $            30            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

       :            30            COLON     declareStmt      YES

       integer            30            INTEGER     dataType      YES

       ----------            dataType             declareStmt      NO

       ;            30            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       declare            31            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

       $            31            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

       :            31            COLON     declareStmt      YES

       real            31            REAL     dataType      YES

       ----------            dataType             declareStmt      NO

       ;            31            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       get_value            32            GET_VALUE     ioStmt      YES

       ----------            ioStmt             statement      NO

       (            32            BO     ioStmt      YES

       $            32            ID     ioStmt      YES

       )            32            BC     ioStmt      YES

       ;            32            SEMICOL     ioStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       epsilon     epsilon        optional      YES

       ----------            optional             moduleReuseStmt      NO

       ----------            moduleReuseStmt             simpleStmt      NO

       use            33            USE     moduleReuseStmt      YES

       module            33            MODULE     moduleReuseStmt      YES

       $            33            ID     moduleReuseStmt      YES

Some Terminal Node with Error
Some Terminal Node with Error
       ----------            paramList             moduleReuseStmt      NO

Some Terminal Node with Error
       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       $            35            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

       :=            35            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

       $            35            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       <=            35            LE     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

       $            35            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            arithmeticBooleanExpr             expression      NO

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

Some Terminal Node with Error
       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       print            36            PRINT     ioStmt      YES

       ----------            ioStmt             statement      NO

       (            36            BO     ioStmt      YES

       $            36            ID     var      YES

       ----------            var             leftFactored_ioStmt      NO

       epsilon     epsilon        whichId      YES

       ----------            whichId             var      NO

       ----------            leftFactored_ioStmt             ioStmt      NO

       )            36            BC     leftFactored_ioStmt      YES

Some Terminal Node with Error
       ----------            statement             statements      NO

       ----------            statements             statements      NO

       epsilon     epsilon        statements      YES

       ----------            statements             statements      NO

       end            37            END     moduleDef      YES

       <<            44            DEF     module      YES

       ----------            module             otherModules      NO

       module            44            MODULE     module      YES

       $            44            ID     module      YES

       >>            44            ENDDEF     module      YES

       takes            45            TAKES     module      YES

       input            45            INPUT     module      YES

       [            45            SQBO     module      YES

       $            45            ID     input_plist      YES

       ----------            input_plist             module      NO

       :            45            COLON     input_plist      YES

       array            45            ARRAY     dataType      YES

       ----------            dataType             input_plist      NO

       [            45            SQBO     dataType      YES

       epsilon     epsilon        sign      YES

       ----------            sign             arrRange      NO

       ----------            arrRange             dataType      NO

       $            45            NUM            1     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

       ----------            leftFactored_arrRange             arrRange      NO

       ..            45            RANGEOP     leftFactored_arrRange      YES

       epsilon     epsilon        sign      YES

       ----------            sign             leftFactored_arrRange      NO

       $            45            NUM            15     idNum      YES

       ----------            idNum             leftFactored_arrRange      NO

       ]            45            SQBC     dataType      YES

       of            45            OF     dataType      YES

       real            45            REAL     type      YES

       ----------            type             dataType      NO

       ,            45            COMMA     leftFactored_input_plist      YES

       ----------            leftFactored_input_plist             input_plist      NO

       $            45            ID     leftFactored_input_plist      YES

       :            45            COLON     leftFactored_input_plist      YES

       integer            45            INTEGER     dataType      YES

       ----------            dataType             leftFactored_input_plist      NO

       epsilon     epsilon        leftFactored_input_plist      YES

       ----------            leftFactored_input_plist             leftFactored_input_plist      NO

       ]            45            SQBC     module      YES

       ;            45            SEMICOL     module      YES

       epsilon     epsilon        ret      YES

       ----------            ret             module      NO

       start            46            START     moduleDef      YES

       ----------            moduleDef             module      NO

       declare            47            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

       $            47            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

       :            47            COLON     declareStmt      YES

       ----------            dataType             declareStmt      NO

Some Terminal Node with Error
       ----------            statement             statements      NO

       ----------            statements             moduleDef      NO

       declare            48            DECLARE     declareStmt      YES

       ----------            declareStmt             statement      NO

       $            48            ID     idList      YES

       ----------            idList             declareStmt      NO

       epsilon     epsilon        leftFactored_idList      YES

       ----------            leftFactored_idList             idList      NO

       :            48            COLON     declareStmt      YES

       integer            48            INTEGER     dataType      YES

       ----------            dataType             declareStmt      NO

       ;            48            SEMICOL     declareStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       $            49            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

       :=            49            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

       $            49            NUM            1     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

       ;            49            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       while            50            WHILE     iterativeStmt      YES

       ----------            iterativeStmt             statement      NO

       (            50            BO     iterativeStmt      YES

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

       $            50            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       <=            50            LE     relationalOp      YES

       ----------            relationalOp             relationalTerm      NO

       ----------            relationalTerm             anyTerm      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

       $            50            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             relationalTerm      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       ----------            arithmeticBooleanExpr             iterativeStmt      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       )            50            BC     iterativeStmt      YES

       start            51            START     iterativeStmt      YES

       get_value            52            GET_VALUE     ioStmt      YES

       ----------            ioStmt             statement      NO

       (            52            BO     ioStmt      YES

       $            52            ID     ioStmt      YES

       )            52            BC     ioStmt      YES

       ;            52            SEMICOL     ioStmt      YES

       ----------            statement             statements      NO

       ----------            statements             iterativeStmt      NO

       $            53            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

       [            53            SQBO     lvalueARRStmt      YES

       ----------            lvalueARRStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

       $            53            ID     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       epsilon     epsilon        leftFactored_termWArr      YES

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             lvalueARRStmt      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

       ]            53            SQBC     lvalueARRStmt      YES

       :=            53            ASSIGNOP     lvalueARRStmt      YES

       ----------            expression             lvalueARRStmt      NO

Some Terminal Node with Error
       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       print            54            PRINT     ioStmt      YES

       ----------            ioStmt             statement      NO

       (            54            BO     ioStmt      YES

       $            54            ID     var      YES

       ----------            var             leftFactored_ioStmt      NO

       [            54            SQBO     whichId      YES

       ----------            whichId             var      NO

       epsilon     epsilon        sign      YES

       ----------            sign             whichId      NO

       $            54            ID     leftFactored_whichId      YES

       ----------            leftFactored_whichId             whichId      NO

Some Terminal Node with Error
       ----------            leftFactored_ioStmt             ioStmt      NO

Some Terminal Node with Error
Some Terminal Node with Error
       ----------            statement             statements      NO

       ----------            statements             statements      NO

       $            55            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

       :=            55            ASSIGNOP     lvalueIDStmt      YES

       ----------            lvalueIDStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

       $            55            ID     signedParam      YES

       ----------            signedParam             param      NO

       epsilon     epsilon        arrID      YES

       ----------            arrID             signedParam      NO

       ----------            factor             term      NO

       ----------            term             arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       ----------            arithmeticExpr             anyTerm      NO

       +            55            PLUS     pm      YES

       ----------            pm             leftFactored_arithmeticExpr      NO

       ----------            leftFactored_arithmeticExpr             arithmeticExpr      NO

       epsilon     epsilon        sign      YES

       ----------            sign             param      NO

       ----------            param             factor      NO

       $            55            NUM            1     signedParam      YES

       ----------            signedParam             param      NO

       ----------            factor             term      NO

       ----------            term             leftFactored_arithmeticExpr      NO

       epsilon     epsilon        leftFactored_term      YES

       ----------            leftFactored_term             term      NO

       epsilon     epsilon        leftFactored_arithmeticExpr      YES

       ----------            leftFactored_arithmeticExpr             leftFactored_arithmeticExpr      NO

       ----------            anyTerm             arithmeticBooleanExpr      NO

       epsilon     epsilon        relationalTerm      YES

       ----------            relationalTerm             anyTerm      NO

       ----------            arithmeticBooleanExpr             expression      NO

       epsilon     epsilon        logicalTerm      YES

       ----------            logicalTerm             arithmeticBooleanExpr      NO

       ----------            expression             lvalueIDStmt      NO

       ;            55            SEMICOL     lvalueIDStmt      YES

       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       $            56            ID     assignmentStmt      YES

       ----------            assignmentStmt             simpleStmt      NO

       [            56            SQBO     lvalueARRStmt      YES

       ----------            lvalueARRStmt             whichStmt      NO

       epsilon     epsilon        sign      YES

       ----------            sign             signedFactorWArr      NO

       ----------            signedFactorWArr             termWArr      NO

       $            56            ID     factorWArr      YES

       ----------            factorWArr             signedFactorWArr      NO

       ----------            termWArr             arithmeticExprWArr      NO

       ----------            leftFactored_termWArr             termWArr      NO

       ----------            arithmeticExprWArr             lvalueARRStmt      NO

       epsilon     epsilon        leftFactored_arithmeticExprWArr      YES

       ----------            leftFactored_arithmeticExprWArr             arithmeticExprWArr      NO

       ]            56            SQBC     lvalueARRStmt      YES

Some Terminal Node with Error
       ----------            expression             lvalueARRStmt      NO

Some Terminal Node with Error
       ----------            whichStmt             assignmentStmt      NO

       ----------            simpleStmt             statement      NO

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       epsilon     epsilon        statements      YES

       ----------            statements             statements      NO

       end            58            END     iterativeStmt      YES

       ----------            statement             statements      NO

       ----------            statements             statements      NO

       epsilon     epsilon        statements      YES

       ----------            statements             statements      NO

       end            59            END     moduleDef      YES

       ----------            otherModules             program      NO

       epsilon     epsilon        otherModules      YES

       ----------            otherModules             otherModules      NO

       ----------            finalProgram           ROOT	      NO

