RULES ADDED
PARSE TABLE FILLED WITH -1

PARSE TABLE POPULATED

TWIN BUFFER INITIALIZED

STACK CREATED
LINE NO: 1	LEXEME: declare	TOKEN: declare

TOKEN GIVEN BY DFA IS DECLARE
SIZE OF STACK IS 2
Popped Non Terminal program
SIZE OF STACK IS 5
Popped Non Terminal moduleDeclarations
SIZE OF STACK IS 6
Popped Non Terminal moduleDeclaration
SIZE OF STACK IS 9
Popped Terminal DECLARE
LEAF NODE ADDED
LINE NO: 1	LEXEME: module	TOKEN: module
TOKEN GIVEN BY DFA IS MODULE
SIZE OF STACK IS 8
Popped Terminal MODULE
LEAF NODE ADDED
LINE NO: 1	LEXEME: mod1	TOKEN: ID
TOKEN GIVEN BY DFA IS ID
SIZE OF STACK IS 7
Popped Terminal ID
LEAF NODE ADDED
LINE NO: 1	LEXEME: ;	TOKEN: ;
TOKEN GIVEN BY DFA IS SEMICOL
SIZE OF STACK IS 6
Popped Terminal SEMICOL
LEAF NODE ADDED
LINE NO: 2	LEXEME: <<<	TOKEN: <<<
TOKEN GIVEN BY DFA IS DRIVERDEF
SIZE OF STACK IS 5
Popped Non Terminal moduleDeclarations
SIZE OF STACK IS 4
Popped Non Terminal otherModules
SIZE OF STACK IS 3
Popped Non Terminal driverModule
SIZE OF STACK IS 7
Popped Terminal DRIVERDEF
LEAF NODE ADDED
LINE NO: 2	LEXEME: driver	TOKEN: driver
TOKEN GIVEN BY DFA IS DRIVER
SIZE OF STACK IS 6
Popped Terminal DRIVER
LEAF NODE ADDED
LINE NO: 2	LEXEME: program	TOKEN: program
TOKEN GIVEN BY DFA IS PROGRAM
SIZE OF STACK IS 5
Popped Terminal PROGRAM
LEAF NODE ADDED
LINE NO: 2	LEXEME: >>>	TOKEN: >>>
TOKEN GIVEN BY DFA IS DRIVERENDDEF
SIZE OF STACK IS 4
Popped Terminal DRIVERENDDEF
LEAF NODE ADDED
LINE NO: 3	LEXEME: start	TOKEN: start
TOKEN GIVEN BY DFA IS START
SIZE OF STACK IS 3
Popped Non Terminal moduleDef
SIZE OF STACK IS 5
Popped Terminal START
LEAF NODE ADDED
LINE NO: 4	LEXEME: declare	TOKEN: declare
TOKEN GIVEN BY DFA IS DECLARE
SIZE OF STACK IS 4
Popped Non Terminal statements
SIZE OF STACK IS 5
Popped Non Terminal statement
SIZE OF STACK IS 5
Popped Non Terminal declareStmt
SIZE OF STACK IS 9
Popped Terminal DECLARE
LEAF NODE ADDED
LINE NO: 4	LEXEME: v	TOKEN: ID
TOKEN GIVEN BY DFA IS ID
SIZE OF STACK IS 8
Popped Non Terminal idList
SIZE OF STACK IS 9
Popped Terminal ID
LEAF NODE ADDED
LINE NO: 4	LEXEME: ,	TOKEN: ,
TOKEN GIVEN BY DFA IS COMMA
SIZE OF STACK IS 8
Popped Non Terminal leftFactored_idList
SIZE OF STACK IS 10
Popped Terminal COMMA
LEAF NODE ADDED
LINE NO: 4	LEXEME: w	TOKEN: ID
TOKEN GIVEN BY DFA IS ID
SIZE OF STACK IS 9
Popped Terminal ID
LEAF NODE ADDED
LINE NO: 4	LEXEME: ,	TOKEN: ,
TOKEN GIVEN BY DFA IS COMMA
SIZE OF STACK IS 8
Popped Non Terminal leftFactored_idList
SIZE OF STACK IS 10
Popped Terminal COMMA
LEAF NODE ADDED
Lexical Error occured at line 4, "qwertyuiopasdfghjklzxcvbnm" , Variable Length can not be more than 20
LINE NO: 4	LEXEME: :	TOKEN: :
TOKEN GIVEN BY DFA IS COLON
SIZE OF STACK IS 9
Popped Terminal ID
!!!!!!!!!!!!!!!!!!!!!!!
 At line 4, PARSER GOT INVALID TOKEN COLON
LINE NO: 4	LEXEME: integer	TOKEN: integer
!!!!!!!!!!!!!!!!!!!!!!!
 At line 4, ERROR OF TYPE 4 OCCURED
INPUT IS YET TO BE PROCESSED INTEGER
